{
	"id": "fbeb8964fa4bf7bbc253cec1c20e07d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Vault/EvolleVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File @openzeppelin/contracts/math/SafeMath.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n\n\n// File @openzeppelin/contracts/utils/Address.sol@v3.4.2\n\n\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/SafeERC20.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/access/Ownable.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/ReentrancyGuard.sol@v3.4.2\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n\n\n\n\n\npragma solidity ^0.6.0;\ninterface IStrategy {\n    function vault() external view returns (address);\n    function want() external view returns (IERC20);\n    function beforeDeposit() external;\n    function deposit() external;\n    function withdraw(uint256) external;\n    function balanceOf() external view returns (uint256);\n    function balanceOfWant() external view returns (uint256);\n    function balanceOfPool() external view returns (uint256);\n    function harvest() external;\n    function retireStrat() external;\n    function panic() external;\n    function pause() external;\n    function unpause() external;\n    function paused() external view returns (bool);\n    function unirouter() external view returns (address);\n}\n\n\n\n\npragma solidity ^0.6.0;\n/**\n * @dev Implementation of a vault to deposit funds for yield optimizing.\n * This is the contract that receives funds and that users interface with.\n * The yield optimizing strategy itself is implemented in a separate 'Strategy.sol' contract.\n */\ncontract EvolleVault is ERC20, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    struct StratCandidate {\n        address implementation;\n        uint proposedTime;\n    }\n\n    // The last proposed strategy to switch to.\n    StratCandidate public stratCandidate;\n    // The strategy currently in use by the vault.\n    IStrategy public strategy;\n    // The minimum time it has to pass before a strat candidate can be approved.\n    uint256 public immutable approvalDelay;\n\n    event NewStratCandidate(address implementation);\n    event UpgradeStrat(address implementation);\n\n    /**\n     * @dev Sets the value of {token} to the token that the vault will\n     * hold as underlying value. It initializes the vault's own 'moo' token.\n     * This token is minted when someone does a deposit. It is burned in order\n     * to withdraw the corresponding portion of the underlying assets.\n     * @param _strategy the address of the strategy.\n     * @param _name the name of the vault token.\n     * @param _symbol the symbol of the vault token.\n     * @param _approvalDelay the delay before a new strat can be approved.\n     */\n    constructor (\n        IStrategy _strategy,\n        string memory _name,\n        string memory _symbol,\n        uint256 _approvalDelay\n    ) public ERC20(\n        _name,\n        _symbol\n    ) {\n        strategy = _strategy;\n        approvalDelay = _approvalDelay;\n    }\n\n    function want() public view returns (IERC20) {\n        return IERC20(strategy.want());\n    }\n\n    /**\n     * @dev It calculates the total underlying value of {token} held by the system.\n     * It takes into account the vault contract balance, the strategy contract balance\n     *  and the balance deployed in other contracts as part of the strategy.\n     */\n    function balance() public view returns (uint) {\n        return want().balanceOf(address(this)).add(IStrategy(strategy).balanceOf());\n    }\n\n    /**\n     * @dev Custom logic in here for how much the vault allows to be borrowed.\n     * We return 100% of tokens for now. Under certain conditions we might\n     * want to keep some of the system funds at hand in the vault, instead\n     * of putting them to work.\n     */\n    function available() public view returns (uint256) {\n        return want().balanceOf(address(this));\n    }\n\n    /**\n     * @dev Function for various UIs to display the current value of one of our yield tokens.\n     * Returns an uint256 with 18 decimals of how much underlying asset one vault share represents.\n     */\n    function getPricePerFullShare() public view returns (uint256) {\n        return totalSupply() == 0 ? 1e18 : balance().mul(1e18).div(totalSupply());\n    }\n\n    /**\n     * @dev A helper function to call deposit() with all the sender's funds.\n     */\n    function depositAll() external {\n        deposit(want().balanceOf(msg.sender));\n    }\n\n    /**\n     * @dev The entrypoint of funds into the system. People deposit with this function\n     * into the vault. The vault is then in charge of sending funds into the strategy.\n     */\n    function deposit(uint _amount) public nonReentrant {\n        strategy.beforeDeposit();\n\n        uint256 _pool = balance();\n        want().safeTransferFrom(msg.sender, address(this), _amount);\n        earn();\n        uint256 _after = balance();\n        _amount = _after.sub(_pool); // Additional check for deflationary tokens\n        uint256 shares = 0;\n        if (totalSupply() == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount.mul(totalSupply())).div(_pool);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    /**\n     * @dev Function to send funds into the strategy and put them to work. It's primarily called\n     * by the vault's deposit() function.\n     */\n    function earn() public {\n        uint _bal = available();\n        want().safeTransfer(address(strategy), _bal);\n        strategy.deposit();\n    }\n\n    /**\n     * @dev A helper function to call withdraw() with all the sender's funds.\n     */\n    function withdrawAll() external {\n        withdraw(balanceOf(msg.sender));\n    }\n\n    /**\n     * @dev Function to exit the system. The vault will withdraw the required tokens\n     * from the strategy and pay up the token holder. A proportional number of IOU\n     * tokens are burned in the process.\n     */\n    function withdraw(uint256 _shares) public {\n        uint256 r = (balance().mul(_shares)).div(totalSupply());\n        _burn(msg.sender, _shares);\n\n        uint b = want().balanceOf(address(this));\n        if (b < r) {\n            uint _withdraw = r.sub(b);\n            strategy.withdraw(_withdraw);\n            uint _after = want().balanceOf(address(this));\n            uint _diff = _after.sub(b);\n            if (_diff < _withdraw) {\n                r = b.add(_diff);\n            }\n        }\n\n        want().safeTransfer(msg.sender, r);\n    }\n\n    /** \n     * @dev Sets the candidate for the new strat to use with this vault.\n     * @param _implementation The address of the candidate strategy.  \n     */\n    function proposeStrat(address _implementation) public onlyOwner {\n        require(address(this) == IStrategy(_implementation).vault(), \"Proposal not valid for this Vault\");\n        stratCandidate = StratCandidate({\n            implementation: _implementation,\n            proposedTime: block.timestamp\n         });\n\n        emit NewStratCandidate(_implementation);\n    }\n\n    /** \n     * @dev It switches the active strat for the strat candidate. After upgrading, the \n     * candidate implementation is set to the 0x00 address, and proposedTime to a time \n     * happening in +100 years for safety. \n     */\n\n    function upgradeStrat() public onlyOwner {\n        require(stratCandidate.implementation != address(0), \"There is no candidate\");\n        require(stratCandidate.proposedTime.add(approvalDelay) < block.timestamp, \"Delay has not passed\");\n\n        emit UpgradeStrat(stratCandidate.implementation);\n\n        strategy.retireStrat();\n        strategy = IStrategy(stratCandidate.implementation);\n        stratCandidate.implementation = address(0);\n        stratCandidate.proposedTime = 5000000000;\n\n        earn();\n    }\n\n    /**\n     * @dev Rescues random funds stuck that the strat can't handle.\n     * @param _token address of the token to rescue.\n     */\n    function inCaseTokensGetStuck(address _token) external onlyOwner {\n        require(_token != address(want()), \"!token\");\n\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n        IERC20(_token).safeTransfer(msg.sender, amount);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Vault/EvolleVault.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault/EvolleVault.sol\":21835:29519  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault/EvolleVault.sol\":21835:29519  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ef2fca2f8d82358b0c848d1a2a22899b5b31bcab90626eb88cf77963aed4718764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2fca2f8d82358b0c848d1a2a22899b5b31bcab90626eb88cf77963aed4718764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2F 0xCA 0x2F DUP14 DUP3 CALLDATALOAD DUP12 0xC DUP5 DUP14 BYTE 0x2A 0x22 DUP10 SWAP12 JUMPDEST BALANCE 0xBC 0xAB SWAP1 PUSH3 0x6EB88C 0xF7 PUSH26 0x63AED4718764736F6C634300060C003300000000000000000000 ",
							"sourceMap": "21835:7684:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2fca2f8d82358b0c848d1a2a22899b5b31bcab90626eb88cf77963aed4718764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2F 0xCA 0x2F DUP14 DUP3 CALLDATALOAD DUP12 0xC DUP5 DUP14 BYTE 0x2A 0x22 DUP10 SWAP12 JUMPDEST BALANCE 0xBC 0xAB SWAP1 PUSH3 0x6EB88C 0xF7 PUSH26 0x63AED4718764736F6C634300060C003300000000000000000000 ",
							"sourceMap": "21835:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21835,
									"end": 29519,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef2fca2f8d82358b0c848d1a2a22899b5b31bcab90626eb88cf77963aed4718764736f6c634300060c0033",
									".code": [
										{
											"begin": 21835,
											"end": 29519,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 29519,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault/EvolleVault.sol\":12197:21671  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Vault/EvolleVault.sol\":12834:12979  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"Vault/EvolleVault.sol\":12908:12921  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"Vault/EvolleVault.sol\":12908:12913  _name */\n  0x03\n  swap1\n    /* \"Vault/EvolleVault.sol\":12908:12921  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"Vault/EvolleVault.sol\":12931:12948  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"Vault/EvolleVault.sol\":12931:12938  _symbol */\n  0x04\n  swap1\n    /* \"Vault/EvolleVault.sol\":12931:12948  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"Vault/EvolleVault.sol\":12958:12967  _decimals */\n  0x05\n    /* \"Vault/EvolleVault.sol\":12958:12972  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Vault/EvolleVault.sol\":12970:12972  18 */\n  0x12\n    /* \"Vault/EvolleVault.sol\":12958:12972  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"Vault/EvolleVault.sol\":12197:21671  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault/EvolleVault.sol\":12197:21671  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":16465:16680  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":13246:13339  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":17167:17433  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14603:14775  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      0x03\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":13089:13102  string memory */\n      0x60\n      swap4\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      swap1\n      swap3\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      swap1\n      swap2\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup4\n      add\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      dup3\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"Vault/EvolleVault.sol\":15203:15207  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":15219:15258  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"Vault/EvolleVault.sol\":15228:15240  _msgSender() */\n      tag_58\n        /* \"Vault/EvolleVault.sol\":15228:15238  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":15228:15240  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"Vault/EvolleVault.sol\":15242:15249  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15251:15257  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15219:15227  _approve */\n      tag_60\n        /* \"Vault/EvolleVault.sol\":15219:15258  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"Vault/EvolleVault.sol\":15275:15279  true */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"Vault/EvolleVault.sol\":14198:14210  _totalSupply */\n      sload(0x02)\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"Vault/EvolleVault.sol\":15859:15863  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":15875:15911  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"Vault/EvolleVault.sol\":15885:15891  sender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15893:15902  recipient */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15904:15910  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15875:15884  _transfer */\n      tag_64\n        /* \"Vault/EvolleVault.sol\":15875:15911  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"Vault/EvolleVault.sol\":15921:16042  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"Vault/EvolleVault.sol\":15930:15936  sender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15938:15950  _msgSender() */\n      tag_66\n        /* \"Vault/EvolleVault.sol\":15938:15948  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":15938:15950  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"Vault/EvolleVault.sol\":15990:15996  amount */\n      dup6\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":15952:15971  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":15952:15963  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15952:15971  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Vault/EvolleVault.sol\":15972:15984  _msgSender() */\n      tag_68\n        /* \"Vault/EvolleVault.sol\":15972:15982  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":15972:15984  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":15952:15985  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":15952:15989  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"Vault/EvolleVault.sol\":15921:15929  _approve */\n      tag_60\n        /* \"Vault/EvolleVault.sol\":15921:16042  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"Vault/EvolleVault.sol\":16059:16063  true */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"Vault/EvolleVault.sol\":14035:14044  _decimals */\n      and(0xff, sload(0x05))\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":16465:16680  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"Vault/EvolleVault.sol\":16553:16557  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":16569:16652  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"Vault/EvolleVault.sol\":16578:16590  _msgSender() */\n      tag_73\n        /* \"Vault/EvolleVault.sol\":16578:16588  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":16578:16590  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"Vault/EvolleVault.sol\":16592:16599  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":16601:16651  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"Vault/EvolleVault.sol\":16640:16650  addedValue */\n      dup6\n        /* \"Vault/EvolleVault.sol\":16601:16612  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":16601:16626  _allowances[_msgSender()] */\n      0x00\n        /* \"Vault/EvolleVault.sol\":16613:16625  _msgSender() */\n      tag_75\n        /* \"Vault/EvolleVault.sol\":16613:16623  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":16613:16625  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":16601:16626  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Vault/EvolleVault.sol\":16601:16635  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":16601:16639  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"Vault/EvolleVault.sol\":16601:16651  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":14375:14393  _balances[account] */\n      and\n        /* \"Vault/EvolleVault.sol\":14349:14356  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14375:14393  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":13246:13339  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      0x04\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":13293:13306  string memory */\n      0x60\n      swap4\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      swap1\n      swap3\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      swap1\n      swap2\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup4\n      add\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      dup3\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"Vault/EvolleVault.sol\":17167:17433  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"Vault/EvolleVault.sol\":17260:17264  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":17276:17405  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"Vault/EvolleVault.sol\":17285:17297  _msgSender() */\n      tag_84\n        /* \"Vault/EvolleVault.sol\":17285:17295  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":17285:17297  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Vault/EvolleVault.sol\":17299:17306  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"Vault/EvolleVault.sol\":17347:17362  subtractedValue */\n      dup6\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Vault/EvolleVault.sol\":17308:17319  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":17308:17333  _allowances[_msgSender()] */\n      0x00\n        /* \"Vault/EvolleVault.sol\":17320:17332  _msgSender() */\n      tag_86\n        /* \"Vault/EvolleVault.sol\":17320:17330  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":17320:17332  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":17308:17333  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Vault/EvolleVault.sol\":17308:17342  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":17308:17346  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14603:14775  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"Vault/EvolleVault.sol\":14689:14693  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14705:14747  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"Vault/EvolleVault.sol\":14715:14727  _msgSender() */\n      tag_89\n        /* \"Vault/EvolleVault.sol\":14715:14725  _msgSender */\n      tag_59\n        /* \"Vault/EvolleVault.sol\":14715:14727  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Vault/EvolleVault.sol\":14729:14738  recipient */\n      dup5\n        /* \"Vault/EvolleVault.sol\":14740:14746  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":14705:14714  _transfer */\n      tag_64\n        /* \"Vault/EvolleVault.sol\":14705:14747  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":14922:14929  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":14948:14959  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Vault/EvolleVault.sol\":14948:14975  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"Vault/EvolleVault.sol\":685:695  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":20231:20571  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20332:20351  owner != address(0) */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":20324:20392  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20410:20431  spender != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":20402:20470  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20481:20499  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":20481:20492  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":20481:20499  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Vault/EvolleVault.sol\":20481:20508  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Vault/EvolleVault.sol\":20481:20517  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Vault/EvolleVault.sol\":20532:20564  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":20231:20571  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":17907:18437  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18012:18032  sender != address(0) */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":18004:18074  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18092:18115  recipient != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":18084:18155  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Vault/EvolleVault.sol\":18166:18213  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"Vault/EvolleVault.sol\":18187:18193  sender */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18195:18204  recipient */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18206:18212  amount */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18166:18186  _beforeTokenTransfer */\n      tag_99\n        /* \"Vault/EvolleVault.sol\":18166:18213  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"Vault/EvolleVault.sol\":18266:18272  amount */\n      dup2\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18244:18261  _balances[sender] */\n      dup7\n      and\n        /* \"Vault/EvolleVault.sol\":18244:18253  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18244:18261  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":18244:18265  _balances[sender].sub */\n      tag_69\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18224:18241  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Vault/EvolleVault.sol\":18224:18233  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18224:18241  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Vault/EvolleVault.sol\":18224:18315  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Vault/EvolleVault.sol\":18348:18368  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Vault/EvolleVault.sol\":18348:18380  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"Vault/EvolleVault.sol\":18373:18379  amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":18348:18372  _balances[recipient].add */\n      tag_76\n        /* \"Vault/EvolleVault.sol\":18348:18380  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"Vault/EvolleVault.sol\":18325:18334  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Vault/EvolleVault.sol\":18325:18380  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Vault/EvolleVault.sol\":18395:18430  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Vault/EvolleVault.sol\":18395:18430  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":17907:18437  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":9140:9303  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"Vault/EvolleVault.sol\":9226:9233  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":9261:9273  errorMessage */\n      dup2\n        /* \"Vault/EvolleVault.sol\":9253:9259  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Vault/EvolleVault.sol\":9245:9274  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":9291:9296  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Vault/EvolleVault.sol\":9140:9303  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":6398:6573  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"Vault/EvolleVault.sol\":6456:6463  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":6487:6492  a + b */\n      dup3\n      dup3\n      add\n        /* \"Vault/EvolleVault.sol\":6510:6516  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Vault/EvolleVault.sol\":6502:6548  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"Vault/EvolleVault.sol\":6565:6566  c */\n      swap4\n        /* \"Vault/EvolleVault.sol\":6398:6573  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":21577:21669  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220da6e8f7eb1ffe598324e2a00300e659266eb4b6f9566b66efa47068be592b18d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c6238038062000c628339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109f280620002706000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220da6e8f7eb1ffe598324e2a00300e659266eb4b6f9566b66efa47068be592b18d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC62 CODESIZE SUB DUP1 PUSH3 0xC62 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x20E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x220 JUMP JUMPDEST POP PUSH2 0x247 SWAP3 SWAP2 POP PUSH2 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x9F2 DUP1 PUSH3 0x270 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DA6E DUP16 PUSH31 0xB1FFE598324E2A00300E659266EB4B6F9566B66EFA47068BE592B18D64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "12197:9474:0:-:0;;;12834:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12834:145:0;;;;;;;;;;-1:-1:-1;12834:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12834:145:0;;;;;;;;;;-1:-1:-1;12834:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12834:145:0;;-1:-1:-1;;12908:13:0;;;;-1:-1:-1;12908:5:0;;:13;;;;;:::i;:::-;-1:-1:-1;12931:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;12958:9:0;:14;;-1:-1:-1;;12958:14:0;12970:2;12958:14;;;-1:-1:-1;12197:9474:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12197:9474:0;;;-1:-1:-1;12197:9474:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220da6e8f7eb1ffe598324e2a00300e659266eb4b6f9566b66efa47068be592b18d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DA6E DUP16 PUSH31 0xB1FFE598324E2A00300E659266EB4B6F9566B66EFA47068BE592B18D64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "12197:9474:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13044:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15120:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15120:166:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14111:106;;;:::i;:::-;;;;;;;;;;;;;;;;15753:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15753:317:0;;;;;;;;;;;;;;;;;:::i;13962:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16465:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16465:215:0;;;;;;;;:::i;14275:125::-;;;;;;;;;;;;;;;;-1:-1:-1;14275:125:0;-1:-1:-1;;;;;14275:125:0;;:::i;13246:93::-;;;:::i;17167:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17167:266:0;;;;;;;;:::i;14603:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14603:172:0;;;;;;;;:::i;14833:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14833:149:0;;;;;;;;;;:::i;13044:89::-;13121:5;13114:12;;;;;;;;-1:-1:-1;;13114:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13089:13;;13114:12;;13121:5;;13114:12;;13121:5;13114:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13044:89;:::o;15120:166::-;15203:4;15219:39;15228:12;:10;:12::i;:::-;15242:7;15251:6;15219:8;:39::i;:::-;-1:-1:-1;15275:4:0;15120:166;;;;:::o;14111:106::-;14198:12;;14111:106;:::o;15753:317::-;15859:4;15875:36;15885:6;15893:9;15904:6;15875:9;:36::i;:::-;15921:121;15930:6;15938:12;:10;:12::i;:::-;15952:89;15990:6;15952:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15952:19:0;;;;;;:11;:19;;;;;;15972:12;:10;:12::i;:::-;-1:-1:-1;;;;;15952:33:0;;;;;;;;;;;;-1:-1:-1;15952:33:0;;;:89;:37;:89::i;:::-;15921:8;:121::i;:::-;-1:-1:-1;16059:4:0;15753:317;;;;;:::o;13962:89::-;14035:9;;;;13962:89;:::o;16465:215::-;16553:4;16569:83;16578:12;:10;:12::i;:::-;16592:7;16601:50;16640:10;16601:11;:25;16613:12;:10;:12::i;:::-;-1:-1:-1;;;;;16601:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16601:25:0;;;:34;;;;;;;;;;;:38;:50::i;14275:125::-;-1:-1:-1;;;;;14375:18:0;14349:7;14375:18;;;;;;;;;;;;14275:125::o;13246:93::-;13325:7;13318:14;;;;;;;;-1:-1:-1;;13318:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13293:13;;13318:14;;13325:7;;13318:14;;13325:7;13318:14;;;;;;;;;;;;;;;;;;;;;;;;17167:266;17260:4;17276:129;17285:12;:10;:12::i;:::-;17299:7;17308:96;17347:15;17308:96;;;;;;;;;;;;;;;;;:11;:25;17320:12;:10;:12::i;:::-;-1:-1:-1;;;;;17308:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;17308:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;14603:172::-;14689:4;14705:42;14715:12;:10;:12::i;:::-;14729:9;14740:6;14705:9;:42::i;14833:149::-;-1:-1:-1;;;;;14948:18:0;;;14922:7;14948:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14833:149::o;598:104::-;685:10;598:104;:::o;20231:340::-;-1:-1:-1;;;;;20332:19:0;;20324:68;;;;-1:-1:-1;;;20324:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20410:21:0;;20402:68;;;;-1:-1:-1;;;20402:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20481:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;20532:32;;;;;;;;;;;;;;;;;20231:340;;;:::o;17907:530::-;-1:-1:-1;;;;;18012:20:0;;18004:70;;;;-1:-1:-1;;;18004:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18092:23:0;;18084:71;;;;-1:-1:-1;;;18084:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18166:47;18187:6;18195:9;18206:6;18166:20;:47::i;:::-;18244:71;18266:6;18244:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18244:17:0;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;18224:17:0;;;:9;:17;;;;;;;;;;;:91;;;;18348:20;;;;;;;:32;;18373:6;18348:24;:32::i;:::-;-1:-1:-1;;;;;18325:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;18395:35;;;;;;;18325:20;;18395:35;;;;;;;;;;;;;17907:530;;;:::o;9140:163::-;9226:7;9261:12;9253:6;;;;9245:29;;;;-1:-1:-1;;;9245:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9291:5:0;;;9140:163::o;6398:175::-;6456:7;6487:5;;;6510:6;;;;6502:46;;;;;-1:-1:-1;;;6502:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6565:1;6398:175;-1:-1:-1;;;6398:175:0:o;21577:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12834,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12908,
									"end": 12913,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12908,
									"end": 12913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12938,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12931,
									"end": 12938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12958,
									"end": 12967,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12970,
									"end": 12972,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12197,
									"end": 21671,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da6e8f7eb1ffe598324e2a00300e659266eb4b6f9566b66efa47068be592b18d64736f6c634300060c0033",
									".code": [
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 21671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13089,
											"end": 13102,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13089,
											"end": 13102,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15203,
											"end": 15207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15228,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15251,
											"end": 15257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15275,
											"end": 15279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14210,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14198,
											"end": 14210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15885,
											"end": 15891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15893,
											"end": 15902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15930,
											"end": 15936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15938,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15990,
											"end": 15996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15972,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15921,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16578,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16599,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 16640,
											"end": 16650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16613,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 16601,
											"end": 16651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13306,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13293,
											"end": 13306,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17260,
											"end": 17264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17285,
											"end": 17295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17347,
											"end": 17362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17320,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14705,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14715,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14729,
											"end": 14738,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14705,
											"end": 14747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20410,
											"end": 20431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20410,
											"end": 20431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18012,
											"end": 18032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18092,
											"end": 18115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18092,
											"end": 18115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18187,
											"end": 18193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18195,
											"end": 18204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18206,
											"end": 18212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18266,
											"end": 18272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18373,
											"end": 18379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21669,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 466,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 472,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 474,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 476,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 478,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 480,
								"contract": "Vault/EvolleVault.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EvolleVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IStrategy",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_approvalDelay",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "NewStratCandidate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "UpgradeStrat",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approvalDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "earn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "inCaseTokensGetStuck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "proposeStrat",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stratCandidate",
							"outputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "proposedTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strategy",
							"outputs": [
								{
									"internalType": "contract IStrategy",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "upgradeStrat",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "want",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of a vault to deposit funds for yield optimizing. This is the contract that receives funds and that users interface with. The yield optimizing strategy itself is implemented in a separate 'Strategy.sol' contract.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"available()": {
								"details": "Custom logic in here for how much the vault allows to be borrowed. We return 100% of tokens for now. Under certain conditions we might want to keep some of the system funds at hand in the vault, instead of putting them to work."
							},
							"balance()": {
								"details": "It calculates the total underlying value of {token} held by the system. It takes into account the vault contract balance, the strategy contract balance  and the balance deployed in other contracts as part of the strategy."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the value of {token} to the token that the vault will hold as underlying value. It initializes the vault's own 'moo' token. This token is minted when someone does a deposit. It is burned in order to withdraw the corresponding portion of the underlying assets.",
								"params": {
									"_approvalDelay": "the delay before a new strat can be approved.",
									"_name": "the name of the vault token.",
									"_strategy": "the address of the strategy.",
									"_symbol": "the symbol of the vault token."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"deposit(uint256)": {
								"details": "The entrypoint of funds into the system. People deposit with this function into the vault. The vault is then in charge of sending funds into the strategy."
							},
							"depositAll()": {
								"details": "A helper function to call deposit() with all the sender's funds."
							},
							"earn()": {
								"details": "Function to send funds into the strategy and put them to work. It's primarily called by the vault's deposit() function."
							},
							"getPricePerFullShare()": {
								"details": "Function for various UIs to display the current value of one of our yield tokens. Returns an uint256 with 18 decimals of how much underlying asset one vault share represents."
							},
							"inCaseTokensGetStuck(address)": {
								"details": "Rescues random funds stuck that the strat can't handle.",
								"params": {
									"_token": "address of the token to rescue."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proposeStrat(address)": {
								"details": "Sets the candidate for the new strat to use with this vault.",
								"params": {
									"_implementation": "The address of the candidate strategy.  "
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeStrat()": {
								"details": "It switches the active strat for the strat candidate. After upgrading, the  candidate implementation is set to the 0x00 address, and proposedTime to a time  happening in +100 years for safety. "
							},
							"withdraw(uint256)": {
								"details": "Function to exit the system. The vault will withdraw the required tokens from the strategy and pay up the token holder. A proportional number of IOU tokens are burned in the process."
							},
							"withdrawAll()": {
								"details": "A helper function to call withdraw() with all the sender's funds."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault/EvolleVault.sol\":39098:45669  contract EvolleVault is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Vault/EvolleVault.sol\":40263:40531  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  mload\n  0x20\n  dup4\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap3\n  swap5\n  swap3\n  swap4\n  dup4\n  add\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  swap1\n  dup2\n  add\n  mload\n    /* \"Vault/EvolleVault.sol\":12908:12921  _name = name_ */\n  dup6\n  mload\n    /* \"Vault/EvolleVault.sol\":40263:40531  constructor (... */\n  swap1\n  swap4\n  pop\n    /* \"Vault/EvolleVault.sol\":40425:40430  _name */\n  dup6\n  swap3\n  pop\n    /* \"Vault/EvolleVault.sol\":40440:40447  _symbol */\n  dup5\n  swap2\n    /* \"Vault/EvolleVault.sol\":12908:12921  _name = name_ */\n  tag_22\n  swap2\n    /* \"Vault/EvolleVault.sol\":12908:12913  _name */\n  0x03\n  swap2\n    /* \"Vault/EvolleVault.sol\":12908:12921  _name = name_ */\n  dup6\n  add\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  pop\n    /* \"Vault/EvolleVault.sol\":12931:12948  _symbol = symbol_ */\n  dup1\n  mload\n  tag_24\n  swap1\n    /* \"Vault/EvolleVault.sol\":12931:12938  _symbol */\n  0x04\n  swap1\n    /* \"Vault/EvolleVault.sol\":12931:12948  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_23\n  jump\t// in\ntag_24:\n  pop\n  pop\n    /* \"Vault/EvolleVault.sol\":12958:12967  _decimals */\n  0x05\n    /* \"Vault/EvolleVault.sol\":12958:12972  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Vault/EvolleVault.sol\":12970:12972  18 */\n  0x12\n    /* \"Vault/EvolleVault.sol\":12958:12972  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"Vault/EvolleVault.sol\":12958:12967  _decimals */\n  0x00\n    /* \"Vault/EvolleVault.sol\":34091:34103  _msgSender() */\n  tag_26\n    /* \"Vault/EvolleVault.sol\":34091:34101  _msgSender */\n  tag_27\n    /* \"Vault/EvolleVault.sol\":34091:34103  _msgSender() */\n  jump\t// in\ntag_26:\n    /* \"Vault/EvolleVault.sol\":34113:34119  _owner */\n  0x05\n    /* \"Vault/EvolleVault.sol\":34113:34131  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Vault/EvolleVault.sol\":34146:34189  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Vault/EvolleVault.sol\":34113:34131  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"Vault/EvolleVault.sol\":34146:34189  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n  pop\n    /* \"Vault/EvolleVault.sol\":37123:37124  1 */\n  0x01\n    /* \"Vault/EvolleVault.sol\":37238:37245  _status */\n  0x06\n    /* \"Vault/EvolleVault.sol\":37238:37260  _status = _NOT_ENTERED */\n  sstore\n    /* \"Vault/EvolleVault.sol\":40464:40472  strategy */\n  0x09\n    /* \"Vault/EvolleVault.sol\":40464:40484  strategy = _strategy */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  swap1\n  swap6\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n  pop\n  pop\n    /* \"Vault/EvolleVault.sol\":40494:40524  approvalDelay = _approvalDelay */\n  0x80\n  mstore\n    /* \"Vault/EvolleVault.sol\":39098:45669  contract EvolleVault is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_30)\n    /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_27:\n    /* \"Vault/EvolleVault.sol\":685:695  msg.sender */\n  caller\n    /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Vault/EvolleVault.sol\":39098:45669  contract EvolleVault is ERC20, Ownable, ReentrancyGuard {... */\ntag_23:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_33\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_33:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_34:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_34)\ntag_35:\n  pop\n  tag_36\n  swap3\n  swap2\n  pop\n  tag_37\n  jump\t// in\ntag_36:\n  pop\n  swap1\n  jump\t// out\ntag_37:\ntag_38:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_36\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_38)\ntag_30:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xbd4cd594c0d7e7808ed6d371a1eac9e421715fa066e86940ce0d6d7ca2323404\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Vault/EvolleVault.sol\":39098:45669  contract EvolleVault is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x853828b6\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb6b55f25\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdef68a9c\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdef68a9c\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe2d1e75c\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe6685244\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xb6b55f25\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd389800f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xde5f6268\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa457c2d7\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa8c62e76\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x853828b6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x39509351\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x76dfabb8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x77c7b8fc\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48a0d754\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5b12ff9b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1f1fcd51\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1f1fcd51\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_41:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_41)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":40537:40629  function want() public view returns (IERC20) {... */\n    tag_6:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_54\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":43437:43979  function withdraw(uint256 _shares) public {... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      calldataload\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":16465:16680  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_62\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":41320:41426  function available() public view returns (uint256) {... */\n    tag_11:\n      tag_48\n      tag_64\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":44146:44516  function proposeStrat(address _implementation) public onlyOwner {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":34904:35049  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_55\n      tag_72\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":39367:39403  StratCandidate public stratCandidate */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"Vault/EvolleVault.sol\":41642:41794  function getPricePerFullShare() public view returns (uint256) {... */\n    tag_16:\n      tag_48\n      tag_76\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":43126:43206  function withdrawAll() external {... */\n    tag_17:\n      tag_55\n      tag_78\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":34272:34357  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_50\n      tag_80\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":13246:13339  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_39\n      tag_82\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":17167:17433  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_89\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":39460:39485  IStrategy public strategy */\n    tag_21:\n      tag_50\n      tag_91\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14603:14775  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_94\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":40899:41037  function balance() public view returns (uint) {... */\n    tag_23:\n      tag_48\n      tag_96\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":42174:42720  function deposit(uint _amount) public nonReentrant {... */\n    tag_24:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      calldataload\n      tag_99\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":42881:43026  function earn() public {... */\n    tag_25:\n      tag_55\n      tag_101\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_26:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_104\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":41893:41978  function depositAll() external {... */\n    tag_27:\n      tag_55\n      tag_106\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":45417:45667  function inCaseTokensGetStuck(address _token) external onlyOwner {... */\n    tag_28:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_109\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":39572:39610  uint256 public immutable approvalDelay */\n    tag_29:\n      tag_48\n      tag_111\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":44760:45274  function upgradeStrat() public onlyOwner {... */\n    tag_30:\n      tag_55\n      tag_113\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":35198:35438  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_116\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n    tag_40:\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      0x03\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":13089:13102  string memory */\n      0x60\n      swap4\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      swap1\n      swap3\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      swap1\n      swap2\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup4\n      add\n        /* \"Vault/EvolleVault.sol\":13121:13126  _name */\n      dup3\n        /* \"Vault/EvolleVault.sol\":13114:13126  return _name */\n      dup3\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":13044:13133  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \"Vault/EvolleVault.sol\":15203:15207  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":15219:15258  _approve(_msgSender(), spender, amount) */\n      tag_122\n        /* \"Vault/EvolleVault.sol\":15228:15240  _msgSender() */\n      tag_123\n        /* \"Vault/EvolleVault.sol\":15228:15238  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":15228:15240  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"Vault/EvolleVault.sol\":15242:15249  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15251:15257  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15219:15227  _approve */\n      tag_125\n        /* \"Vault/EvolleVault.sol\":15219:15258  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"Vault/EvolleVault.sol\":15275:15279  true */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15120:15286  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_121:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_49:\n        /* \"Vault/EvolleVault.sol\":14198:14210  _totalSupply */\n      sload(0x02)\n        /* \"Vault/EvolleVault.sol\":14111:14217  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":40537:40629  function want() public view returns (IERC20) {... */\n    tag_51:\n        /* \"Vault/EvolleVault.sol\":40606:40614  strategy */\n      sload(0x09)\n        /* \"Vault/EvolleVault.sol\":40606:40621  strategy.want() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x1f1fcd51)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Vault/EvolleVault.sol\":40574:40580  IERC20 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":40606:40614  strategy */\n      and\n      swap2\n        /* \"Vault/EvolleVault.sol\":40606:40619  strategy.want */\n      0x1f1fcd51\n      swap2\n        /* \"Vault/EvolleVault.sol\":40606:40621  strategy.want() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Vault/EvolleVault.sol\":40606:40614  strategy */\n      dup7\n        /* \"Vault/EvolleVault.sol\":40606:40621  strategy.want() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      mload\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":40537:40629  function want() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_54:\n        /* \"Vault/EvolleVault.sol\":15859:15863  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":15875:15911  _transfer(sender, recipient, amount) */\n      tag_133\n        /* \"Vault/EvolleVault.sol\":15885:15891  sender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15893:15902  recipient */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15904:15910  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15875:15884  _transfer */\n      tag_134\n        /* \"Vault/EvolleVault.sol\":15875:15911  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"Vault/EvolleVault.sol\":15921:16042  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_135\n        /* \"Vault/EvolleVault.sol\":15930:15936  sender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":15938:15950  _msgSender() */\n      tag_136\n        /* \"Vault/EvolleVault.sol\":15938:15948  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":15938:15950  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_137\n        /* \"Vault/EvolleVault.sol\":15990:15996  amount */\n      dup6\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":15952:15971  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":15952:15963  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15952:15971  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Vault/EvolleVault.sol\":15972:15984  _msgSender() */\n      tag_138\n        /* \"Vault/EvolleVault.sol\":15972:15982  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":15972:15984  _msgSender() */\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":15952:15985  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":15952:15989  _allowances[sender][_msgSender()].sub */\n      tag_139\n        /* \"Vault/EvolleVault.sol\":15952:16041  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_137:\n        /* \"Vault/EvolleVault.sol\":15921:15929  _approve */\n      tag_125\n        /* \"Vault/EvolleVault.sol\":15921:16042  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"Vault/EvolleVault.sol\":16059:16063  true */\n      0x01\n        /* \"Vault/EvolleVault.sol\":15753:16070  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_132:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":43437:43979  function withdraw(uint256 _shares) public {... */\n    tag_57:\n        /* \"Vault/EvolleVault.sol\":43489:43498  uint256 r */\n      0x00\n        /* \"Vault/EvolleVault.sol\":43501:43544  (balance().mul(_shares)).div(totalSupply()) */\n      tag_141\n        /* \"Vault/EvolleVault.sol\":43530:43543  totalSupply() */\n      tag_142\n        /* \"Vault/EvolleVault.sol\":43530:43541  totalSupply */\n      tag_49\n        /* \"Vault/EvolleVault.sol\":43530:43543  totalSupply() */\n      jump\t// in\n    tag_142:\n        /* \"Vault/EvolleVault.sol\":43502:43524  balance().mul(_shares) */\n      tag_143\n        /* \"Vault/EvolleVault.sol\":43516:43523  _shares */\n      dup5\n        /* \"Vault/EvolleVault.sol\":43502:43511  balance() */\n      tag_144\n        /* \"Vault/EvolleVault.sol\":43502:43509  balance */\n      tag_96\n        /* \"Vault/EvolleVault.sol\":43502:43511  balance() */\n      jump\t// in\n    tag_144:\n        /* \"Vault/EvolleVault.sol\":43502:43515  balance().mul */\n      swap1\n      tag_145\n        /* \"Vault/EvolleVault.sol\":43502:43524  balance().mul(_shares) */\n      jump\t// in\n    tag_143:\n        /* \"Vault/EvolleVault.sol\":43501:43529  (balance().mul(_shares)).div */\n      swap1\n      tag_146\n        /* \"Vault/EvolleVault.sol\":43501:43544  (balance().mul(_shares)).div(totalSupply()) */\n      jump\t// in\n    tag_141:\n        /* \"Vault/EvolleVault.sol\":43489:43544  uint256 r = (balance().mul(_shares)).div(totalSupply()) */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":43554:43580  _burn(msg.sender, _shares) */\n      tag_147\n        /* \"Vault/EvolleVault.sol\":43560:43570  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":43572:43579  _shares */\n      dup4\n        /* \"Vault/EvolleVault.sol\":43554:43559  _burn */\n      tag_148\n        /* \"Vault/EvolleVault.sol\":43554:43580  _burn(msg.sender, _shares) */\n      jump\t// in\n    tag_147:\n        /* \"Vault/EvolleVault.sol\":43591:43597  uint b */\n      0x00\n        /* \"Vault/EvolleVault.sol\":43600:43606  want() */\n      tag_149\n        /* \"Vault/EvolleVault.sol\":43600:43604  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":43600:43606  want() */\n      jump\t// in\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":43600:43616  want().balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":43625:43629  this */\n      address\n        /* \"Vault/EvolleVault.sol\":43600:43631  want().balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      mload\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":43645:43650  b < r */\n      dup2\n      dup2\n      lt\n        /* \"Vault/EvolleVault.sol\":43641:43928  if (b < r) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"Vault/EvolleVault.sol\":43666:43680  uint _withdraw */\n      0x00\n        /* \"Vault/EvolleVault.sol\":43683:43691  r.sub(b) */\n      tag_155\n        /* \"Vault/EvolleVault.sol\":43683:43684  r */\n      dup4\n        /* \"Vault/EvolleVault.sol\":43689:43690  b */\n      dup4\n        /* \"Vault/EvolleVault.sol\":43683:43688  r.sub */\n      tag_156\n        /* \"Vault/EvolleVault.sol\":43683:43691  r.sub(b) */\n      jump\t// in\n    tag_155:\n        /* \"Vault/EvolleVault.sol\":43705:43713  strategy */\n      sload(0x09)\n        /* \"Vault/EvolleVault.sol\":43705:43733  strategy.withdraw(_withdraw) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"Vault/EvolleVault.sol\":43666:43691  uint _withdraw = r.sub(b) */\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":43705:43713  strategy */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"Vault/EvolleVault.sol\":43705:43722  strategy.withdraw */\n      0x2e1a7d4d\n      swap2\n        /* \"Vault/EvolleVault.sol\":43705:43733  strategy.withdraw(_withdraw) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Vault/EvolleVault.sol\":43705:43713  strategy */\n      0x00\n      swap3\n        /* \"Vault/EvolleVault.sol\":43705:43733  strategy.withdraw(_withdraw) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Vault/EvolleVault.sol\":43705:43713  strategy */\n      dup4\n      dup8\n        /* \"Vault/EvolleVault.sol\":43705:43733  strategy.withdraw(_withdraw) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":43747:43758  uint _after */\n      0x00\n        /* \"Vault/EvolleVault.sol\":43761:43767  want() */\n      tag_160\n        /* \"Vault/EvolleVault.sol\":43761:43765  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":43761:43767  want() */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":43761:43777  want().balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":43786:43790  this */\n      address\n        /* \"Vault/EvolleVault.sol\":43761:43792  want().balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      mload\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":43806:43816  uint _diff */\n      0x00\n        /* \"Vault/EvolleVault.sol\":43819:43832  _after.sub(b) */\n      tag_165\n        /* \"Vault/EvolleVault.sol\":43761:43792  want().balanceOf(address(this)) */\n      dup3\n        /* \"Vault/EvolleVault.sol\":43830:43831  b */\n      dup6\n        /* \"Vault/EvolleVault.sol\":43819:43829  _after.sub */\n      tag_156\n        /* \"Vault/EvolleVault.sol\":43819:43832  _after.sub(b) */\n      jump\t// in\n    tag_165:\n        /* \"Vault/EvolleVault.sol\":43806:43832  uint _diff = _after.sub(b) */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":43858:43867  _withdraw */\n      dup3\n        /* \"Vault/EvolleVault.sol\":43850:43855  _diff */\n      dup2\n        /* \"Vault/EvolleVault.sol\":43850:43867  _diff < _withdraw */\n      lt\n        /* \"Vault/EvolleVault.sol\":43846:43918  if (_diff < _withdraw) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"Vault/EvolleVault.sol\":43891:43903  b.add(_diff) */\n      tag_167\n        /* \"Vault/EvolleVault.sol\":43891:43892  b */\n      dup5\n        /* \"Vault/EvolleVault.sol\":43897:43902  _diff */\n      dup3\n        /* \"Vault/EvolleVault.sol\":43891:43896  b.add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":43891:43903  b.add(_diff) */\n      jump\t// in\n    tag_167:\n        /* \"Vault/EvolleVault.sol\":43887:43903  r = b.add(_diff) */\n      swap5\n      pop\n        /* \"Vault/EvolleVault.sol\":43846:43918  if (_diff < _withdraw) {... */\n    tag_166:\n        /* \"Vault/EvolleVault.sol\":43641:43928  if (b < r) {... */\n      pop\n      pop\n      pop\n    tag_154:\n        /* \"Vault/EvolleVault.sol\":43938:43972  want().safeTransfer(msg.sender, r) */\n      tag_169\n        /* \"Vault/EvolleVault.sol\":43958:43968  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":43970:43971  r */\n      dup4\n        /* \"Vault/EvolleVault.sol\":43938:43944  want() */\n      tag_170\n        /* \"Vault/EvolleVault.sol\":43938:43942  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":43938:43944  want() */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":43938:43957  want().safeTransfer */\n      and\n      swap2\n        /* \"Vault/EvolleVault.sol\":43938:43972  want().safeTransfer(msg.sender, r) */\n      swap1\n        /* \"Vault/EvolleVault.sol\":43938:43957  want().safeTransfer */\n      tag_171\n        /* \"Vault/EvolleVault.sol\":43938:43972  want().safeTransfer(msg.sender, r) */\n      jump\t// in\n    tag_169:\n        /* \"Vault/EvolleVault.sol\":43437:43979  function withdraw(uint256 _shares) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"Vault/EvolleVault.sol\":14035:14044  _decimals */\n      and(0xff, sload(0x05))\n        /* \"Vault/EvolleVault.sol\":13962:14051  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":16465:16680  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_62:\n        /* \"Vault/EvolleVault.sol\":16553:16557  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":16569:16652  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_122\n        /* \"Vault/EvolleVault.sol\":16578:16590  _msgSender() */\n      tag_175\n        /* \"Vault/EvolleVault.sol\":16578:16588  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":16578:16590  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"Vault/EvolleVault.sol\":16592:16599  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":16601:16651  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_137\n        /* \"Vault/EvolleVault.sol\":16640:16650  addedValue */\n      dup6\n        /* \"Vault/EvolleVault.sol\":16601:16612  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":16601:16626  _allowances[_msgSender()] */\n      0x00\n        /* \"Vault/EvolleVault.sol\":16613:16625  _msgSender() */\n      tag_177\n        /* \"Vault/EvolleVault.sol\":16613:16623  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":16613:16625  _msgSender() */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":16601:16626  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Vault/EvolleVault.sol\":16601:16635  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":16601:16639  _allowances[_msgSender()][spender].add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":16601:16651  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":41320:41426  function available() public view returns (uint256) {... */\n    tag_64:\n        /* \"Vault/EvolleVault.sol\":41362:41369  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":41388:41394  want() */\n      tag_179\n        /* \"Vault/EvolleVault.sol\":41388:41392  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":41388:41394  want() */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":41388:41404  want().balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":41413:41417  this */\n      address\n        /* \"Vault/EvolleVault.sol\":41388:41419  want().balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Vault/EvolleVault.sol\":44146:44516  function proposeStrat(address _implementation) public onlyOwner {... */\n    tag_67:\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      tag_185\n        /* \"Vault/EvolleVault.sol\":34495:34505  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      tag_186\n        /* \"Vault/EvolleVault.sol\":34484:34489  owner */\n      tag_80\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n      eq\n        /* \"Vault/EvolleVault.sol\":34476:34544  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_187:\n        /* \"Vault/EvolleVault.sol\":44255:44270  _implementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":44245:44277  IStrategy(_implementation).vault */\n      and\n      0xfbfa77cf\n        /* \"Vault/EvolleVault.sol\":44245:44279  IStrategy(_implementation).vault() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":44228:44279  address(this) == IStrategy(_implementation).vault() */\n      and\n        /* \"Vault/EvolleVault.sol\":44236:44240  this */\n      address\n        /* \"Vault/EvolleVault.sol\":44228:44279  address(this) == IStrategy(_implementation).vault() */\n      eq\n        /* \"Vault/EvolleVault.sol\":44220:44317  require(address(this) == IStrategy(_implementation).vault(), \"Proposal not valid for this Vault\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6d06d9f1cf1cb47b4c164a82a99136bb279d51ecac86ea5fd348be592f7bfe2e\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"Vault/EvolleVault.sol\":44344:44459  StratCandidate({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n        /* \"Vault/EvolleVault.sol\":44432:44447  block.timestamp */\n      timestamp\n        /* \"Vault/EvolleVault.sol\":44344:44459  StratCandidate({... */\n      0x20\n      swap3\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Vault/EvolleVault.sol\":44327:44341  stratCandidate */\n      0x07\n        /* \"Vault/EvolleVault.sol\":44327:44459  stratCandidate = StratCandidate({... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup4\n      or\n      swap1\n      sstore\n      0x08\n      sstore\n        /* \"Vault/EvolleVault.sol\":44475:44509  NewStratCandidate(_implementation) */\n      dup3\n      mload\n      swap1\n      dup2\n      mstore\n      swap2\n      mload\n      0x1aae2ec5647db56da2d513de40528ba3565c6057525637050660c4323bbac7df\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"Vault/EvolleVault.sol\":44146:44516  function proposeStrat(address _implementation) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":14375:14393  _balances[account] */\n      and\n        /* \"Vault/EvolleVault.sol\":14349:14356  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14375:14393  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":14275:14400  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":34904:35049  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      tag_196\n        /* \"Vault/EvolleVault.sol\":34495:34505  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      tag_197\n        /* \"Vault/EvolleVault.sol\":34484:34489  owner */\n      tag_80\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n      eq\n        /* \"Vault/EvolleVault.sol\":34476:34544  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_198:\n        /* \"Vault/EvolleVault.sol\":34994:35000  _owner */\n      sload(0x05)\n        /* \"Vault/EvolleVault.sol\":34973:35013  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Vault/EvolleVault.sol\":35010:35011  0 */\n      0x00\n      swap2\n        /* \"Vault/EvolleVault.sol\":34994:35000  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Vault/EvolleVault.sol\":34973:35013  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Vault/EvolleVault.sol\":35010:35011  0 */\n      dup4\n      swap1\n        /* \"Vault/EvolleVault.sol\":34973:35013  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Vault/EvolleVault.sol\":35023:35029  _owner */\n      0x05\n        /* \"Vault/EvolleVault.sol\":35023:35042  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"Vault/EvolleVault.sol\":34904:35049  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":39367:39403  StratCandidate public stratCandidate */\n    tag_74:\n      sload(0x07)\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":41642:41794  function getPricePerFullShare() public view returns (uint256) {... */\n    tag_76:\n        /* \"Vault/EvolleVault.sol\":41695:41702  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":41721:41734  totalSupply() */\n      tag_201\n        /* \"Vault/EvolleVault.sol\":41721:41732  totalSupply */\n      tag_49\n        /* \"Vault/EvolleVault.sol\":41721:41734  totalSupply() */\n      jump\t// in\n    tag_201:\n        /* \"Vault/EvolleVault.sol\":41721:41739  totalSupply() == 0 */\n      iszero\n        /* \"Vault/EvolleVault.sol\":41721:41787  totalSupply() == 0 ? 1e18 : balance().mul(1e18).div(totalSupply()) */\n      tag_202\n      jumpi\n        /* \"Vault/EvolleVault.sol\":41749:41787  balance().mul(1e18).div(totalSupply()) */\n      tag_203\n        /* \"Vault/EvolleVault.sol\":41773:41786  totalSupply() */\n      tag_204\n        /* \"Vault/EvolleVault.sol\":41773:41784  totalSupply */\n      tag_49\n        /* \"Vault/EvolleVault.sol\":41773:41786  totalSupply() */\n      jump\t// in\n    tag_204:\n        /* \"Vault/EvolleVault.sol\":41749:41768  balance().mul(1e18) */\n      tag_143\n        /* \"Vault/EvolleVault.sol\":41763:41767  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Vault/EvolleVault.sol\":41749:41758  balance() */\n      tag_144\n        /* \"Vault/EvolleVault.sol\":41749:41756  balance */\n      tag_96\n        /* \"Vault/EvolleVault.sol\":41749:41758  balance() */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":41749:41787  balance().mul(1e18).div(totalSupply()) */\n    tag_203:\n        /* \"Vault/EvolleVault.sol\":41721:41787  totalSupply() == 0 ? 1e18 : balance().mul(1e18).div(totalSupply()) */\n      jump(tag_207)\n    tag_202:\n        /* \"Vault/EvolleVault.sol\":41742:41746  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Vault/EvolleVault.sol\":41721:41787  totalSupply() == 0 ? 1e18 : balance().mul(1e18).div(totalSupply()) */\n    tag_207:\n        /* \"Vault/EvolleVault.sol\":41714:41787  return totalSupply() == 0 ? 1e18 : balance().mul(1e18).div(totalSupply()) */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":41642:41794  function getPricePerFullShare() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":43126:43206  function withdrawAll() external {... */\n    tag_78:\n        /* \"Vault/EvolleVault.sol\":43168:43199  withdraw(balanceOf(msg.sender)) */\n      tag_209\n        /* \"Vault/EvolleVault.sol\":43177:43198  balanceOf(msg.sender) */\n      tag_210\n        /* \"Vault/EvolleVault.sol\":43187:43197  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":43177:43186  balanceOf */\n      tag_70\n        /* \"Vault/EvolleVault.sol\":43177:43198  balanceOf(msg.sender) */\n      jump\t// in\n    tag_210:\n        /* \"Vault/EvolleVault.sol\":43168:43176  withdraw */\n      tag_57\n        /* \"Vault/EvolleVault.sol\":43168:43199  withdraw(balanceOf(msg.sender)) */\n      jump\t// in\n    tag_209:\n        /* \"Vault/EvolleVault.sol\":43126:43206  function withdrawAll() external {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":34272:34357  function owner() public view virtual returns (address) {... */\n    tag_80:\n        /* \"Vault/EvolleVault.sol\":34344:34350  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Vault/EvolleVault.sol\":34272:34357  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":13246:13339  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      0x04\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":13293:13306  string memory */\n      0x60\n      swap4\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      swap1\n      swap3\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      swap1\n      swap2\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup4\n      add\n        /* \"Vault/EvolleVault.sol\":13325:13332  _symbol */\n      dup3\n        /* \"Vault/EvolleVault.sol\":13318:13332  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n        /* \"Vault/EvolleVault.sol\":17167:17433  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_89:\n        /* \"Vault/EvolleVault.sol\":17260:17264  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":17276:17405  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_122\n        /* \"Vault/EvolleVault.sol\":17285:17297  _msgSender() */\n      tag_218\n        /* \"Vault/EvolleVault.sol\":17285:17295  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":17285:17297  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"Vault/EvolleVault.sol\":17299:17306  spender */\n      dup5\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_137\n        /* \"Vault/EvolleVault.sol\":17347:17362  subtractedValue */\n      dup6\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Vault/EvolleVault.sol\":17308:17319  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":17308:17333  _allowances[_msgSender()] */\n      0x00\n        /* \"Vault/EvolleVault.sol\":17320:17332  _msgSender() */\n      tag_220\n        /* \"Vault/EvolleVault.sol\":17320:17330  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":17320:17332  _msgSender() */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":17308:17333  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Vault/EvolleVault.sol\":17308:17342  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":17308:17346  _allowances[_msgSender()][spender].sub */\n      tag_139\n        /* \"Vault/EvolleVault.sol\":17308:17404  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":39460:39485  IStrategy public strategy */\n    tag_91:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":14603:14775  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_94:\n        /* \"Vault/EvolleVault.sol\":14689:14693  bool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14705:14747  _transfer(_msgSender(), recipient, amount) */\n      tag_122\n        /* \"Vault/EvolleVault.sol\":14715:14727  _msgSender() */\n      tag_223\n        /* \"Vault/EvolleVault.sol\":14715:14725  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":14715:14727  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"Vault/EvolleVault.sol\":14729:14738  recipient */\n      dup5\n        /* \"Vault/EvolleVault.sol\":14740:14746  amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":14705:14714  _transfer */\n      tag_134\n        /* \"Vault/EvolleVault.sol\":14705:14747  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":40899:41037  function balance() public view returns (uint) {... */\n    tag_96:\n        /* \"Vault/EvolleVault.sol\":40939:40943  uint */\n      0x00\n        /* \"Vault/EvolleVault.sol\":40962:41030  want().balanceOf(address(this)).add(IStrategy(strategy).balanceOf()) */\n      tag_207\n        /* \"Vault/EvolleVault.sol\":41008:41016  strategy */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":40998:41027  IStrategy(strategy).balanceOf */\n      and\n      0x722713f7\n        /* \"Vault/EvolleVault.sol\":40998:41029  IStrategy(strategy).balanceOf() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      mload\n        /* \"Vault/EvolleVault.sol\":40962:40968  want() */\n      tag_230\n        /* \"Vault/EvolleVault.sol\":40962:40966  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":40962:40968  want() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":40962:40978  want().balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":40987:40991  this */\n      address\n        /* \"Vault/EvolleVault.sol\":40962:40993  want().balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      mload\n      swap1\n        /* \"Vault/EvolleVault.sol\":40962:40997  want().balanceOf(address(this)).add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":40962:41030  want().balanceOf(address(this)).add(IStrategy(strategy).balanceOf()) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":42174:42720  function deposit(uint _amount) public nonReentrant {... */\n    tag_99:\n        /* \"Vault/EvolleVault.sol\":37166:37167  2 */\n      0x02\n        /* \"Vault/EvolleVault.sol\":37755:37762  _status */\n      sload(0x06)\n        /* \"Vault/EvolleVault.sol\":37755:37774  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Vault/EvolleVault.sol\":37747:37810  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_236\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_236:\n        /* \"Vault/EvolleVault.sol\":37166:37167  2 */\n      0x02\n        /* \"Vault/EvolleVault.sol\":37885:37892  _status */\n      0x06\n        /* \"Vault/EvolleVault.sol\":37885:37903  _status = _ENTERED */\n      sstore\n        /* \"Vault/EvolleVault.sol\":42235:42243  strategy */\n      sload(0x09)\n        /* \"Vault/EvolleVault.sol\":42235:42259  strategy.beforeDeposit() */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x2b9ff785)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":42235:42243  strategy */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Vault/EvolleVault.sol\":42235:42257  strategy.beforeDeposit */\n      0x573fef0a\n      swap2\n        /* \"Vault/EvolleVault.sol\":42235:42259  strategy.beforeDeposit() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Vault/EvolleVault.sol\":42235:42243  strategy */\n      0x00\n      swap3\n        /* \"Vault/EvolleVault.sol\":42235:42259  strategy.beforeDeposit() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Vault/EvolleVault.sol\":42235:42243  strategy */\n      dup4\n      dup8\n        /* \"Vault/EvolleVault.sol\":42235:42259  strategy.beforeDeposit() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":42270:42283  uint256 _pool */\n      0x00\n        /* \"Vault/EvolleVault.sol\":42286:42295  balance() */\n      tag_241\n        /* \"Vault/EvolleVault.sol\":42286:42293  balance */\n      tag_96\n        /* \"Vault/EvolleVault.sol\":42286:42295  balance() */\n      jump\t// in\n    tag_241:\n        /* \"Vault/EvolleVault.sol\":42270:42295  uint256 _pool = balance() */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":42305:42364  want().safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_242\n        /* \"Vault/EvolleVault.sol\":42329:42339  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":42349:42353  this */\n      address\n        /* \"Vault/EvolleVault.sol\":42356:42363  _amount */\n      dup5\n        /* \"Vault/EvolleVault.sol\":42305:42311  want() */\n      tag_243\n        /* \"Vault/EvolleVault.sol\":42305:42309  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":42305:42311  want() */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":42305:42328  want().safeTransferFrom */\n      and\n      swap3\n        /* \"Vault/EvolleVault.sol\":42305:42364  want().safeTransferFrom(msg.sender, address(this), _amount) */\n      swap2\n      swap1\n        /* \"Vault/EvolleVault.sol\":42305:42328  want().safeTransferFrom */\n      tag_244\n        /* \"Vault/EvolleVault.sol\":42305:42364  want().safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_242:\n        /* \"Vault/EvolleVault.sol\":42374:42380  earn() */\n      tag_245\n        /* \"Vault/EvolleVault.sol\":42374:42378  earn */\n      tag_101\n        /* \"Vault/EvolleVault.sol\":42374:42380  earn() */\n      jump\t// in\n    tag_245:\n        /* \"Vault/EvolleVault.sol\":42390:42404  uint256 _after */\n      0x00\n        /* \"Vault/EvolleVault.sol\":42407:42416  balance() */\n      tag_246\n        /* \"Vault/EvolleVault.sol\":42407:42414  balance */\n      tag_96\n        /* \"Vault/EvolleVault.sol\":42407:42416  balance() */\n      jump\t// in\n    tag_246:\n        /* \"Vault/EvolleVault.sol\":42390:42416  uint256 _after = balance() */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":42436:42453  _after.sub(_pool) */\n      tag_247\n        /* \"Vault/EvolleVault.sol\":42390:42416  uint256 _after = balance() */\n      dup2\n        /* \"Vault/EvolleVault.sol\":42447:42452  _pool */\n      dup4\n        /* \"Vault/EvolleVault.sol\":42436:42446  _after.sub */\n      tag_156\n        /* \"Vault/EvolleVault.sol\":42436:42453  _after.sub(_pool) */\n      jump\t// in\n    tag_247:\n        /* \"Vault/EvolleVault.sol\":42426:42453  _amount = _after.sub(_pool) */\n      swap3\n      pop\n        /* \"Vault/EvolleVault.sol\":42507:42521  uint256 shares */\n      0x00\n        /* \"Vault/EvolleVault.sol\":42539:42552  totalSupply() */\n      tag_248\n        /* \"Vault/EvolleVault.sol\":42539:42550  totalSupply */\n      tag_49\n        /* \"Vault/EvolleVault.sol\":42539:42552  totalSupply() */\n      jump\t// in\n    tag_248:\n        /* \"Vault/EvolleVault.sol\":42535:42679  if (totalSupply() == 0) {... */\n      tag_249\n      jumpi\n      pop\n        /* \"Vault/EvolleVault.sol\":42582:42589  _amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":42535:42679  if (totalSupply() == 0) {... */\n      jump(tag_250)\n    tag_249:\n        /* \"Vault/EvolleVault.sol\":42629:42668  (_amount.mul(totalSupply())).div(_pool) */\n      tag_251\n        /* \"Vault/EvolleVault.sol\":42662:42667  _pool */\n      dup4\n        /* \"Vault/EvolleVault.sol\":42630:42656  _amount.mul(totalSupply()) */\n      tag_143\n        /* \"Vault/EvolleVault.sol\":42642:42655  totalSupply() */\n      tag_253\n        /* \"Vault/EvolleVault.sol\":42642:42653  totalSupply */\n      tag_49\n        /* \"Vault/EvolleVault.sol\":42642:42655  totalSupply() */\n      jump\t// in\n    tag_253:\n        /* \"Vault/EvolleVault.sol\":42630:42637  _amount */\n      dup8\n      swap1\n        /* \"Vault/EvolleVault.sol\":42630:42641  _amount.mul */\n      tag_145\n        /* \"Vault/EvolleVault.sol\":42630:42656  _amount.mul(totalSupply()) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":42629:42668  (_amount.mul(totalSupply())).div(_pool) */\n    tag_251:\n        /* \"Vault/EvolleVault.sol\":42620:42668  shares = (_amount.mul(totalSupply())).div(_pool) */\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":42535:42679  if (totalSupply() == 0) {... */\n    tag_250:\n        /* \"Vault/EvolleVault.sol\":42688:42713  _mint(msg.sender, shares) */\n      tag_254\n        /* \"Vault/EvolleVault.sol\":42694:42704  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":42706:42712  shares */\n      dup3\n        /* \"Vault/EvolleVault.sol\":42688:42693  _mint */\n      tag_255\n        /* \"Vault/EvolleVault.sol\":42688:42713  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_254:\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":37123:37124  1 */\n      0x01\n        /* \"Vault/EvolleVault.sol\":38058:38065  _status */\n      0x06\n        /* \"Vault/EvolleVault.sol\":38058:38080  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":42174:42720  function deposit(uint _amount) public nonReentrant {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":42881:43026  function earn() public {... */\n    tag_101:\n        /* \"Vault/EvolleVault.sol\":42914:42923  uint _bal */\n      0x00\n        /* \"Vault/EvolleVault.sol\":42926:42937  available() */\n      tag_257\n        /* \"Vault/EvolleVault.sol\":42926:42935  available */\n      tag_64\n        /* \"Vault/EvolleVault.sol\":42926:42937  available() */\n      jump\t// in\n    tag_257:\n        /* \"Vault/EvolleVault.sol\":42975:42983  strategy */\n      sload(0x09)\n        /* \"Vault/EvolleVault.sol\":42914:42937  uint _bal = available() */\n      swap1\n      swap2\n      pop\n        /* \"Vault/EvolleVault.sol\":42947:42991  want().safeTransfer(address(strategy), _bal) */\n      tag_258\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":42975:42983  strategy */\n      and\n        /* \"Vault/EvolleVault.sol\":42914:42937  uint _bal = available() */\n      dup3\n        /* \"Vault/EvolleVault.sol\":42947:42953  want() */\n      tag_170\n        /* \"Vault/EvolleVault.sol\":42947:42951  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":42947:42953  want() */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":42947:42991  want().safeTransfer(address(strategy), _bal) */\n    tag_258:\n        /* \"Vault/EvolleVault.sol\":43001:43009  strategy */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":43001:43017  strategy.deposit */\n      and\n      0xd0e30db0\n        /* \"Vault/EvolleVault.sol\":43001:43019  strategy.deposit() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":42881:43026  function earn() public {... */\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":14922:14929  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":14948:14959  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":14948:14966  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Vault/EvolleVault.sol\":14948:14975  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Vault/EvolleVault.sol\":14833:14982  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":41893:41978  function depositAll() external {... */\n    tag_106:\n        /* \"Vault/EvolleVault.sol\":41934:41971  deposit(want().balanceOf(msg.sender)) */\n      tag_209\n        /* \"Vault/EvolleVault.sol\":41942:41948  want() */\n      tag_266\n        /* \"Vault/EvolleVault.sol\":41942:41946  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":41942:41948  want() */\n      jump\t// in\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":41942:41958  want().balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":41959:41969  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":41942:41970  want().balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      mload\n        /* \"Vault/EvolleVault.sol\":41934:41941  deposit */\n      tag_99\n        /* \"Vault/EvolleVault.sol\":41934:41971  deposit(want().balanceOf(msg.sender)) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":45417:45667  function inCaseTokensGetStuck(address _token) external onlyOwner {... */\n    tag_109:\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      tag_272\n        /* \"Vault/EvolleVault.sol\":34495:34505  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      tag_273\n        /* \"Vault/EvolleVault.sol\":34484:34489  owner */\n      tag_80\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n      eq\n        /* \"Vault/EvolleVault.sol\":34476:34544  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_274\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_274:\n        /* \"Vault/EvolleVault.sol\":45518:45524  want() */\n      tag_276\n        /* \"Vault/EvolleVault.sol\":45518:45522  want */\n      tag_51\n        /* \"Vault/EvolleVault.sol\":45518:45524  want() */\n      jump\t// in\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45500:45525  _token != address(want()) */\n      and\n        /* \"Vault/EvolleVault.sol\":45500:45506  _token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45500:45525  _token != address(want()) */\n      and\n      eq\n      iszero\n        /* \"Vault/EvolleVault.sol\":45492:45536  require(_token != address(want()), \"!token\") */\n      tag_277\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x06\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd1, 0x10ba37b5b2b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_277:\n        /* \"Vault/EvolleVault.sol\":45547:45561  uint256 amount */\n      0x00\n        /* \"Vault/EvolleVault.sol\":45571:45577  _token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45564:45588  IERC20(_token).balanceOf */\n      and\n      0x70a08231\n        /* \"Vault/EvolleVault.sol\":45597:45601  this */\n      address\n        /* \"Vault/EvolleVault.sol\":45564:45603  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n      pop\n      mload\n      swap1\n      pop\n        /* \"Vault/EvolleVault.sol\":45613:45660  IERC20(_token).safeTransfer(msg.sender, amount) */\n      tag_282\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45613:45640  IERC20(_token).safeTransfer */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":45641:45651  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":45564:45603  IERC20(_token).balanceOf(address(this)) */\n      dup4\n        /* \"Vault/EvolleVault.sol\":45613:45640  IERC20(_token).safeTransfer */\n      tag_171\n        /* \"Vault/EvolleVault.sol\":45613:45660  IERC20(_token).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_282:\n        /* \"Vault/EvolleVault.sol\":34554:34555  _ */\n      pop\n        /* \"Vault/EvolleVault.sol\":45417:45667  function inCaseTokensGetStuck(address _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":39572:39610  uint256 public immutable approvalDelay */\n    tag_111:\n      immutable(\"0xbd4cd594c0d7e7808ed6d371a1eac9e421715fa066e86940ce0d6d7ca2323404\")\n      dup2\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":44760:45274  function upgradeStrat() public onlyOwner {... */\n    tag_113:\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      tag_284\n        /* \"Vault/EvolleVault.sol\":34495:34505  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      jump\t// in\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      tag_285\n        /* \"Vault/EvolleVault.sol\":34484:34489  owner */\n      tag_80\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n      eq\n        /* \"Vault/EvolleVault.sol\":34476:34544  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_286\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_286:\n        /* \"Vault/EvolleVault.sol\":44819:44833  stratCandidate */\n      0x07\n        /* \"Vault/EvolleVault.sol\":44819:44848  stratCandidate.implementation */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault/EvolleVault.sol\":44811:44888  require(stratCandidate.implementation != address(0), \"There is no candidate\") */\n      tag_288\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x5468657265206973206e6f2063616e646964617465)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_288:\n        /* \"Vault/EvolleVault.sol\":44906:44933  stratCandidate.proposedTime */\n      sload(0x08)\n        /* \"Vault/EvolleVault.sol\":44955:44970  block.timestamp */\n      timestamp\n      swap1\n        /* \"Vault/EvolleVault.sol\":44906:44952  stratCandidate.proposedTime.add(approvalDelay) */\n      tag_289\n      swap1\n        /* \"Vault/EvolleVault.sol\":44938:44951  approvalDelay */\n      immutable(\"0xbd4cd594c0d7e7808ed6d371a1eac9e421715fa066e86940ce0d6d7ca2323404\")\n        /* \"Vault/EvolleVault.sol\":44906:44937  stratCandidate.proposedTime.add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":44906:44952  stratCandidate.proposedTime.add(approvalDelay) */\n      jump\t// in\n    tag_289:\n        /* \"Vault/EvolleVault.sol\":44906:44970  stratCandidate.proposedTime.add(approvalDelay) < block.timestamp */\n      lt\n        /* \"Vault/EvolleVault.sol\":44898:44995  require(stratCandidate.proposedTime.add(approvalDelay) < block.timestamp, \"Delay has not passed\") */\n      tag_290\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x11195b185e481a185cc81b9bdd081c185cdcd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_290:\n        /* \"Vault/EvolleVault.sol\":45024:45038  stratCandidate */\n      0x07\n        /* \"Vault/EvolleVault.sol\":45024:45053  stratCandidate.implementation */\n      sload\n        /* \"Vault/EvolleVault.sol\":45011:45054  UpgradeStrat(stratCandidate.implementation) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45024:45053  stratCandidate.implementation */\n      swap1\n      swap3\n      and\n        /* \"Vault/EvolleVault.sol\":45011:45054  UpgradeStrat(stratCandidate.implementation) */\n      dup3\n      mstore\n      mload\n      0x7f37d440e85aba7fbf641c4bda5ca4ef669a80bffaacde2aa8d9feb1b048c82c\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"Vault/EvolleVault.sol\":45065:45073  strategy */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45065:45085  strategy.retireStrat */\n      and\n      0xfb617787\n        /* \"Vault/EvolleVault.sol\":45065:45087  strategy.retireStrat() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":45118:45132  stratCandidate */\n      0x07\n        /* \"Vault/EvolleVault.sol\":45118:45147  stratCandidate.implementation */\n      dup1\n      sload\n        /* \"Vault/EvolleVault.sol\":45097:45105  strategy */\n      0x09\n        /* \"Vault/EvolleVault.sol\":45097:45148  strategy = IStrategy(stratCandidate.implementation) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":45118:45147  stratCandidate.implementation */\n      dup5\n      and\n        /* \"Vault/EvolleVault.sol\":45097:45148  strategy = IStrategy(stratCandidate.implementation) */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault/EvolleVault.sol\":45158:45200  stratCandidate.implementation = address(0) */\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":45240:45250  5000000000 */\n      0x012a05f200\n        /* \"Vault/EvolleVault.sol\":45210:45237  stratCandidate.proposedTime */\n      0x08\n        /* \"Vault/EvolleVault.sol\":45210:45250  stratCandidate.proposedTime = 5000000000 */\n      sstore\n        /* \"Vault/EvolleVault.sol\":45261:45267  earn() */\n      tag_209\n        /* \"Vault/EvolleVault.sol\":45261:45265  earn */\n      tag_101\n        /* \"Vault/EvolleVault.sol\":45261:45267  earn() */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":35198:35438  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_116:\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      tag_296\n        /* \"Vault/EvolleVault.sol\":34495:34505  _msgSender */\n      tag_124\n        /* \"Vault/EvolleVault.sol\":34495:34507  _msgSender() */\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      tag_297\n        /* \"Vault/EvolleVault.sol\":34484:34489  owner */\n      tag_80\n        /* \"Vault/EvolleVault.sol\":34484:34491  owner() */\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":34484:34507  owner() == _msgSender() */\n      and\n      eq\n        /* \"Vault/EvolleVault.sol\":34476:34544  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_298\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":35286:35308  newOwner != address(0) */\n      dup2\n      and\n        /* \"Vault/EvolleVault.sol\":35278:35351  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"Vault/EvolleVault.sol\":35387:35393  _owner */\n      sload(0x05)\n        /* \"Vault/EvolleVault.sol\":35366:35404  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Vault/EvolleVault.sol\":35387:35393  _owner */\n      0x0100\n      swap1\n      div\n      and\n      swap1\n        /* \"Vault/EvolleVault.sol\":35366:35404  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":35414:35420  _owner */\n      0x05\n        /* \"Vault/EvolleVault.sol\":35414:35431  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Vault/EvolleVault.sol\":35198:35438  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_124:\n        /* \"Vault/EvolleVault.sol\":685:695  msg.sender */\n      caller\n        /* \"Vault/EvolleVault.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":20231:20571  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20332:20351  owner != address(0) */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":20324:20392  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20410:20431  spender != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":20402:20470  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":20481:20499  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Vault/EvolleVault.sol\":20481:20492  _allowances */\n      0x01\n        /* \"Vault/EvolleVault.sol\":20481:20499  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Vault/EvolleVault.sol\":20481:20508  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Vault/EvolleVault.sol\":20481:20517  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Vault/EvolleVault.sol\":20532:20564  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":20231:20571  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":17907:18437  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18012:18032  sender != address(0) */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":18004:18074  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18092:18115  recipient != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":18084:18155  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"Vault/EvolleVault.sol\":18166:18213  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_308\n        /* \"Vault/EvolleVault.sol\":18187:18193  sender */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18195:18204  recipient */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18206:18212  amount */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18166:18186  _beforeTokenTransfer */\n      tag_169\n        /* \"Vault/EvolleVault.sol\":18166:18213  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_308:\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_310\n        /* \"Vault/EvolleVault.sol\":18266:18272  amount */\n      dup2\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18244:18261  _balances[sender] */\n      dup7\n      and\n        /* \"Vault/EvolleVault.sol\":18244:18253  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18244:18261  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":18244:18265  _balances[sender].sub */\n      tag_139\n        /* \"Vault/EvolleVault.sol\":18244:18315  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18224:18241  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Vault/EvolleVault.sol\":18224:18233  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18224:18241  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Vault/EvolleVault.sol\":18224:18315  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Vault/EvolleVault.sol\":18348:18368  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Vault/EvolleVault.sol\":18348:18380  _balances[recipient].add(amount) */\n      tag_311\n      swap1\n        /* \"Vault/EvolleVault.sol\":18373:18379  amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":18348:18372  _balances[recipient].add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":18348:18380  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"Vault/EvolleVault.sol\":18325:18334  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Vault/EvolleVault.sol\":18325:18380  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Vault/EvolleVault.sol\":18395:18430  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Vault/EvolleVault.sol\":18325:18345  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Vault/EvolleVault.sol\":18395:18430  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":17907:18437  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":9140:9303  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"Vault/EvolleVault.sol\":9226:9233  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":9261:9273  errorMessage */\n      dup2\n        /* \"Vault/EvolleVault.sol\":9253:9259  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Vault/EvolleVault.sol\":9245:9274  require(b <= a, errorMessage) */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_314:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_316\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_314)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_317\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_317:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n      pop\n      pop\n      pop\n        /* \"Vault/EvolleVault.sol\":9291:9296  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Vault/EvolleVault.sol\":9140:9303  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":7246:7461  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_145:\n        /* \"Vault/EvolleVault.sol\":7304:7311  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":7327:7333  a == 0 */\n      dup3\n        /* \"Vault/EvolleVault.sol\":7323:7343  if (a == 0) return 0 */\n      tag_319\n      jumpi\n      pop\n        /* \"Vault/EvolleVault.sol\":7342:7343  0 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":7335:7343  return 0 */\n      jump(tag_121)\n        /* \"Vault/EvolleVault.sol\":7323:7343  if (a == 0) return 0 */\n    tag_319:\n        /* \"Vault/EvolleVault.sol\":7365:7370  a * b */\n      dup3\n      dup3\n      mul\n        /* \"Vault/EvolleVault.sol\":7369:7370  b */\n      dup3\n        /* \"Vault/EvolleVault.sol\":7365:7366  a */\n      dup5\n        /* \"Vault/EvolleVault.sol\":7365:7370  a * b */\n      dup3\n        /* \"Vault/EvolleVault.sol\":7365:7366  a */\n      dup2\n        /* \"Vault/EvolleVault.sol\":7388:7393  c / a */\n      tag_320\n      jumpi\n      invalid\n    tag_320:\n      div\n        /* \"Vault/EvolleVault.sol\":7388:7398  c / a == b */\n      eq\n        /* \"Vault/EvolleVault.sol\":7380:7436  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault/EvolleVault.sol\":7925:8075  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_146:\n        /* \"Vault/EvolleVault.sol\":7983:7990  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":8014:8015  0 */\n      dup1\n        /* \"Vault/EvolleVault.sol\":8010:8011  b */\n      dup3\n        /* \"Vault/EvolleVault.sol\":8010:8015  b > 0 */\n      gt\n        /* \"Vault/EvolleVault.sol\":8002:8046  require(b > 0, \"SafeMath: division by zero\") */\n      tag_323\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_323:\n        /* \"Vault/EvolleVault.sol\":8067:8068  b */\n      dup2\n        /* \"Vault/EvolleVault.sol\":8063:8064  a */\n      dup4\n        /* \"Vault/EvolleVault.sol\":8063:8068  a / b */\n      dup2\n      tag_324\n      jumpi\n      invalid\n    tag_324:\n      div\n      swap4\n        /* \"Vault/EvolleVault.sol\":7925:8075  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":19398:19808  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":19481:19502  account != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":19473:19540  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"Vault/EvolleVault.sol\":19551:19600  _beforeTokenTransfer(account, address(0), amount) */\n      tag_327\n        /* \"Vault/EvolleVault.sol\":19572:19579  account */\n      dup3\n        /* \"Vault/EvolleVault.sol\":19589:19590  0 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":19593:19599  amount */\n      dup4\n        /* \"Vault/EvolleVault.sol\":19551:19571  _beforeTokenTransfer */\n      tag_169\n        /* \"Vault/EvolleVault.sol\":19551:19600  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_327:\n        /* \"Vault/EvolleVault.sol\":19632:19700  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_328\n        /* \"Vault/EvolleVault.sol\":19655:19661  amount */\n      dup2\n        /* \"Vault/EvolleVault.sol\":19632:19700  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":19632:19650  _balances[account] */\n      dup6\n      and\n        /* \"Vault/EvolleVault.sol\":19632:19641  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":19632:19650  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Vault/EvolleVault.sol\":19632:19700  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"Vault/EvolleVault.sol\":19632:19654  _balances[account].sub */\n      tag_139\n        /* \"Vault/EvolleVault.sol\":19632:19700  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":19611:19629  _balances[account] */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":19611:19620  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":19611:19629  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Vault/EvolleVault.sol\":19611:19700  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"Vault/EvolleVault.sol\":19725:19737  _totalSupply */\n      sload(0x02)\n        /* \"Vault/EvolleVault.sol\":19725:19749  _totalSupply.sub(amount) */\n      tag_329\n      swap1\n        /* \"Vault/EvolleVault.sol\":19742:19748  amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":19725:19741  _totalSupply.sub */\n      tag_156\n        /* \"Vault/EvolleVault.sol\":19725:19749  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_329:\n        /* \"Vault/EvolleVault.sol\":19710:19722  _totalSupply */\n      0x02\n        /* \"Vault/EvolleVault.sol\":19710:19749  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"Vault/EvolleVault.sol\":19764:19801  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Vault/EvolleVault.sol\":19790:19791  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":19764:19801  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":19398:19808  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":6844:6999  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"Vault/EvolleVault.sol\":6902:6909  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":6934:6935  a */\n      dup3\n        /* \"Vault/EvolleVault.sol\":6929:6930  b */\n      dup3\n        /* \"Vault/EvolleVault.sol\":6929:6935  b <= a */\n      gt\n      iszero\n        /* \"Vault/EvolleVault.sol\":6921:6970  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_331\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_331:\n      pop\n        /* \"Vault/EvolleVault.sol\":6987:6992  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Vault/EvolleVault.sol\":6844:6999  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":6398:6573  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"Vault/EvolleVault.sol\":6456:6463  uint256 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":6487:6492  a + b */\n      dup3\n      dup3\n      add\n        /* \"Vault/EvolleVault.sol\":6510:6516  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Vault/EvolleVault.sol\":6502:6548  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"Vault/EvolleVault.sol\":30171:30346  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_171:\n        /* \"Vault/EvolleVault.sol\":30280:30338  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"Vault/EvolleVault.sol\":30253:30339  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_169\n      swap1\n        /* \"Vault/EvolleVault.sol\":30273:30278  token */\n      dup5\n      swap1\n        /* \"Vault/EvolleVault.sol\":30253:30272  _callOptionalReturn */\n      tag_336\n        /* \"Vault/EvolleVault.sol\":30253:30339  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"Vault/EvolleVault.sol\":30352:30555  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_244:\n        /* \"Vault/EvolleVault.sol\":30479:30547  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"Vault/EvolleVault.sol\":30452:30548  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_338\n      swap1\n        /* \"Vault/EvolleVault.sol\":30472:30477  token */\n      dup6\n      swap1\n        /* \"Vault/EvolleVault.sol\":30452:30471  _callOptionalReturn */\n      tag_336\n        /* \"Vault/EvolleVault.sol\":30452:30548  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_338:\n        /* \"Vault/EvolleVault.sol\":30352:30555  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":18708:19078  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18791:18812  account != address(0) */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":18783:18848  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_340\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_340:\n        /* \"Vault/EvolleVault.sol\":18859:18908  _beforeTokenTransfer(address(0), account, amount) */\n      tag_341\n        /* \"Vault/EvolleVault.sol\":18888:18889  0 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18892:18899  account */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18901:18907  amount */\n      dup4\n        /* \"Vault/EvolleVault.sol\":18859:18879  _beforeTokenTransfer */\n      tag_169\n        /* \"Vault/EvolleVault.sol\":18859:18908  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_341:\n        /* \"Vault/EvolleVault.sol\":18934:18946  _totalSupply */\n      sload(0x02)\n        /* \"Vault/EvolleVault.sol\":18934:18958  _totalSupply.add(amount) */\n      tag_342\n      swap1\n        /* \"Vault/EvolleVault.sol\":18951:18957  amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":18934:18950  _totalSupply.add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":18934:18958  _totalSupply.add(amount) */\n      jump\t// in\n    tag_342:\n        /* \"Vault/EvolleVault.sol\":18919:18931  _totalSupply */\n      0x02\n        /* \"Vault/EvolleVault.sol\":18919:18958  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18989:19007  _balances[account] */\n      dup3\n      and\n        /* \"Vault/EvolleVault.sol\":18989:18998  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18989:19007  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Vault/EvolleVault.sol\":18989:19019  _balances[account].add(amount) */\n      tag_343\n      swap1\n        /* \"Vault/EvolleVault.sol\":19012:19018  amount */\n      dup3\n        /* \"Vault/EvolleVault.sol\":18989:19011  _balances[account].add */\n      tag_168\n        /* \"Vault/EvolleVault.sol\":18989:19019  _balances[account].add(amount) */\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":18968:18986  _balances[account] */\n      dup4\n      and\n        /* \"Vault/EvolleVault.sol\":18968:18977  _balances */\n      0x00\n        /* \"Vault/EvolleVault.sol\":18968:18986  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Vault/EvolleVault.sol\":18968:19019  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Vault/EvolleVault.sol\":19034:19071  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"Vault/EvolleVault.sol\":18968:18986  _balances[account] */\n      swap3\n      swap4\n        /* \"Vault/EvolleVault.sol\":18968:18977  _balances */\n      swap2\n      swap3\n        /* \"Vault/EvolleVault.sol\":19034:19071  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Vault/EvolleVault.sol\":18708:19078  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":32434:33185  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_336:\n        /* \"Vault/EvolleVault.sol\":32853:32876  bytes memory returndata */\n      0x60\n        /* \"Vault/EvolleVault.sol\":32879:32948  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_346\n        /* \"Vault/EvolleVault.sol\":32907:32911  data */\n      dup3\n        /* \"Vault/EvolleVault.sol\":32879:32948  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Vault/EvolleVault.sol\":32887:32892  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":32879:32906  address(token).functionCall */\n      and\n      tag_347\n      swap1\n        /* \"Vault/EvolleVault.sol\":32879:32948  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_346:\n        /* \"Vault/EvolleVault.sol\":32962:32979  returndata.length */\n      dup1\n      mload\n        /* \"Vault/EvolleVault.sol\":32853:32948  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"Vault/EvolleVault.sol\":32962:32983  returndata.length > 0 */\n      iszero\n        /* \"Vault/EvolleVault.sol\":32958:33179  if (returndata.length > 0) { // Return data is optional... */\n      tag_169\n      jumpi\n        /* \"Vault/EvolleVault.sol\":33102:33112  returndata */\n      dup1\n        /* \"Vault/EvolleVault.sol\":33091:33121  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_349\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_349:\n      pop\n      mload\n        /* \"Vault/EvolleVault.sol\":33083:33168  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault/EvolleVault.sol\":25282:25475  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_347:\n        /* \"Vault/EvolleVault.sol\":25385:25397  bytes memory */\n      0x60\n        /* \"Vault/EvolleVault.sol\":25416:25468  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_352\n        /* \"Vault/EvolleVault.sol\":25438:25444  target */\n      dup5\n        /* \"Vault/EvolleVault.sol\":25446:25450  data */\n      dup5\n        /* \"Vault/EvolleVault.sol\":25452:25453  0 */\n      0x00\n        /* \"Vault/EvolleVault.sol\":25455:25467  errorMessage */\n      dup6\n        /* \"Vault/EvolleVault.sol\":25416:25437  functionCallWithValue */\n      tag_353\n        /* \"Vault/EvolleVault.sol\":25416:25468  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_352:\n        /* \"Vault/EvolleVault.sol\":25409:25468  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"Vault/EvolleVault.sol\":25282:25475  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":26309:26832  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_353:\n        /* \"Vault/EvolleVault.sol\":26436:26448  bytes memory */\n      0x60\n        /* \"Vault/EvolleVault.sol\":26493:26498  value */\n      dup3\n        /* \"Vault/EvolleVault.sol\":26468:26489  address(this).balance */\n      selfbalance\n        /* \"Vault/EvolleVault.sol\":26468:26498  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Vault/EvolleVault.sol\":26460:26541  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_355:\n        /* \"Vault/EvolleVault.sol\":26559:26577  isContract(target) */\n      tag_356\n        /* \"Vault/EvolleVault.sol\":26570:26576  target */\n      dup6\n        /* \"Vault/EvolleVault.sol\":26559:26569  isContract */\n      tag_357\n        /* \"Vault/EvolleVault.sol\":26559:26577  isContract(target) */\n      jump\t// in\n    tag_356:\n        /* \"Vault/EvolleVault.sol\":26551:26611  require(isContract(target), \"Address: call to non-contract\") */\n      tag_358\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_358:\n        /* \"Vault/EvolleVault.sol\":26682:26694  bool success */\n      0x00\n        /* \"Vault/EvolleVault.sol\":26696:26719  bytes memory returndata */\n      0x60\n        /* \"Vault/EvolleVault.sol\":26723:26729  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault/EvolleVault.sol\":26723:26734  target.call */\n      and\n        /* \"Vault/EvolleVault.sol\":26743:26748  value */\n      dup6\n        /* \"Vault/EvolleVault.sol\":26751:26755  data */\n      dup8\n        /* \"Vault/EvolleVault.sol\":26723:26756  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_359:\n      0x20\n      dup4\n      lt\n      tag_361\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_359)\n    tag_361:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_364\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_363)\n    tag_364:\n      0x60\n      swap2\n      pop\n    tag_363:\n      pop\n        /* \"Vault/EvolleVault.sol\":26681:26756  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Vault/EvolleVault.sol\":26773:26825  _verifyCallResult(success, returndata, errorMessage) */\n      tag_365\n        /* \"Vault/EvolleVault.sol\":26791:26798  success */\n      dup3\n        /* \"Vault/EvolleVault.sol\":26800:26810  returndata */\n      dup3\n        /* \"Vault/EvolleVault.sol\":26812:26824  errorMessage */\n      dup7\n        /* \"Vault/EvolleVault.sol\":26773:26790  _verifyCallResult */\n      tag_366\n        /* \"Vault/EvolleVault.sol\":26773:26825  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_365:\n        /* \"Vault/EvolleVault.sol\":26766:26825  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"Vault/EvolleVault.sol\":26309:26832  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":22427:22840  function isContract(address account) internal view returns (bool) {... */\n    tag_357:\n        /* \"Vault/EvolleVault.sol\":22787:22807  extcodesize(account) */\n      extcodesize\n        /* \"Vault/EvolleVault.sol\":22825:22833  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"Vault/EvolleVault.sol\":22427:22840  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"Vault/EvolleVault.sol\":28792:29517  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_366:\n        /* \"Vault/EvolleVault.sol\":28907:28919  bytes memory */\n      0x60\n        /* \"Vault/EvolleVault.sol\":28935:28942  success */\n      dup4\n        /* \"Vault/EvolleVault.sol\":28931:29511  if (success) {... */\n      iszero\n      tag_369\n      jumpi\n      pop\n        /* \"Vault/EvolleVault.sol\":28965:28975  returndata */\n      dup2\n        /* \"Vault/EvolleVault.sol\":28958:28975  return returndata */\n      jump(tag_132)\n        /* \"Vault/EvolleVault.sol\":28931:29511  if (success) {... */\n    tag_369:\n        /* \"Vault/EvolleVault.sol\":29076:29093  returndata.length */\n      dup3\n      mload\n        /* \"Vault/EvolleVault.sol\":29076:29097  returndata.length > 0 */\n      iszero\n        /* \"Vault/EvolleVault.sol\":29072:29501  if (returndata.length > 0) {... */\n      tag_371\n      jumpi\n        /* \"Vault/EvolleVault.sol\":29334:29344  returndata */\n      dup3\n        /* \"Vault/EvolleVault.sol\":29328:29345  mload(returndata) */\n      mload\n        /* \"Vault/EvolleVault.sol\":29394:29409  returndata_size */\n      dup1\n        /* \"Vault/EvolleVault.sol\":29381:29391  returndata */\n      dup5\n        /* \"Vault/EvolleVault.sol\":29377:29379  32 */\n      0x20\n        /* \"Vault/EvolleVault.sol\":29373:29392  add(32, returndata) */\n      add\n        /* \"Vault/EvolleVault.sol\":29366:29410  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Vault/EvolleVault.sol\":29283:29428  {... */\n    tag_371:\n        /* \"Vault/EvolleVault.sol\":29466:29486  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup5\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup5\n      mload\n        /* \"Vault/EvolleVault.sol\":29473:29485  errorMessage */\n      dup6\n      swap4\n        /* \"Vault/EvolleVault.sol\":29466:29486  revert(errorMessage) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_316\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_314)\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_6d06d9f1cf1cb47b4c164a82a99136bb279d51ecac86ea5fd348be592f7bfe2e 50726f706f73616c206e6f742076616c696420666f722074686973205661756c74\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220014d554ec4dc8c2f22e4c045b2952b7a1c529e25db739cd1d3a9a0216d6d98b664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2477 CODESIZE SUB DUP1 PUSH3 0x2477 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x171 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x157 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x19F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP3 POP DUP5 SWAP2 PUSH3 0x1C4 SWAP2 PUSH1 0x3 SWAP2 DUP6 ADD SWAP1 PUSH3 0x281 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1DA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x281 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x1F6 PUSH3 0x27D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP POP PUSH1 0x80 MSTORE PUSH3 0x31D JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2C4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2D7 JUMP JUMPDEST POP PUSH3 0x302 SWAP3 SWAP2 POP PUSH3 0x306 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x302 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x307 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x213A PUSH3 0x33D PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1225 MSTORE DUP1 PUSH2 0x1309 MSTORE POP PUSH2 0x213A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDEF68A9C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE2D1E75C EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xE6685244 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xDE5F6268 EQ PUSH2 0x4D0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x475 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40D JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x76DFABB8 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x3F5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x5B12FF9B EQ PUSH2 0x376 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1F1FCD51 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x324 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x664 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x997 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x322 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x322 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x299 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x322 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0x5D7 PUSH2 0x1561 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1565 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F1FCD51 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1F1FCD51 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 DUP5 DUP5 DUP5 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x6E1 DUP5 PUSH2 0x67D PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x6DC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2004 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6BB PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 PUSH2 0x6F9 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x70B DUP5 PUSH2 0x705 PUSH2 0xD43 JUMP JUMPDEST SWAP1 PUSH2 0x1843 JUMP JUMPDEST SWAP1 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH2 0x71D CALLER DUP4 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x2E1A7D4D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x819 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x827 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8AD DUP3 DUP6 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x8C4 JUMPI PUSH2 0x8C1 DUP5 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x8E5 CALLER DUP4 PUSH2 0x8D5 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0x900 PUSH2 0x1561 JUMP JUMPDEST DUP5 PUSH2 0x6DC DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x911 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x8 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x1AAE2EC5647DB56DA2D513DE40528BA3565C6057525637050660C4323BBAC7DF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB40 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH2 0x5E8 JUMP JUMPDEST ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC1C PUSH2 0xC08 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x70B PUSH8 0xDE0B6B3A7640000 PUSH2 0x705 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0xC3C CALLER PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0xCC5 PUSH2 0x1561 JUMP JUMPDEST DUP5 PUSH2 0x6DC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xCEF PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0xD3C PUSH2 0x1561 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2B PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x722713F7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDCA PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2B9FF785 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x573FEF0A SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xF0D PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2E CALLER ADDRESS DUP5 PUSH2 0xF1D PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xF36 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF40 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH2 0xF4C DUP2 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0xF58 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0xF63 JUMPI POP DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0x70B PUSH2 0xF72 PUSH2 0x5E8 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF86 CALLER DUP3 PUSH2 0x1B68 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9B PUSH2 0x941 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0xFB7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x8D5 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0x1058 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10EE PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1137 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x113F PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10BA37B5B2B7 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x121F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x1AB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1260 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5468657265206973206E6F2063616E646964617465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP SWAP1 PUSH2 0x132D SWAP1 PUSH32 0x0 PUSH2 0x1A5C JUMP JUMPDEST LT PUSH2 0x1376 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11195B185E481A185CC81B9BDD081C185CDCD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD PUSH32 0x7F37D440E85ABA7FBF641C4BDA5CA4EF669A80BFFAACDE2AA8D9FEB1B048C82C SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFB617787 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE POP POP PUSH5 0x12A05F200 PUSH1 0x8 SSTORE PUSH2 0xC41 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x145B PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146C PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F2E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2092 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F54 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x206D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EE9 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E6 DUP4 DUP4 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1723 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F76 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1752 SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1800 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x182D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1852 JUMPI POP PUSH1 0x0 PUSH2 0x5E2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x185F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x18F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x18FB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x204C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1954 DUP3 PUSH1 0x0 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x19B7 SWAP1 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x8E5 SWAP1 DUP5 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1B62 SWAP1 DUP6 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1BCF PUSH1 0x0 DUP4 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BDC SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C02 SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20B6 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1D18 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F9C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D6A DUP6 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x1DBB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1DFA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E71 DUP3 DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E91 JUMPI POP DUP2 PUSH2 0x6E5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1EA1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1800 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65416464 PUSH19 0x6573733A20696E73756666696369656E742062 PUSH2 0x6C61 PUSH15 0x636520666F722063616C6C50726F70 PUSH16 0x73616C206E6F742076616C696420666F PUSH19 0x2074686973205661756C74536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x4F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E65724552433230 GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 ADD 0x4D SSTORE 0x4E 0xC4 0xDC DUP13 0x2F 0x22 0xE4 0xC0 GASLIMIT 0xB2 SWAP6 0x2B PUSH27 0x1C529E25DB739CD1D3A9A0216D6D98B664736F6C634300060C0033 ",
							"sourceMap": "39098:6571:0:-:0;;;40263:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40263:268:0;;;;;;;;;;-1:-1:-1;40263:268:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40263:268:0;;;;;;;;;;-1:-1:-1;40263:268:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40263:268:0;;;;;;;12908:13;;40263:268;;-1:-1:-1;40425:5:0;;-1:-1:-1;40440:7:0;;12908:13;;:5;;:13;;;;:::i;:::-;-1:-1:-1;12931:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;12958:9:0;:14;;-1:-1:-1;;12958:14:0;12970:2;12958:14;;;-1:-1:-1;12958:9:0;34091:12;:10;:12::i;:::-;34113:6;:18;;-1:-1:-1;;;;;;34113:18:0;;-1:-1:-1;;;;;34113:18:0;;;;;;;;;;;;34146:43;;34113:18;;-1:-1:-1;34113:18:0;-1:-1:-1;;34146:43:0;;-1:-1:-1;;34146:43:0;-1:-1:-1;37123:1:0;37238:7;:22;40464:8:::1;:20:::0;;-1:-1:-1;;;;;;40464:20:0::1;-1:-1:-1::0;;;;;40464:20:0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;40494:30:0::1;::::0;39098:6571;;598:104;685:10;598:104;:::o;39098:6571::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39098:6571:0;;;-1:-1:-1;39098:6571:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"1691": [
									{
										"length": 32,
										"start": 4645
									},
									{
										"length": 32,
										"start": 4873
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063853828b611610104578063b6b55f25116100a2578063def68a9c11610071578063def68a9c146104d8578063e2d1e75c146104fe578063e668524414610506578063f2fde38b1461050e576101cf565b8063b6b55f251461047d578063d389800f1461049a578063dd62ed3e146104a2578063de5f6268146104d0576101cf565b8063a457c2d7116100de578063a457c2d714610415578063a8c62e7614610441578063a9059cbb14610449578063b69ef8a814610475576101cf565b8063853828b6146103fd5780638da5cb5b1461040557806395d89b411461040d576101cf565b8063395093511161017157806370a082311161014b57806370a082311461039c578063715018a6146103c257806376dfabb8146103ca57806377c7b8fc146103f5576101cf565b8063395093511461034257806348a0d7541461036e5780635b12ff9b14610376576101cf565b80631f1fcd51116101ad5780631f1fcd51146102ab57806323b872dd146102cf5780632e1a7d4d14610305578063313ce56714610324576101cf565b806306fdde03146101d4578063095ea7b31461025157806318160ddd14610291575b600080fd5b6101dc610534565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b0381351690602001356105ca565b604080519115158252519081900360200190f35b6102996105e8565b60408051918252519081900360200190f35b6102b36105ee565b604080516001600160a01b039092168252519081900360200190f35b61027d600480360360608110156102e557600080fd5b506001600160a01b03813581169160208101359091169060400135610664565b6103226004803603602081101561031b57600080fd5b50356106ec565b005b61032c6108ea565b6040805160ff9092168252519081900360200190f35b61027d6004803603604081101561035857600080fd5b506001600160a01b0381351690602001356108f3565b610299610941565b6103226004803603602081101561038c57600080fd5b50356001600160a01b0316610997565b610299600480360360208110156103b257600080fd5b50356001600160a01b0316610b0c565b610322610b27565b6103d2610bd9565b604080516001600160a01b03909316835260208301919091528051918290030190f35b610299610bee565b610322610c30565b6102b3610c43565b6101dc610c57565b61027d6004803603604081101561042b57600080fd5b506001600160a01b038135169060200135610cb8565b6102b3610d20565b61027d6004803603604081101561045f57600080fd5b506001600160a01b038135169060200135610d2f565b610299610d43565b6103226004803603602081101561049357600080fd5b5035610e48565b610322610f91565b610299600480360360408110156104b857600080fd5b506001600160a01b0381358116916020013516611022565b61032261104d565b610322600480360360208110156104ee57600080fd5b50356001600160a01b03166110d5565b610299611223565b610322611247565b6103226004803603602081101561052457600080fd5b50356001600160a01b0316611453565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c05780601f10610595576101008083540402835291602001916105c0565b820191906000526020600020905b8154815290600101906020018083116105a357829003601f168201915b5050505050905090565b60006105de6105d7611561565b8484611565565b5060015b92915050565b60025490565b60095460408051631f1fcd5160e01b815290516000926001600160a01b031691631f1fcd51916004808301926020929190829003018186803b15801561063357600080fd5b505afa158015610647573d6000803e3d6000fd5b505050506040513d602081101561065d57600080fd5b5051905090565b6000610671848484611651565b6106e18461067d611561565b6106dc85604051806060016040528060288152602001612004602891396001600160a01b038a166000908152600160205260408120906106bb611561565b6001600160a01b0316815260208101919091526040016000205491906117ac565b611565565b5060015b9392505050565b60006107116106f96105e8565b61070b84610705610d43565b90611843565b9061189c565b905061071d3383611903565b60006107276105ee565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561077357600080fd5b505afa158015610787573d6000803e3d6000fd5b505050506040513d602081101561079d57600080fd5b50519050818110156108c85760006107b583836119ff565b60095460408051632e1a7d4d60e01b81526004810184905290519293506001600160a01b0390911691632e1a7d4d9160248082019260009290919082900301818387803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b5050505060006108276105ee565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561087357600080fd5b505afa158015610887573d6000803e3d6000fd5b505050506040513d602081101561089d57600080fd5b5051905060006108ad82856119ff565b9050828110156108c4576108c18482611a5c565b94505b5050505b6108e533836108d56105ee565b6001600160a01b03169190611ab6565b505050565b60055460ff1690565b60006105de610900611561565b846106dc8560016000610911611561565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611a5c565b600061094b6105ee565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561063357600080fd5b61099f611561565b6001600160a01b03166109b0610c43565b6001600160a01b0316146109f9576040805162461bcd60e51b8152602060048201819052602482015260008051602061202c833981519152604482015290519081900360640190fd5b806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3257600080fd5b505afa158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b50516001600160a01b03163014610aa45760405162461bcd60e51b8152600401808060200182810382526021815260200180611fc26021913960400191505060405180910390fd5b6040805180820182526001600160a01b038316808252426020928301819052600780546001600160a01b03191683179055600855825190815291517f1aae2ec5647db56da2d513de40528ba3565c6057525637050660c4323bbac7df9281900390910190a150565b6001600160a01b031660009081526020819052604090205490565b610b2f611561565b6001600160a01b0316610b40610c43565b6001600160a01b031614610b89576040805162461bcd60e51b8152602060048201819052602482015260008051602061202c833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6007546008546001600160a01b039091169082565b6000610bf86105e8565b15610c2157610c1c610c086105e8565b61070b670de0b6b3a7640000610705610d43565b610c2b565b670de0b6b3a76400005b905090565b610c41610c3c33610b0c565b6106ec565b565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c05780601f10610595576101008083540402835291602001916105c0565b60006105de610cc5611561565b846106dc856040518060600160405280602581526020016120e06025913960016000610cef611561565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906117ac565b6009546001600160a01b031681565b60006105de610d3c611561565b8484611651565b6000610c2b600960009054906101000a90046001600160a01b03166001600160a01b031663722713f76040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9657600080fd5b505afa158015610daa573d6000803e3d6000fd5b505050506040513d6020811015610dc057600080fd5b5051610dca6105ee565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e1657600080fd5b505afa158015610e2a573d6000803e3d6000fd5b505050506040513d6020811015610e4057600080fd5b505190611a5c565b60026006541415610ea0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260065560095460408051632b9ff78560e11b815290516001600160a01b039092169163573fef0a9160048082019260009290919082900301818387803b158015610eeb57600080fd5b505af1158015610eff573d6000803e3d6000fd5b505050506000610f0d610d43565b9050610f2e333084610f1d6105ee565b6001600160a01b0316929190611b08565b610f36610f91565b6000610f40610d43565b9050610f4c81836119ff565b92506000610f586105e8565b610f63575082610f7c565b610f798361070b610f726105e8565b8790611843565b90505b610f863382611b68565b505060016006555050565b6000610f9b610941565b600954909150610fb7906001600160a01b0316826108d56105ee565b600960009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561100757600080fd5b505af115801561101b573d6000803e3d6000fd5b5050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610c416110586105ee565b6001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110a457600080fd5b505afa1580156110b8573d6000803e3d6000fd5b505050506040513d60208110156110ce57600080fd5b5051610e48565b6110dd611561565b6001600160a01b03166110ee610c43565b6001600160a01b031614611137576040805162461bcd60e51b8152602060048201819052602482015260008051602061202c833981519152604482015290519081900360640190fd5b61113f6105ee565b6001600160a01b0316816001600160a01b0316141561118e576040805162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156111dd57600080fd5b505afa1580156111f1573d6000803e3d6000fd5b505050506040513d602081101561120757600080fd5b5051905061121f6001600160a01b0383163383611ab6565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61124f611561565b6001600160a01b0316611260610c43565b6001600160a01b0316146112a9576040805162461bcd60e51b8152602060048201819052602482015260008051602061202c833981519152604482015290519081900360640190fd5b6007546001600160a01b03166112fe576040805162461bcd60e51b81526020600482015260156024820152745468657265206973206e6f2063616e64696461746560581b604482015290519081900360640190fd5b600854429061132d907f0000000000000000000000000000000000000000000000000000000000000000611a5c565b10611376576040805162461bcd60e51b815260206004820152601460248201527311195b185e481a185cc81b9bdd081c185cdcd95960621b604482015290519081900360640190fd5b600754604080516001600160a01b039092168252517f7f37d440e85aba7fbf641c4bda5ca4ef669a80bffaacde2aa8d9feb1b048c82c9181900360200190a1600960009054906101000a90046001600160a01b03166001600160a01b031663fb6177876040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561140557600080fd5b505af1158015611419573d6000803e3d6000fd5b505060078054600980546001600160a01b03199081166001600160a01b03841617909155169055505064012a05f200600855610c41610f91565b61145b611561565b6001600160a01b031661146c610c43565b6001600160a01b0316146114b5576040805162461bcd60e51b8152602060048201819052602482015260008051602061202c833981519152604482015290519081900360640190fd5b6001600160a01b0381166114fa5760405162461bcd60e51b8152600401808060200182810382526026815260200180611f2e6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b0383166115aa5760405162461bcd60e51b81526004018080602001828103825260248152602001806120926024913960400191505060405180910390fd5b6001600160a01b0382166115ef5760405162461bcd60e51b8152600401808060200182810382526022815260200180611f546022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166116965760405162461bcd60e51b815260040180806020018281038252602581526020018061206d6025913960400191505060405180910390fd5b6001600160a01b0382166116db5760405162461bcd60e51b8152600401808060200182810382526023815260200180611ee96023913960400191505060405180910390fd5b6116e68383836108e5565b61172381604051806060016040528060268152602001611f76602691396001600160a01b03861660009081526020819052604090205491906117ac565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546117529082611a5c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561183b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118005781810151838201526020016117e8565b50505050905090810190601f16801561182d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082611852575060006105e2565b8282028284828161185f57fe5b04146106e55760405162461bcd60e51b8152600401808060200182810382526021815260200180611fe36021913960400191505060405180910390fd5b60008082116118f2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816118fb57fe5b049392505050565b6001600160a01b0382166119485760405162461bcd60e51b815260040180806020018281038252602181526020018061204c6021913960400191505060405180910390fd5b611954826000836108e5565b61199181604051806060016040528060228152602001611f0c602291396001600160a01b03851660009081526020819052604090205491906117ac565b6001600160a01b0383166000908152602081905260409020556002546119b790826119ff565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115611a56576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106e5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108e5908490611c58565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611b62908590611c58565b50505050565b6001600160a01b038216611bc3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611bcf600083836108e5565b600254611bdc9082611a5c565b6002556001600160a01b038216600090815260208190526040902054611c029082611a5c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6060611cad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d099092919063ffffffff16565b8051909150156108e557808060200190516020811015611ccc57600080fd5b50516108e55760405162461bcd60e51b815260040180806020018281038252602a8152602001806120b6602a913960400191505060405180910390fd5b6060611d188484600085611d20565b949350505050565b606082471015611d615760405162461bcd60e51b8152600401808060200182810382526026815260200180611f9c6026913960400191505060405180910390fd5b611d6a85611e7c565b611dbb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611dfa5780518252601f199092019160209182019101611ddb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611e5c576040519150601f19603f3d011682016040523d82523d6000602084013e611e61565b606091505b5091509150611e71828286611e82565b979650505050505050565b3b151590565b60608315611e915750816106e5565b825115611ea15782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156118005781810151838201526020016117e856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c50726f706f73616c206e6f742076616c696420666f722074686973205661756c74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220014d554ec4dc8c2f22e4c045b2952b7a1c529e25db739cd1d3a9a0216d6d98b664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDEF68A9C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE2D1E75C EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xE6685244 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xDE5F6268 EQ PUSH2 0x4D0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x475 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40D JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x76DFABB8 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x3F5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x5B12FF9B EQ PUSH2 0x376 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1F1FCD51 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x324 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x664 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x997 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x322 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x322 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x299 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x322 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0x5D7 PUSH2 0x1561 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1565 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F1FCD51 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1F1FCD51 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x647 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 DUP5 DUP5 DUP5 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x6E1 DUP5 PUSH2 0x67D PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x6DC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2004 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6BB PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 PUSH2 0x6F9 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x70B DUP5 PUSH2 0x705 PUSH2 0xD43 JUMP JUMPDEST SWAP1 PUSH2 0x1843 JUMP JUMPDEST SWAP1 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH2 0x71D CALLER DUP4 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x2E1A7D4D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x819 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x827 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8AD DUP3 DUP6 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x8C4 JUMPI PUSH2 0x8C1 DUP5 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x8E5 CALLER DUP4 PUSH2 0x8D5 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0x900 PUSH2 0x1561 JUMP JUMPDEST DUP5 PUSH2 0x6DC DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x911 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x8 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x1AAE2EC5647DB56DA2D513DE40528BA3565C6057525637050660C4323BBAC7DF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB40 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH2 0x5E8 JUMP JUMPDEST ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC1C PUSH2 0xC08 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x70B PUSH8 0xDE0B6B3A7640000 PUSH2 0x705 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0xC3C CALLER PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0xCC5 PUSH2 0x1561 JUMP JUMPDEST DUP5 PUSH2 0x6DC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xCEF PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE PUSH2 0xD3C PUSH2 0x1561 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2B PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x722713F7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDCA PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2B9FF785 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x573FEF0A SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xF0D PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2E CALLER ADDRESS DUP5 PUSH2 0xF1D PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xF36 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF40 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH2 0xF4C DUP2 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0xF58 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0xF63 JUMPI POP DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0x70B PUSH2 0xF72 PUSH2 0x5E8 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF86 CALLER DUP3 PUSH2 0x1B68 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9B PUSH2 0x941 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0xFB7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x8D5 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0x1058 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10EE PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1137 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x113F PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10BA37B5B2B7 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x121F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x1AB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1260 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5468657265206973206E6F2063616E646964617465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP SWAP1 PUSH2 0x132D SWAP1 PUSH32 0x0 PUSH2 0x1A5C JUMP JUMPDEST LT PUSH2 0x1376 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11195B185E481A185CC81B9BDD081C185CDCD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD PUSH32 0x7F37D440E85ABA7FBF641C4BDA5CA4EF669A80BFFAACDE2AA8D9FEB1B048C82C SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFB617787 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE POP POP PUSH5 0x12A05F200 PUSH1 0x8 SSTORE PUSH2 0xC41 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x145B PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146C PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x202C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F2E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2092 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F54 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x206D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EE9 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E6 DUP4 DUP4 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1723 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F76 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1752 SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1800 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x182D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1852 JUMPI POP PUSH1 0x0 PUSH2 0x5E2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x185F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x18F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x18FB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x204C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1954 DUP3 PUSH1 0x0 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x19B7 SWAP1 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x8E5 SWAP1 DUP5 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1B62 SWAP1 DUP6 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1BCF PUSH1 0x0 DUP4 DUP4 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BDC SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C02 SWAP1 DUP3 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20B6 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1D18 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F9C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D6A DUP6 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x1DBB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1DFA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E71 DUP3 DUP3 DUP7 PUSH2 0x1E82 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E91 JUMPI POP DUP2 PUSH2 0x6E5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1EA1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1800 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65416464 PUSH19 0x6573733A20696E73756666696369656E742062 PUSH2 0x6C61 PUSH15 0x636520666F722063616C6C50726F70 PUSH16 0x73616C206E6F742076616C696420666F PUSH19 0x2074686973205661756C74536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x4F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E65724552433230 GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 ADD 0x4D SSTORE 0x4E 0xC4 0xDC DUP13 0x2F 0x22 0xE4 0xC0 GASLIMIT 0xB2 SWAP6 0x2B PUSH27 0x1C529E25DB739CD1D3A9A0216D6D98B664736F6C634300060C0033 ",
							"sourceMap": "39098:6571:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13044:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15120:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15120:166:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14111:106;;;:::i;:::-;;;;;;;;;;;;;;;;40537:92;;;:::i;:::-;;;;-1:-1:-1;;;;;40537:92:0;;;;;;;;;;;;;;15753:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15753:317:0;;;;;;;;;;;;;;;;;:::i;43437:542::-;;;;;;;;;;;;;;;;-1:-1:-1;43437:542:0;;:::i;:::-;;13962:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16465:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16465:215:0;;;;;;;;:::i;41320:106::-;;;:::i;44146:370::-;;;;;;;;;;;;;;;;-1:-1:-1;44146:370:0;-1:-1:-1;;;;;44146:370:0;;:::i;14275:125::-;;;;;;;;;;;;;;;;-1:-1:-1;14275:125:0;-1:-1:-1;;;;;14275:125:0;;:::i;34904:145::-;;;:::i;39367:36::-;;;:::i;:::-;;;;-1:-1:-1;;;;;39367:36:0;;;;;;;;;;;;;;;;;;;;;41642:152;;;:::i;43126:80::-;;;:::i;34272:85::-;;;:::i;13246:93::-;;;:::i;17167:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17167:266:0;;;;;;;;:::i;39460:25::-;;;:::i;14603:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14603:172:0;;;;;;;;:::i;40899:138::-;;;:::i;42174:546::-;;;;;;;;;;;;;;;;-1:-1:-1;42174:546:0;;:::i;42881:145::-;;;:::i;14833:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14833:149:0;;;;;;;;;;:::i;41893:85::-;;;:::i;45417:250::-;;;;;;;;;;;;;;;;-1:-1:-1;45417:250:0;-1:-1:-1;;;;;45417:250:0;;:::i;39572:38::-;;;:::i;44760:514::-;;;:::i;35198:240::-;;;;;;;;;;;;;;;;-1:-1:-1;35198:240:0;-1:-1:-1;;;;;35198:240:0;;:::i;13044:89::-;13121:5;13114:12;;;;;;;;-1:-1:-1;;13114:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13089:13;;13114:12;;13121:5;;13114:12;;13121:5;13114:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13044:89;:::o;15120:166::-;15203:4;15219:39;15228:12;:10;:12::i;:::-;15242:7;15251:6;15219:8;:39::i;:::-;-1:-1:-1;15275:4:0;15120:166;;;;;:::o;14111:106::-;14198:12;;14111:106;:::o;40537:92::-;40606:8;;:15;;;-1:-1:-1;;;40606:15:0;;;;40574:6;;-1:-1:-1;;;;;40606:8:0;;:13;;:15;;;;;;;;;;;;;;:8;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40606:15:0;;-1:-1:-1;40537:92:0;:::o;15753:317::-;15859:4;15875:36;15885:6;15893:9;15904:6;15875:9;:36::i;:::-;15921:121;15930:6;15938:12;:10;:12::i;:::-;15952:89;15990:6;15952:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15952:19:0;;;;;;:11;:19;;;;;;15972:12;:10;:12::i;:::-;-1:-1:-1;;;;;15952:33:0;;;;;;;;;;;;-1:-1:-1;15952:33:0;;;:89;:37;:89::i;:::-;15921:8;:121::i;:::-;-1:-1:-1;16059:4:0;15753:317;;;;;;:::o;43437:542::-;43489:9;43501:43;43530:13;:11;:13::i;:::-;43502:22;43516:7;43502:9;:7;:9::i;:::-;:13;;:22::i;:::-;43501:28;;:43::i;:::-;43489:55;;43554:26;43560:10;43572:7;43554:5;:26::i;:::-;43591:6;43600;:4;:6::i;:::-;-1:-1:-1;;;;;43600:16:0;;43625:4;43600:31;;;;;;;;;;;;;-1:-1:-1;;;;;43600:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43600:31:0;;-1:-1:-1;43645:5:0;;;43641:287;;;43666:14;43683:8;:1;43689;43683:5;:8::i;:::-;43705;;:28;;;-1:-1:-1;;;43705:28:0;;;;;;;;;;43666:25;;-1:-1:-1;;;;;;43705:8:0;;;;:17;;:28;;;;;:8;;:28;;;;;;;;:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43747:11;43761:6;:4;:6::i;:::-;-1:-1:-1;;;;;43761:16:0;;43786:4;43761:31;;;;;;;;;;;;;-1:-1:-1;;;;;43761:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43761:31:0;;-1:-1:-1;43806:10:0;43819:13;43761:31;43830:1;43819:10;:13::i;:::-;43806:26;;43858:9;43850:5;:17;43846:72;;;43891:12;:1;43897:5;43891;:12::i;:::-;43887:16;;43846:72;43641:287;;;;43938:34;43958:10;43970:1;43938:6;:4;:6::i;:::-;-1:-1:-1;;;;;43938:19:0;;:34;:19;:34::i;:::-;43437:542;;;:::o;13962:89::-;14035:9;;;;13962:89;:::o;16465:215::-;16553:4;16569:83;16578:12;:10;:12::i;:::-;16592:7;16601:50;16640:10;16601:11;:25;16613:12;:10;:12::i;:::-;-1:-1:-1;;;;;16601:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16601:25:0;;;:34;;;;;;;;;;;:38;:50::i;41320:106::-;41362:7;41388:6;:4;:6::i;:::-;-1:-1:-1;;;;;41388:16:0;;41413:4;41388:31;;;;;;;;;;;;;-1:-1:-1;;;;;41388:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;44146:370;34495:12;:10;:12::i;:::-;-1:-1:-1;;;;;34484:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;34484:23:0;;34476:68;;;;;-1:-1:-1;;;34476:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;34476:68:0;;;;;;;;;;;;;;;44255:15:::1;-1:-1:-1::0;;;;;44245:32:0::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;44245:34:0;-1:-1:-1;;;;;44228:51:0::1;44236:4;44228:51;44220:97;;;;-1:-1:-1::0;;;44220:97:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44344:115;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;44344:115:0;::::1;::::0;;;44432:15:::1;44344:115;::::0;;::::1;::::0;;;44327:14:::1;:132:::0;;-1:-1:-1;;;;;;44327:132:0::1;::::0;::::1;::::0;;;;44475:34;;;;;;;::::1;::::0;;;;;;;;::::1;44146:370:::0;:::o;14275:125::-;-1:-1:-1;;;;;14375:18:0;14349:7;14375:18;;;;;;;;;;;;14275:125::o;34904:145::-;34495:12;:10;:12::i;:::-;-1:-1:-1;;;;;34484:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;34484:23:0;;34476:68;;;;;-1:-1:-1;;;34476:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;34476:68:0;;;;;;;;;;;;;;;34994:6:::1;::::0;34973:40:::1;::::0;35010:1:::1;::::0;34994:6:::1;::::0;::::1;-1:-1:-1::0;;;;;34994:6:0::1;::::0;34973:40:::1;::::0;35010:1;;34973:40:::1;35023:6;:19:::0;;-1:-1:-1;;;;;;35023:19:0::1;::::0;;34904:145::o;39367:36::-;;;;;-1:-1:-1;;;;;39367:36:0;;;;;:::o;41642:152::-;41695:7;41721:13;:11;:13::i;:::-;:18;:66;;41749:38;41773:13;:11;:13::i;:::-;41749:19;41763:4;41749:9;:7;:9::i;:38::-;41721:66;;;41742:4;41721:66;41714:73;;41642:152;:::o;43126:80::-;43168:31;43177:21;43187:10;43177:9;:21::i;:::-;43168:8;:31::i;:::-;43126:80::o;34272:85::-;34344:6;;;;;-1:-1:-1;;;;;34344:6:0;;34272:85::o;13246:93::-;13325:7;13318:14;;;;;;;;-1:-1:-1;;13318:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13293:13;;13318:14;;13325:7;;13318:14;;13325:7;13318:14;;;;;;;;;;;;;;;;;;;;;;;;17167:266;17260:4;17276:129;17285:12;:10;:12::i;:::-;17299:7;17308:96;17347:15;17308:96;;;;;;;;;;;;;;;;;:11;:25;17320:12;:10;:12::i;:::-;-1:-1:-1;;;;;17308:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;17308:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;39460:25::-;;;-1:-1:-1;;;;;39460:25:0;;:::o;14603:172::-;14689:4;14705:42;14715:12;:10;:12::i;:::-;14729:9;14740:6;14705:9;:42::i;40899:138::-;40939:4;40962:68;41008:8;;;;;;;;;-1:-1:-1;;;;;41008:8:0;-1:-1:-1;;;;;40998:29:0;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40998:31:0;40962:6;:4;:6::i;:::-;-1:-1:-1;;;;;40962:16:0;;40987:4;40962:31;;;;;;;;;;;;;-1:-1:-1;;;;;40962:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40962:31:0;;:35;:68::i;42174:546::-;37166:1;37755:7;;:19;;37747:63;;;;;-1:-1:-1;;;37747:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;37166:1;37885:7;:18;42235:8:::1;::::0;:24:::1;::::0;;-1:-1:-1;;;42235:24:0;;;;-1:-1:-1;;;;;42235:8:0;;::::1;::::0;:22:::1;::::0;:24:::1;::::0;;::::1;::::0;:8:::1;::::0;:24;;;;;;;;:8;;:24;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;42270:13;42286:9;:7;:9::i;:::-;42270:25;;42305:59;42329:10;42349:4;42356:7;42305:6;:4;:6::i;:::-;-1:-1:-1::0;;;;;42305:23:0::1;::::0;:59;;:23:::1;:59::i;:::-;42374:6;:4;:6::i;:::-;42390:14;42407:9;:7;:9::i;:::-;42390:26:::0;-1:-1:-1;42436:17:0::1;42390:26:::0;42447:5;42436:10:::1;:17::i;:::-;42426:27;;42507:14;42539:13;:11;:13::i;:::-;42535:144;;-1:-1:-1::0;42582:7:0;42535:144:::1;;;42629:39;42662:5;42630:26;42642:13;:11;:13::i;:::-;42630:7:::0;;:11:::1;:26::i;42629:39::-;42620:48;;42535:144;42688:25;42694:10;42706:6;42688:5;:25::i;:::-;-1:-1:-1::0;;37123:1:0;38058:7;:22;-1:-1:-1;;42174:546:0:o;42881:145::-;42914:9;42926:11;:9;:11::i;:::-;42975:8;;42914:23;;-1:-1:-1;42947:44:0;;-1:-1:-1;;;;;42975:8:0;42914:23;42947:6;:4;:6::i;:44::-;43001:8;;;;;;;;;-1:-1:-1;;;;;43001:8:0;-1:-1:-1;;;;;43001:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42881:145;:::o;14833:149::-;-1:-1:-1;;;;;14948:18:0;;;14922:7;14948:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14833:149::o;41893:85::-;41934:37;41942:6;:4;:6::i;:::-;-1:-1:-1;;;;;41942:16:0;;41959:10;41942:28;;;;;;;;;;;;;-1:-1:-1;;;;;41942:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41942:28:0;41934:7;:37::i;45417:250::-;34495:12;:10;:12::i;:::-;-1:-1:-1;;;;;34484:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;34484:23:0;;34476:68;;;;;-1:-1:-1;;;34476:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;34476:68:0;;;;;;;;;;;;;;;45518:6:::1;:4;:6::i;:::-;-1:-1:-1::0;;;;;45500:25:0::1;:6;-1:-1:-1::0;;;;;45500:25:0::1;;;45492:44;;;::::0;;-1:-1:-1;;;45492:44:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;45492:44:0;;;;;;;;;;;;;::::1;;45547:14;45571:6;-1:-1:-1::0;;;;;45564:24:0::1;;45597:4;45564:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;45564:39:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;45564:39:0;;-1:-1:-1;45613:47:0::1;-1:-1:-1::0;;;;;45613:27:0;::::1;45641:10;45564:39:::0;45613:27:::1;:47::i;:::-;34554:1;45417:250:::0;:::o;39572:38::-;;;:::o;44760:514::-;34495:12;:10;:12::i;:::-;-1:-1:-1;;;;;34484:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;34484:23:0;;34476:68;;;;;-1:-1:-1;;;34476:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;34476:68:0;;;;;;;;;;;;;;;44819:14:::1;:29:::0;-1:-1:-1;;;;;44819:29:0::1;44811:77;;;::::0;;-1:-1:-1;;;44811:77:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;44811:77:0;;;;;;;;;;;;;::::1;;44906:27:::0;;44955:15:::1;::::0;44906:46:::1;::::0;44938:13:::1;44906:31;:46::i;:::-;:64;44898:97;;;::::0;;-1:-1:-1;;;44898:97:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;44898:97:0;;;;;;;;;;;;;::::1;;45024:14;:29:::0;45011:43:::1;::::0;;-1:-1:-1;;;;;45024:29:0;;::::1;45011:43:::0;;;::::1;::::0;;;;::::1;::::0;;::::1;45065:8;;;;;;;;;-1:-1:-1::0;;;;;45065:8:0::1;-1:-1:-1::0;;;;;45065:20:0::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;45118:14:0::1;:29:::0;;45097:8:::1;:51:::0;;-1:-1:-1;;;;;;45097:51:0;;::::1;-1:-1:-1::0;;;;;45118:29:0;::::1;45097:51;::::0;;;45158:42:::1;::::0;;-1:-1:-1;;45240:10:0::1;45210:27:::0;:40;45261:6:::1;:4;:6::i;35198:240::-:0;34495:12;:10;:12::i;:::-;-1:-1:-1;;;;;34484:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;34484:23:0;;34476:68;;;;;-1:-1:-1;;;34476:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;34476:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;35286:22:0;::::1;35278:73;;;;-1:-1:-1::0;;;35278:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35387:6;::::0;35366:38:::1;::::0;-1:-1:-1;;;;;35366:38:0;;::::1;::::0;35387:6:::1;::::0;::::1;;::::0;35366:38:::1;::::0;;;::::1;35414:6;:17:::0;;-1:-1:-1;;;;;35414:17:0;;::::1;;;-1:-1:-1::0;;;;;;35414:17:0;;::::1;::::0;;;::::1;::::0;;35198:240::o;598:104::-;685:10;598:104;:::o;20231:340::-;-1:-1:-1;;;;;20332:19:0;;20324:68;;;;-1:-1:-1;;;20324:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20410:21:0;;20402:68;;;;-1:-1:-1;;;20402:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20481:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;20532:32;;;;;;;;;;;;;;;;;20231:340;;;:::o;17907:530::-;-1:-1:-1;;;;;18012:20:0;;18004:70;;;;-1:-1:-1;;;18004:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18092:23:0;;18084:71;;;;-1:-1:-1;;;18084:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18166:47;18187:6;18195:9;18206:6;18166:20;:47::i;:::-;18244:71;18266:6;18244:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18244:17:0;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;18224:17:0;;;:9;:17;;;;;;;;;;;:91;;;;18348:20;;;;;;;:32;;18373:6;18348:24;:32::i;:::-;-1:-1:-1;;;;;18325:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;18395:35;;;;;;;18325:20;;18395:35;;;;;;;;;;;;;17907:530;;;:::o;9140:163::-;9226:7;9261:12;9253:6;;;;9245:29;;;;-1:-1:-1;;;9245:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9291:5:0;;;9140:163::o;7246:215::-;7304:7;7327:6;7323:20;;-1:-1:-1;7342:1:0;7335:8;;7323:20;7365:5;;;7369:1;7365;:5;:1;7388:5;;;;;:10;7380:56;;;;-1:-1:-1;;;7380:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7925:150;7983:7;8014:1;8010;:5;8002:44;;;;;-1:-1:-1;;;8002:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8067:1;8063;:5;;;;;;;7925:150;-1:-1:-1;;;7925:150:0:o;19398:410::-;-1:-1:-1;;;;;19481:21:0;;19473:67;;;;-1:-1:-1;;;19473:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19551:49;19572:7;19589:1;19593:6;19551:20;:49::i;:::-;19632:68;19655:6;19632:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19632:18:0;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;19611:18:0;;:9;:18;;;;;;;;;;:89;19725:12;;:24;;19742:6;19725:16;:24::i;:::-;19710:12;:39;19764:37;;;;;;;;19790:1;;-1:-1:-1;;;;;19764:37:0;;;;;;;;;;;;19398:410;;:::o;6844:155::-;6902:7;6934:1;6929;:6;;6921:49;;;;;-1:-1:-1;;;6921:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6987:5:0;;;6844:155::o;6398:175::-;6456:7;6487:5;;;6510:6;;;;6502:46;;;;;-1:-1:-1;;;6502:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;30171:175;30280:58;;;-1:-1:-1;;;;;30280:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30280:58:0;-1:-1:-1;;;30280:58:0;;;30253:86;;30273:5;;30253:19;:86::i;30352:203::-;30479:68;;;-1:-1:-1;;;;;30479:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30479:68:0;-1:-1:-1;;;30479:68:0;;;30452:96;;30472:5;;30452:19;:96::i;:::-;30352:203;;;;:::o;18708:370::-;-1:-1:-1;;;;;18791:21:0;;18783:65;;;;;-1:-1:-1;;;18783:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;18859:49;18888:1;18892:7;18901:6;18859:20;:49::i;:::-;18934:12;;:24;;18951:6;18934:16;:24::i;:::-;18919:12;:39;-1:-1:-1;;;;;18989:18:0;;:9;:18;;;;;;;;;;;:30;;19012:6;18989:22;:30::i;:::-;-1:-1:-1;;;;;18968:18:0;;:9;:18;;;;;;;;;;;:51;;;;19034:37;;;;;;;18968:18;;:9;;19034:37;;;;;;;;;;18708:370;;:::o;32434:751::-;32853:23;32879:69;32907:4;32879:69;;;;;;;;;;;;;;;;;32887:5;-1:-1:-1;;;;;32879:27:0;;;:69;;;;;:::i;:::-;32962:17;;32853:95;;-1:-1:-1;32962:21:0;32958:221;;33102:10;33091:30;;;;;;;;;;;;;;;-1:-1:-1;33091:30:0;33083:85;;;;-1:-1:-1;;;33083:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25282:193;25385:12;25416:52;25438:6;25446:4;25452:1;25455:12;25416:21;:52::i;:::-;25409:59;25282:193;-1:-1:-1;;;;25282:193:0:o;26309:523::-;26436:12;26493:5;26468:21;:30;;26460:81;;;;-1:-1:-1;;;26460:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26559:18;26570:6;26559:10;:18::i;:::-;26551:60;;;;;-1:-1:-1;;;26551:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;26682:12;26696:23;26723:6;-1:-1:-1;;;;;26723:11:0;26743:5;26751:4;26723:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26723:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26681:75;;;;26773:52;26791:7;26800:10;26812:12;26773:17;:52::i;:::-;26766:59;26309:523;-1:-1:-1;;;;;;;26309:523:0:o;22427:413::-;22787:20;22825:8;;;22427:413::o;28792:725::-;28907:12;28935:7;28931:580;;;-1:-1:-1;28965:10:0;28958:17;;28931:580;29076:17;;:21;29072:429;;29334:10;29328:17;29394:15;29381:10;29377:2;29373:19;29366:44;29283:145;29466:20;;-1:-1:-1;;;29466:20:0;;;;;;;;;;;;;;;;;29473:12;;29466:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1701200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1339",
								"approvalDelay()": "infinite",
								"approve(address,uint256)": "infinite",
								"available()": "infinite",
								"balance()": "infinite",
								"balanceOf(address)": "1190",
								"decimals()": "1125",
								"decreaseAllowance(address,uint256)": "infinite",
								"deposit(uint256)": "infinite",
								"depositAll()": "infinite",
								"earn()": "infinite",
								"getPricePerFullShare()": "infinite",
								"inCaseTokensGetStuck(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1116",
								"proposeStrat(address)": "infinite",
								"renounceOwnership()": "infinite",
								"stratCandidate()": "1962",
								"strategy()": "1104",
								"symbol()": "infinite",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeStrat()": "infinite",
								"want()": "infinite",
								"withdraw(uint256)": "infinite",
								"withdrawAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40263,
									"end": 40531,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40425,
									"end": 40430,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 40425,
									"end": 40430,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40440,
									"end": 40447,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 40440,
									"end": 40447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12913,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12908,
									"end": 12913,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12908,
									"end": 12921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12938,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12931,
									"end": 12938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12931,
									"end": 12948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12958,
									"end": 12967,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12970,
									"end": 12972,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12958,
									"end": 12972,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12958,
									"end": 12967,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34091,
									"end": 34103,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 34091,
									"end": 34101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 34091,
									"end": 34103,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34091,
									"end": 34103,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 34091,
									"end": 34103,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34119,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 34146,
									"end": 34189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34146,
									"end": 34189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 34113,
									"end": 34131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 34146,
									"end": 34189,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 34146,
									"end": 34189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 34146,
									"end": 34189,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 37123,
									"end": 37124,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37238,
									"end": 37245,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 37238,
									"end": 37260,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40472,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 40464,
									"end": 40484,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 40494,
									"end": 40524,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 40494,
									"end": 40524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1691"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39098,
									"end": 45669,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220014d554ec4dc8c2f22e4c045b2952b7a1c529e25db739cd1d3a9a0216d6d98b664736f6c634300060c0033",
									".code": [
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "DEF68A9C"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "DEF68A9C"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "E2D1E75C"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "E6685244"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "D389800F"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "DE5F6268"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "A8C62E76"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "76DFABB8"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "77C7B8FC"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "48A0D754"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "5B12FF9B"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "1F1FCD51"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "1F1FCD51"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39098,
											"end": 45669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13089,
											"end": 13102,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13089,
											"end": 13102,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13044,
											"end": 13133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15203,
											"end": 15207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15228,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15228,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15251,
											"end": 15257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15219,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15275,
											"end": 15279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14210,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14198,
											"end": 14210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14217,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40614,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40606,
											"end": 40614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F1FCD51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40574,
											"end": 40580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40574,
											"end": 40580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40606,
											"end": 40614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40619,
											"name": "PUSH",
											"source": 0,
											"value": "1F1FCD51"
										},
										{
											"begin": 40606,
											"end": 40619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40606,
											"end": 40621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15885,
											"end": 15891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15893,
											"end": 15902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 15930,
											"end": 15936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15938,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15938,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15990,
											"end": 15996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15972,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15952,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15921,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 15921,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43489,
											"end": 43498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43501,
											"end": 43544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 43530,
											"end": 43543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43530,
											"end": 43541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 43530,
											"end": 43543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43530,
											"end": 43543,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43530,
											"end": 43543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43502,
											"end": 43524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 43516,
											"end": 43523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43502,
											"end": 43511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 43502,
											"end": 43509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43502,
											"end": 43511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43502,
											"end": 43511,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 43502,
											"end": 43511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43502,
											"end": 43515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43502,
											"end": 43515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 43502,
											"end": 43524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43502,
											"end": 43524,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 43502,
											"end": 43524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43501,
											"end": 43529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43501,
											"end": 43529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 43501,
											"end": 43544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43501,
											"end": 43544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 43501,
											"end": 43544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43489,
											"end": 43544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43489,
											"end": 43544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43554,
											"end": 43580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 43560,
											"end": 43570,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43572,
											"end": 43579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43554,
											"end": 43559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 43554,
											"end": 43580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43554,
											"end": 43580,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 43554,
											"end": 43580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43600,
											"end": 43606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 43600,
											"end": 43604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43600,
											"end": 43606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43600,
											"end": 43606,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 43600,
											"end": 43606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43600,
											"end": 43616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43616,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 43625,
											"end": 43629,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43600,
											"end": 43631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43645,
											"end": 43650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43645,
											"end": 43650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43645,
											"end": 43650,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43666,
											"end": 43680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43683,
											"end": 43691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 43683,
											"end": 43684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43689,
											"end": 43690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43683,
											"end": 43688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 43683,
											"end": 43691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43683,
											"end": 43691,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 43683,
											"end": 43691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43666,
											"end": 43691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43666,
											"end": 43691,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43722,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 43705,
											"end": 43722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43713,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43747,
											"end": 43758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43761,
											"end": 43767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 43761,
											"end": 43765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43761,
											"end": 43767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43761,
											"end": 43767,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 43761,
											"end": 43767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43761,
											"end": 43777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43777,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 43786,
											"end": 43790,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43806,
											"end": 43816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43819,
											"end": 43832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 43761,
											"end": 43792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43830,
											"end": 43831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43819,
											"end": 43829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 43819,
											"end": 43832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43819,
											"end": 43832,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 43819,
											"end": 43832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43806,
											"end": 43832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43806,
											"end": 43832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43858,
											"end": 43867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43850,
											"end": 43855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43850,
											"end": 43867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43846,
											"end": 43918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43846,
											"end": 43918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 43846,
											"end": 43918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43891,
											"end": 43903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 43891,
											"end": 43892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43891,
											"end": 43896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 43891,
											"end": 43903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43891,
											"end": 43903,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 43891,
											"end": 43903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43887,
											"end": 43903,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43887,
											"end": 43903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43846,
											"end": 43918,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 43846,
											"end": 43918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 43641,
											"end": 43928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43938,
											"end": 43972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 43958,
											"end": 43968,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43970,
											"end": 43971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43938,
											"end": 43944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 43938,
											"end": 43942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 43938,
											"end": 43944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43938,
											"end": 43944,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 43938,
											"end": 43944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43938,
											"end": 43957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43938,
											"end": 43957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43938,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43938,
											"end": 43957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 43938,
											"end": 43972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43938,
											"end": 43972,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 43938,
											"end": 43972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43437,
											"end": 43979,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14035,
											"end": 14044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 14051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16465,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16578,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16599,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16640,
											"end": 16650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16613,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16613,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16601,
											"end": 16651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41320,
											"end": 41426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41362,
											"end": 41369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41388,
											"end": 41394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 41388,
											"end": 41392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41388,
											"end": 41394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41388,
											"end": 41394,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 41388,
											"end": 41394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41388,
											"end": 41404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41404,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 41413,
											"end": 41417,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34495,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34484,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44255,
											"end": 44270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44245,
											"end": 44277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44277,
											"name": "PUSH",
											"source": 0,
											"value": "FBFA77CF"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44245,
											"end": 44279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44228,
											"end": 44279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44236,
											"end": 44240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 44228,
											"end": 44279,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH data",
											"source": 0,
											"value": "6D06D9F1CF1CB47B4C164A82A99136BB279D51ECAC86EA5FD348BE592F7BFE2E"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44220,
											"end": 44317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44447,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44344,
											"end": 44459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44341,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44327,
											"end": 44459,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "PUSH",
											"source": 0,
											"value": "1AAE2EC5647DB56DA2D513DE40528BA3565C6057525637050660C4323BBAC7DF"
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44475,
											"end": 44509,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44146,
											"end": 44516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34495,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34484,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34973,
											"end": 35013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35010,
											"end": 35011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35010,
											"end": 35011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34994,
											"end": 35000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35013,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 34973,
											"end": 35013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35010,
											"end": 35011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35010,
											"end": 35011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34973,
											"end": 35013,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35023,
											"end": 35029,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35023,
											"end": 35042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35023,
											"end": 35042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35023,
											"end": 35042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35023,
											"end": 35042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35023,
											"end": 35042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 35049,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39403,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41695,
											"end": 41702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41721,
											"end": 41734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41721,
											"end": 41732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41721,
											"end": 41734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41721,
											"end": 41734,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41721,
											"end": 41734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41721,
											"end": 41739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41773,
											"end": 41786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 41773,
											"end": 41784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41773,
											"end": 41786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41773,
											"end": 41786,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 41773,
											"end": 41786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 41763,
											"end": 41767,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 41749,
											"end": 41758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 41749,
											"end": 41756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 41749,
											"end": 41758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41749,
											"end": 41787,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41749,
											"end": 41787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41746,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 41721,
											"end": 41787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41714,
											"end": 41787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41714,
											"end": 41787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41642,
											"end": 41794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43168,
											"end": 43199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 43177,
											"end": 43198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 43187,
											"end": 43197,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43177,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 43177,
											"end": 43198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43177,
											"end": 43198,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 43177,
											"end": 43198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43168,
											"end": 43176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 43168,
											"end": 43199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43168,
											"end": 43199,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 43168,
											"end": 43199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43126,
											"end": 43206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34344,
											"end": 34350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34272,
											"end": 34357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13246,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13293,
											"end": 13306,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13293,
											"end": 13306,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17167,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17260,
											"end": 17264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17285,
											"end": 17295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17285,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17347,
											"end": 17362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17320,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17320,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17308,
											"end": 17404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39485,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14603,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14705,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14715,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14729,
											"end": 14738,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14705,
											"end": 14747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 40899,
											"end": 41037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40962,
											"end": 41030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41008,
											"end": 41016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40998,
											"end": 41027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41027,
											"name": "PUSH",
											"source": 0,
											"value": "722713F7"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40998,
											"end": 41029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 40962,
											"end": 40966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40962,
											"end": 40968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40962,
											"end": 40968,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 40962,
											"end": 40968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40962,
											"end": 40978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40978,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 40987,
											"end": 40991,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 40997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 40962,
											"end": 41030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37166,
											"end": 37167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37755,
											"end": 37762,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37755,
											"end": 37762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37755,
											"end": 37774,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37755,
											"end": 37774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 37747,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37166,
											"end": 37167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37885,
											"end": 37892,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37885,
											"end": 37903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B9FF785"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42257,
											"name": "PUSH",
											"source": 0,
											"value": "573FEF0A"
										},
										{
											"begin": 42235,
											"end": 42257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42243,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42235,
											"end": 42259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42270,
											"end": 42283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42286,
											"end": 42295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 42286,
											"end": 42293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 42286,
											"end": 42295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42286,
											"end": 42295,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 42286,
											"end": 42295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42270,
											"end": 42295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42270,
											"end": 42295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42329,
											"end": 42339,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42349,
											"end": 42353,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42356,
											"end": 42363,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 42305,
											"end": 42309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42305,
											"end": 42311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42305,
											"end": 42311,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 42305,
											"end": 42311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42305,
											"end": 42328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42305,
											"end": 42328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42305,
											"end": 42364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 42374,
											"end": 42378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42374,
											"end": 42380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42374,
											"end": 42380,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 42374,
											"end": 42380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42390,
											"end": 42404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42407,
											"end": 42416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 42407,
											"end": 42414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 42407,
											"end": 42416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42407,
											"end": 42416,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 42407,
											"end": 42416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42390,
											"end": 42416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42436,
											"end": 42453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 42390,
											"end": 42416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42447,
											"end": 42452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42436,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 42436,
											"end": 42453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42436,
											"end": 42453,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 42436,
											"end": 42453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42426,
											"end": 42453,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42426,
											"end": 42453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42507,
											"end": 42521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42539,
											"end": 42552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 42539,
											"end": 42550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 42539,
											"end": 42552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42539,
											"end": 42552,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 42539,
											"end": 42552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42582,
											"end": 42589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42629,
											"end": 42668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 42662,
											"end": 42667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42630,
											"end": 42656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 42642,
											"end": 42655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 42642,
											"end": 42653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 42642,
											"end": 42655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42642,
											"end": 42655,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 42642,
											"end": 42655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42630,
											"end": 42637,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42630,
											"end": 42637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42630,
											"end": 42641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 42630,
											"end": 42656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42629,
											"end": 42668,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 42629,
											"end": 42668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42620,
											"end": 42668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42620,
											"end": 42668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 42535,
											"end": 42679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 42694,
											"end": 42704,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42706,
											"end": 42712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 42688,
											"end": 42713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42688,
											"end": 42713,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 42688,
											"end": 42713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37123,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38058,
											"end": 38065,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38058,
											"end": 38080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42174,
											"end": 42720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42926,
											"end": 42937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42926,
											"end": 42935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 42926,
											"end": 42937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42926,
											"end": 42937,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42926,
											"end": 42937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42975,
											"end": 42983,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42975,
											"end": 42983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 42947,
											"end": 42991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42975,
											"end": 42983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42947,
											"end": 42951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42947,
											"end": 42953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42947,
											"end": 42991,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 42947,
											"end": 42991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43001,
											"end": 43009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43001,
											"end": 43017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43017,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43001,
											"end": 43019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42881,
											"end": 43026,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14833,
											"end": 14982,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 41893,
											"end": 41978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41934,
											"end": 41971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 41942,
											"end": 41948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 41942,
											"end": 41946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41942,
											"end": 41948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41942,
											"end": 41948,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 41942,
											"end": 41948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41942,
											"end": 41958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41958,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 41959,
											"end": 41969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41942,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41934,
											"end": 41941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 41934,
											"end": 41971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34495,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34484,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 45518,
											"end": 45522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 45518,
											"end": 45524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45518,
											"end": 45524,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 45518,
											"end": 45524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45500,
											"end": 45525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45500,
											"end": 45506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45500,
											"end": 45525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45500,
											"end": 45525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45500,
											"end": 45525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10BA37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 45492,
											"end": 45536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45571,
											"end": 45577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45564,
											"end": 45588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45588,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 45597,
											"end": 45601,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45613,
											"end": 45660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45613,
											"end": 45640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45641,
											"end": 45651,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45564,
											"end": 45603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 45613,
											"end": 45660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45613,
											"end": 45660,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 45613,
											"end": 45660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34554,
											"end": 34555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45417,
											"end": 45667,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1691"
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44760,
											"end": 45274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34495,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34484,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44819,
											"end": 44833,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44819,
											"end": 44848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44819,
											"end": 44848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5468657265206973206E6F2063616E646964617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 44811,
											"end": 44888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44906,
											"end": 44933,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44906,
											"end": 44933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44955,
											"end": 44970,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 44955,
											"end": 44970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44906,
											"end": 44952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 44906,
											"end": 44952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44938,
											"end": 44951,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1691"
										},
										{
											"begin": 44906,
											"end": 44937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 44906,
											"end": 44952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44906,
											"end": 44952,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 44906,
											"end": 44952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44906,
											"end": 44970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11195B185E481A185CC81B9BDD081C185CDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44898,
											"end": 44995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45024,
											"end": 45038,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45024,
											"end": 45053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45024,
											"end": 45053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45024,
											"end": 45053,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45024,
											"end": 45053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "7F37D440E85ABA7FBF641C4BDA5CA4EF669A80BFFAACDE2AA8D9FEB1B048C82C"
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45011,
											"end": 45054,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45065,
											"end": 45073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45065,
											"end": 45085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45085,
											"name": "PUSH",
											"source": 0,
											"value": "FB617787"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45065,
											"end": 45087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45118,
											"end": 45132,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45118,
											"end": 45147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45118,
											"end": 45147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45105,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45118,
											"end": 45147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45118,
											"end": 45147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45097,
											"end": 45148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45158,
											"end": 45200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45158,
											"end": 45200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45158,
											"end": 45200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45240,
											"end": 45250,
											"name": "PUSH",
											"source": 0,
											"value": "12A05F200"
										},
										{
											"begin": 45210,
											"end": 45237,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 45210,
											"end": 45250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45261,
											"end": 45267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 45261,
											"end": 45265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45261,
											"end": 45267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 34495,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 34495,
											"end": 34507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 34484,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 34484,
											"end": 34491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34484,
											"end": 34507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34476,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35286,
											"end": 35308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 35278,
											"end": 35351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35404,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35420,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35414,
											"end": 35431,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35198,
											"end": 35438,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20324,
											"end": 20392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20410,
											"end": 20431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20410,
											"end": 20431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20402,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20564,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18012,
											"end": 18032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18004,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18092,
											"end": 18115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18092,
											"end": 18115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 18084,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 18187,
											"end": 18193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18195,
											"end": 18204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18206,
											"end": 18212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 18166,
											"end": 18213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 18266,
											"end": 18272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 18244,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18315,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18373,
											"end": 18379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18348,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 18348,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18325,
											"end": 18345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18395,
											"end": 18430,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 18437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9245,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7246,
											"end": 7461,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7246,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7342,
											"end": 7343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7335,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7335,
											"end": 7343,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 7323,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 8075,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7925,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8015,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 8075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7925,
											"end": 8075,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19398,
											"end": 19808,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 19398,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19481,
											"end": 19502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19481,
											"end": 19502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH data",
											"source": 0,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19551,
											"end": 19600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 19572,
											"end": 19579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19589,
											"end": 19590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19593,
											"end": 19599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19551,
											"end": 19571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19551,
											"end": 19600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19551,
											"end": 19600,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 19551,
											"end": 19600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 19655,
											"end": 19661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH data",
											"source": 0,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 19632,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19629,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19611,
											"end": 19700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19737,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19725,
											"end": 19737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 19725,
											"end": 19749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 19725,
											"end": 19749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19725,
											"end": 19749,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 19725,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19710,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19710,
											"end": 19749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19801,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6844,
											"end": 6999,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6844,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6902,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 6921,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 6992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 6992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 6992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6999,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6398,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30171,
											"end": 30346,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30171,
											"end": 30346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30280,
											"end": 30338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30253,
											"end": 30339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30253,
											"end": 30272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30253,
											"end": 30339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30479,
											"end": 30547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30452,
											"end": 30548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30472,
											"end": 30477,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30472,
											"end": 30477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30452,
											"end": 30471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30452,
											"end": 30548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30452,
											"end": 30548,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30452,
											"end": 30548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18708,
											"end": 19078,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 18708,
											"end": 19078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18791,
											"end": 18812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18791,
											"end": 18812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 18783,
											"end": 18848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18859,
											"end": 18908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 18888,
											"end": 18889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18892,
											"end": 18899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18901,
											"end": 18907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18859,
											"end": 18879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 18859,
											"end": 18908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18859,
											"end": 18908,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 18859,
											"end": 18908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18934,
											"end": 18946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 18934,
											"end": 18958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 18957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18934,
											"end": 18958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18934,
											"end": 18958,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 18934,
											"end": 18958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18919,
											"end": 18931,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18919,
											"end": 18958,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 18998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18989,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 19019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 19019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 19019,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18968,
											"end": 18977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19034,
											"end": 19071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 19078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 19078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 19078,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32434,
											"end": 33185,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 32434,
											"end": 33185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32876,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 32907,
											"end": 32911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32879,
											"end": 32906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 32879,
											"end": 32906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 32879,
											"end": 32948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32962,
											"end": 32979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32962,
											"end": 32979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32962,
											"end": 32983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32958,
											"end": 33179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 32958,
											"end": 33179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33091,
											"end": 33121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33083,
											"end": 33168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25282,
											"end": 25475,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 25282,
											"end": 25475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25385,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25416,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 25438,
											"end": 25444,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25446,
											"end": 25450,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25455,
											"end": 25467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 25416,
											"end": 25468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25416,
											"end": 25468,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 25416,
											"end": 25468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25409,
											"end": 25468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25282,
											"end": 25475,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25282,
											"end": 25475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26309,
											"end": 26832,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 26309,
											"end": 26832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26436,
											"end": 26448,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26493,
											"end": 26498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26468,
											"end": 26489,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 26468,
											"end": 26498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26468,
											"end": 26498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH data",
											"source": 0,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 26460,
											"end": 26541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26559,
											"end": 26577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 26570,
											"end": 26576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26559,
											"end": 26569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 26559,
											"end": 26577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26559,
											"end": 26577,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 26559,
											"end": 26577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 26551,
											"end": 26611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26682,
											"end": 26694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26696,
											"end": 26719,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26723,
											"end": 26729,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26723,
											"end": 26734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26743,
											"end": 26748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26751,
											"end": 26755,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26681,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26681,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26681,
											"end": 26756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26681,
											"end": 26756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 26791,
											"end": 26798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26800,
											"end": 26810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26824,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26773,
											"end": 26790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 26773,
											"end": 26825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26773,
											"end": 26825,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 26773,
											"end": 26825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26825,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 26309,
											"end": 26832,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26309,
											"end": 26832,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22427,
											"end": 22840,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 22427,
											"end": 22840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 22807,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22825,
											"end": 22833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22825,
											"end": 22833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22825,
											"end": 22833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22427,
											"end": 22840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28792,
											"end": 29517,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 28792,
											"end": 29517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28907,
											"end": 28919,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28935,
											"end": 28942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 29511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 29511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 28931,
											"end": 29511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28965,
											"end": 28975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28958,
											"end": 28975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 29511,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 28931,
											"end": 29511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29072,
											"end": 29501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 29072,
											"end": 29501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29334,
											"end": 29344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29328,
											"end": 29345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29377,
											"end": 29379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29373,
											"end": 29392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29283,
											"end": 29428,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 29283,
											"end": 29428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29473,
											"end": 29485,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29473,
											"end": 29485,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 29466,
											"end": 29486,
											"name": "JUMP",
											"source": 0
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"6D06D9F1CF1CB47B4C164A82A99136BB279D51ECAC86EA5FD348BE592F7BFE2E": "50726f706f73616c206e6f742076616c696420666f722074686973205661756c74",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approvalDelay()": "e2d1e75c",
							"approve(address,uint256)": "095ea7b3",
							"available()": "48a0d754",
							"balance()": "b69ef8a8",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deposit(uint256)": "b6b55f25",
							"depositAll()": "de5f6268",
							"earn()": "d389800f",
							"getPricePerFullShare()": "77c7b8fc",
							"inCaseTokensGetStuck(address)": "def68a9c",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proposeStrat(address)": "5b12ff9b",
							"renounceOwnership()": "715018a6",
							"stratCandidate()": "76dfabb8",
							"strategy()": "a8c62e76",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"upgradeStrat()": "e6685244",
							"want()": "1f1fcd51",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_approvalDelay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewStratCandidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"UpgradeStrat\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"proposeStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stratCandidate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"want\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of a vault to deposit funds for yield optimizing. This is the contract that receives funds and that users interface with. The yield optimizing strategy itself is implemented in a separate 'Strategy.sol' contract.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"available()\":{\"details\":\"Custom logic in here for how much the vault allows to be borrowed. We return 100% of tokens for now. Under certain conditions we might want to keep some of the system funds at hand in the vault, instead of putting them to work.\"},\"balance()\":{\"details\":\"It calculates the total underlying value of {token} held by the system. It takes into account the vault contract balance, the strategy contract balance  and the balance deployed in other contracts as part of the strategy.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the value of {token} to the token that the vault will hold as underlying value. It initializes the vault's own 'moo' token. This token is minted when someone does a deposit. It is burned in order to withdraw the corresponding portion of the underlying assets.\",\"params\":{\"_approvalDelay\":\"the delay before a new strat can be approved.\",\"_name\":\"the name of the vault token.\",\"_strategy\":\"the address of the strategy.\",\"_symbol\":\"the symbol of the vault token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"details\":\"The entrypoint of funds into the system. People deposit with this function into the vault. The vault is then in charge of sending funds into the strategy.\"},\"depositAll()\":{\"details\":\"A helper function to call deposit() with all the sender's funds.\"},\"earn()\":{\"details\":\"Function to send funds into the strategy and put them to work. It's primarily called by the vault's deposit() function.\"},\"getPricePerFullShare()\":{\"details\":\"Function for various UIs to display the current value of one of our yield tokens. Returns an uint256 with 18 decimals of how much underlying asset one vault share represents.\"},\"inCaseTokensGetStuck(address)\":{\"details\":\"Rescues random funds stuck that the strat can't handle.\",\"params\":{\"_token\":\"address of the token to rescue.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeStrat(address)\":{\"details\":\"Sets the candidate for the new strat to use with this vault.\",\"params\":{\"_implementation\":\"The address of the candidate strategy.  \"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeStrat()\":{\"details\":\"It switches the active strat for the strat candidate. After upgrading, the  candidate implementation is set to the 0x00 address, and proposedTime to a time  happening in +100 years for safety. \"},\"withdraw(uint256)\":{\"details\":\"Function to exit the system. The vault will withdraw the required tokens from the strategy and pay up the token holder. A proportional number of IOU tokens are burned in the process.\"},\"withdrawAll()\":{\"details\":\"A helper function to call withdraw() with all the sender's funds.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"EvolleVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 466,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 472,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 474,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 476,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 478,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 480,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1462,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1574,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1687,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "stratCandidate",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(StratCandidate)1685_storage"
							},
							{
								"astId": 1689,
								"contract": "Vault/EvolleVault.sol:EvolleVault",
								"label": "strategy",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IStrategy)1666"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IStrategy)1666": {
								"encoding": "inplace",
								"label": "contract IStrategy",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(StratCandidate)1685_storage": {
								"encoding": "inplace",
								"label": "struct EvolleVault.StratCandidate",
								"members": [
									{
										"astId": 1682,
										"contract": "Vault/EvolleVault.sol:EvolleVault",
										"label": "implementation",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1684,
										"contract": "Vault/EvolleVault.sol:EvolleVault",
										"label": "proposedTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStrategy": {
					"abi": [
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfWant",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "beforeDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "panic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retireStrat",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unirouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "want",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf()": "722713f7",
							"balanceOfPool()": "11588086",
							"balanceOfWant()": "c1a3d44c",
							"beforeDeposit()": "573fef0a",
							"deposit()": "d0e30db0",
							"harvest()": "4641257d",
							"panic()": "4700d305",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"retireStrat()": "fb617787",
							"unirouter()": "257ae0de",
							"unpause()": "3f4ba83a",
							"vault()": "fbfa77cf",
							"want()": "1f1fcd51",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfWant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retireStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unirouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"want\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"IStrategy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1462,
								"contract": "Vault/EvolleVault.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1574,
								"contract": "Vault/EvolleVault.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault/EvolleVault.sol\":30083:33187  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault/EvolleVault.sol\":30083:33187  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c825e7733b8a473325f99254551849f3916bab9f2b3e7b4b7ba37038a12aed7564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c825e7733b8a473325f99254551849f3916bab9f2b3e7b4b7ba37038a12aed7564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x25 0xE7 PUSH20 0x3B8A473325F99254551849F3916BAB9F2B3E7B4B PUSH28 0xA37038A12AED7564736F6C634300060C003300000000000000000000 ",
							"sourceMap": "30083:3104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c825e7733b8a473325f99254551849f3916bab9f2b3e7b4b7ba37038a12aed7564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x25 0xE7 PUSH20 0x3B8A473325F99254551849F3916BAB9F2B3E7B4B PUSH28 0xA37038A12AED7564736F6C634300060C003300000000000000000000 ",
							"sourceMap": "30083:3104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30083,
									"end": 33187,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c825e7733b8a473325f99254551849f3916bab9f2b3e7b4b7ba37038a12aed7564736f6c634300060c0033",
									".code": [
										{
											"begin": 30083,
											"end": 33187,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30083,
											"end": 33187,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault/EvolleVault.sol\":4338:10932  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault/EvolleVault.sol\":4338:10932  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051ca2b2051330fa8d68686b8d3f7e0128d2ff589b9615d24fb4cf9919f0e468c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051ca2b2051330fa8d68686b8d3f7e0128d2ff589b9615d24fb4cf9919f0e468c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xCA 0x2B KECCAK256 MLOAD CALLER 0xF 0xA8 0xD6 DUP7 DUP7 0xB8 0xD3 0xF7 0xE0 SLT DUP14 0x2F CREATE2 DUP10 0xB9 PUSH2 0x5D24 0xFB 0x4C 0xF9 SWAP2 SWAP16 0xE CHAINID DUP13 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4338:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051ca2b2051330fa8d68686b8d3f7e0128d2ff589b9615d24fb4cf9919f0e468c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xCA 0x2B KECCAK256 MLOAD CALLER 0xF 0xA8 0xD6 DUP7 DUP7 0xB8 0xD3 0xF7 0xE0 SLT DUP14 0x2F CREATE2 DUP10 0xB9 PUSH2 0x5D24 0xFB 0x4C 0xF9 SWAP2 SWAP16 0xE CHAINID DUP13 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4338:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4338,
									"end": 10932,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051ca2b2051330fa8d68686b8d3f7e0128d2ff589b9615d24fb4cf9919f0e468c64736f6c634300060c0033",
									".code": [
										{
											"begin": 4338,
											"end": 10932,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 10932,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault/EvolleVault.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault/EvolleVault.sol\":{\"keccak256\":\"0xd4d7fc699d73e7403fdcb1e2b5b7c32b2b2a4de90cbdd20080dfdea9a764f8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa185fdf3fdf49c883720e9dbc056a7099c05dcdc130761dc850e47e5afeb869\",\"dweb:/ipfs/QmTxdc5atPHdcoMp6Zrxe2uQuCtFPwBqWbfxb9GDmgEsv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Vault/EvolleVault.sol": {
				"ast": {
					"absolutePath": "Vault/EvolleVault.sol",
					"exportedSymbols": {
						"Address": [
							1247
						],
						"Context": [
							22
						],
						"ERC20": [
							952
						],
						"EvolleVault": [
							2163
						],
						"IERC20": [
							99
						],
						"IStrategy": [
							1666
						],
						"Ownable": [
							1564
						],
						"ReentrancyGuard": [
							1603
						],
						"SafeERC20": [
							1456
						],
						"SafeMath": [
							453
						]
					},
					"id": 2164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "668:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "678:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:0"
									},
									"scope": 22,
									"src": "598:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "773:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "783:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "916:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "759:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:0"
									},
									"scope": 22,
									"src": "708:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2164,
							"src": "566:374:0"
						},
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1008:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "1041:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1135:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 30,
												"src": "1252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1251:9:0"
									},
									"scope": 99,
									"src": "1206:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1267:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "1363:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1362:17:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "1403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:9:0"
									},
									"scope": 99,
									"src": "1344:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1418:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "1650:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "1669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1649:35:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "1703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1702:6:0"
									},
									"scope": 99,
									"src": "1632:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1715:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2003:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2018:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2002:32:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2057:9:0"
									},
									"scope": 99,
									"src": "1984:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2073:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "2737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "2754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2736:33:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "2788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2787:6:0"
									},
									"scope": 99,
									"src": "2720:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2800:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3139:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3122:51:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3192:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3191:6:0"
									},
									"scope": 99,
									"src": "3101:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3204:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 89,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3382:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3404:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3381:57:0"
									},
									"src": "3367:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3445:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 98,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "3613:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "3636:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "3661:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3612:63:0"
									},
									"src": "3598:78:0"
								}
							],
							"scope": 2164,
							"src": "1112:2566:0"
						},
						{
							"id": 100,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3741:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 101,
								"nodeType": "StructuredDocumentation",
								"src": "3774:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "4573:98:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 131,
														"src": "4583:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "4595:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "4599:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "4614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "4618:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4614:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 126,
												"nodeType": "IfStatement",
												"src": "4610:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4629:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4636:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4628:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 125,
													"nodeType": "Return",
													"src": "4621:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4656:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 128,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4662:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 129,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4655:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 130,
												"nodeType": "Return",
												"src": "4648:16:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4361:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "4513:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "4524:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "4558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "4564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:15:0"
									},
									"scope": 453,
									"src": "4497:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4893:75:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4907:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "4911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 151,
												"nodeType": "IfStatement",
												"src": "4903:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4922:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4929:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 149,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4921:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 143,
													"id": 150,
													"nodeType": "Return",
													"src": "4914:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4949:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 153,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "4955:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 154,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "4959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 156,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4948:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 143,
												"id": 157,
												"nodeType": "Return",
												"src": "4941:20:0"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4677:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4878:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:15:0"
									},
									"scope": 453,
									"src": "4817:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "5192:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5429:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 178,
												"nodeType": "IfStatement",
												"src": "5420:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5440:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5446:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 176,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5439:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 170,
													"id": 177,
													"nodeType": "Return",
													"src": "5432:16:0"
												}
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 199,
														"src": "5458:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "5474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5458:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 185,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5489:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5493:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5489:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "5498:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5489:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 194,
												"nodeType": "IfStatement",
												"src": "5485:33:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5509:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5516:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 192,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5508:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 170,
													"id": 193,
													"nodeType": "Return",
													"src": "5501:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5536:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5542:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 197,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5535:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 170,
												"id": 198,
												"nodeType": "Return",
												"src": "5528:16:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4974:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "5132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "5143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5131:22:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "5177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "5183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5176:15:0"
									},
									"scope": 453,
									"src": "5116:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "5776:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 212,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5795:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 219,
												"nodeType": "IfStatement",
												"src": "5786:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5806:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5813:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5805:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 211,
													"id": 218,
													"nodeType": "Return",
													"src": "5798:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5833:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5839:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "5843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 224,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5832:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 211,
												"id": 225,
												"nodeType": "Return",
												"src": "5825:20:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5557:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5716:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5715:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5761:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5760:15:0"
									},
									"scope": 453,
									"src": "5700:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "6087:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "6101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6106:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 246,
												"nodeType": "IfStatement",
												"src": "6097:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6117:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6116:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 238,
													"id": 245,
													"nodeType": "Return",
													"src": "6109:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6144:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "6150:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "6154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 251,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6143:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 238,
												"id": 252,
												"nodeType": "Return",
												"src": "6136:20:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "5858:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6038:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6026:22:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6072:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6072:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6078:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6071:15:0"
									},
									"scope": 453,
									"src": "6011:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "6465:108:0",
										"statements": [
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 279,
														"src": "6475:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "6487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6475:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 271,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "6510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 272,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "6515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6518:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6502:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "6502:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 277,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "6565:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 278,
												"nodeType": "Return",
												"src": "6558:8:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "6169:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6411:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6422:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6410:22:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6455:9:0"
									},
									"scope": 453,
									"src": "6398:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "6911:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 291,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "6929:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 292,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "6934:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6929:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6937:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6921:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "6921:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "6991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6987:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 300,
												"nodeType": "Return",
												"src": "6980:12:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6579:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "6857:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "6868:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6856:22:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "6902:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6901:9:0"
									},
									"scope": 453,
									"src": "6844:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "7313:148:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "7327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7332:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7327:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 317,
												"nodeType": "IfStatement",
												"src": "7323:20:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7342:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 311,
													"id": 316,
													"nodeType": "Return",
													"src": "7335:8:0"
												}
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 335,
														"src": "7353:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "7365:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "7369:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7365:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7353:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 325,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "7388:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "7392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7388:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 328,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "7397:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7388:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7400:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7380:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "7380:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "7453:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 334,
												"nodeType": "Return",
												"src": "7446:8:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "7005:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7259:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7270:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7258:22:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7304:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7303:9:0"
									},
									"scope": 453,
									"src": "7246:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "7992:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "8010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8014:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8017:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8002:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "8002:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 353,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "8063:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 354,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "8067:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 356,
												"nodeType": "Return",
												"src": "8056:12:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "7467:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "7938:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "7949:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7937:22:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "7983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7982:9:0"
									},
									"scope": 453,
									"src": "7925:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "8595:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 369,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "8613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8617:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8613:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8620:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8605:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "8605:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 375,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "8664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 376,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8664:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 378,
												"nodeType": "Return",
												"src": "8657:12:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "8081:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 380,
												"src": "8541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 380,
												"src": "8552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8540:22:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 380,
												"src": "8586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8585:9:0"
									},
									"scope": 453,
									"src": "8528:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "9235:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 393,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "9253:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 394,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "9258:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9253:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "9261:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9245:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "9245:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 399,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "9291:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 400,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "9295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 402,
												"nodeType": "Return",
												"src": "9284:12:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "8682:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "9153:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "9164:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "9175:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9175:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9152:50:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "9226:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9225:9:0"
									},
									"scope": 453,
									"src": "9140:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "10055:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 417,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "10073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10077:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10073:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 420,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10065:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "10065:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 423,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "10110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 424,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "10114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10110:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 415,
												"id": 426,
												"nodeType": "Return",
												"src": "10103:12:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "9309:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9995:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9972:50:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "10046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10045:9:0"
									},
									"scope": 453,
									"src": "9960:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "10863:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "10881:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10885:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 444,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10888:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10873:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "10873:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "10918:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "10922:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 450,
												"nodeType": "Return",
												"src": "10911:12:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "10128:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "10781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "10792:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "10803:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10780:50:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "10854:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10853:9:0"
									},
									"scope": 453,
									"src": "10768:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2164,
							"src": "4338:6594:0"
						},
						{
							"id": 454,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "10999:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 456,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "12215:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 457,
									"nodeType": "InheritanceSpecifier",
									"src": "12215:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 458,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 99,
										"src": "12224:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "12224:6:0"
								}
							],
							"contractDependencies": [
								22,
								99
							],
							"contractKind": "contract",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "11034:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								99,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 462,
									"libraryName": {
										"contractScope": null,
										"id": 460,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "12243:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$453",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "12237:27:0",
									"typeName": {
										"id": 461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12256:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 466,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12270:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 465,
										"keyType": {
											"id": 463,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12279:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12270:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12290:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12323:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 471,
										"keyType": {
											"id": 467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12323:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 470,
											"keyType": {
												"id": 468,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12352:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12343:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12363:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 474,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12399:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 473,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 476,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12434:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 475,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12434:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 478,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12460:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 477,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12460:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 952,
									"src": "12488:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 479,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "12488:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "12898:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 488,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "12908:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 489,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "12916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12908:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "12908:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 492,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "12931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 493,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "12941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12931:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "12931:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 496,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "12958:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12970:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "12958:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "12958:14:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "12518:311:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "12847:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "12868:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12868:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12846:44:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12898:0:0"
									},
									"scope": 952,
									"src": "12834:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "13104:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 507,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 476,
													"src": "13121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 506,
												"id": 508,
												"nodeType": "Return",
												"src": "13114:12:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "12985:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13057:2:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 510,
												"src": "13089:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13088:15:0"
									},
									"scope": 952,
									"src": "13044:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "13308:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 516,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "13325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 515,
												"id": 517,
												"nodeType": "Return",
												"src": "13318:14:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "13139:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13261:2:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 519,
												"src": "13293:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13292:15:0"
									},
									"scope": 952,
									"src": "13246:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "14018:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 525,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "14035:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 524,
												"id": 526,
												"nodeType": "Return",
												"src": "14028:16:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "13345:612:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13979:2:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "14011:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 522,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14010:7:0"
									},
									"scope": 952,
									"src": "13962:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "14181:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 535,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "14198:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 534,
												"id": 536,
												"nodeType": "Return",
												"src": "14191:19:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "14057:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 531,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14154:8:0"
									},
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14131:2:0"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 538,
												"src": "14172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14171:9:0"
									},
									"scope": 952,
									"src": "14111:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "14358:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 547,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "14375:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 549,
													"indexExpression": {
														"argumentTypes": null,
														"id": 548,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14375:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 546,
												"id": 550,
												"nodeType": "Return",
												"src": "14368:25:0"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "14223:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 543,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14331:8:0"
									},
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "14294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14293:17:0"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "14349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14348:9:0"
									},
									"scope": 952,
									"src": "14275:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "14695:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 564,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "14715:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14715:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 566,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "14729:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "14740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "14705:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14705:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "14705:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14764:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 562,
												"id": 571,
												"nodeType": "Return",
												"src": "14757:11:0"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "14406:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 559,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14671:8:0"
									},
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "14621:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "14640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14620:35:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "14689:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14689:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14688:6:0"
									},
									"scope": 952,
									"src": "14603:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "14931:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 584,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "14948:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 586,
														"indexExpression": {
															"argumentTypes": null,
															"id": 585,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14960:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14948:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 588,
													"indexExpression": {
														"argumentTypes": null,
														"id": 587,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "14967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14948:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 583,
												"id": 589,
												"nodeType": "Return",
												"src": "14941:34:0"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "14781:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14904:8:0"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "14852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "14867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14851:32:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "14922:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14921:9:0"
									},
									"scope": 952,
									"src": "14833:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "15209:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 603,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "15228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15228:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 605,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "15242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "15251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "15219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15219:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "15219:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15275:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 601,
												"id": 610,
												"nodeType": "Return",
												"src": "15268:11:0"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "14988:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 598,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15185:8:0"
									},
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "15137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "15154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15136:33:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "15203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15202:6:0"
									},
									"scope": 952,
									"src": "15120:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "15865:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 626,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "15885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 627,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "15893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "15904:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 625,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "15875:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15875:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "15875:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "15930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 633,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "15938:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15938:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 642,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "15990:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15998:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 635,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "15952:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 637,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 636,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "15964:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15952:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 640,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 638,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "15972:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15972:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15952:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "15952:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15952:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "15921:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15921:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "15921:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16059:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 624,
												"id": 648,
												"nodeType": "Return",
												"src": "16052:11:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "15292:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 621,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15841:8:0"
									},
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "15775:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "15791:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "15810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15774:51:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "15859:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15858:6:0"
									},
									"scope": 952,
									"src": "15753:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "16559:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "16578:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16578:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "16592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 671,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "16640:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 664,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "16601:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 667,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 665,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "16613:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16613:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16601:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 669,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 668,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "16627:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16601:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 280,
																"src": "16601:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16601:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "16569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16569:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "16569:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16669:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 659,
												"id": 676,
												"nodeType": "Return",
												"src": "16662:11:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "16076:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "16492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "16509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16491:37:0"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "16553:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16552:6:0"
									},
									"scope": 952,
									"src": "16465:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "17266:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 689,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "17285:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17285:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 691,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "17299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "17347:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17364:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "17308:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 695,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 693,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "17320:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17320:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17308:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 696,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "17334:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17308:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "17308:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17308:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "17276:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17276:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "17276:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17422:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 687,
												"id": 705,
												"nodeType": "Return",
												"src": "17415:11:0"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "16686:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "17194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "17211:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17193:42:0"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "17260:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17259:6:0"
									},
									"scope": 952,
									"src": "17167:266:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "17994:443:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 718,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "18012:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18030:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18022:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18022:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18012:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18034:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18004:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "18004:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 728,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "18092:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18113:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18105:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18105:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18105:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18092:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18117:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18084:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "18084:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "18187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "18195:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "18206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "18166:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18166:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "18166:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "18224:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 745,
														"indexExpression": {
															"argumentTypes": null,
															"id": 744,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "18234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18224:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 750,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "18266:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18274:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "18244:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 748,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 747,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "18254:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18244:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "18244:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18244:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18224:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "18224:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 755,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "18325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 757,
														"indexExpression": {
															"argumentTypes": null,
															"id": 756,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "18335:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18325:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 762,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "18373:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 758,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "18348:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 760,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 759,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "18358:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18348:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "18348:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18348:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18325:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "18325:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 767,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "18404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 768,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "18412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "18423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "18395:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18395:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "EmitStatement",
												"src": "18390:40:0"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "17439:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "17926:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "17942:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "17961:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17925:51:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17994:0:0"
									},
									"scope": 952,
									"src": "17907:530:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "18773:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 782,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "18791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18810:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18802:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18802:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18802:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18791:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18814:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18783:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "18783:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18888:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18880:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "18892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "18901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 791,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "18859:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18859:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "18859:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 800,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "18919:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 803,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "18951:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 801,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "18934:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "18934:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18934:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18919:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "18919:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 807,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "18968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 809,
														"indexExpression": {
															"argumentTypes": null,
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "18978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18968:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "19012:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 810,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "18989:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 811,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "18999:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18989:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "18989:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18989:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18968:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "18968:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19051:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19043:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19043:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19043:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "19055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "19034:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19034:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "EmitStatement",
												"src": "19029:42:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "18443:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "18723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "18740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18722:33:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18773:0:0"
									},
									"scope": 952,
									"src": "18708:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "19463:345:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "19481:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19500:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19492:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19492:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19481:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19504:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19473:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "19473:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "19572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19589:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19581:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19581:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "19593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "19551:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19551:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "19551:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 855,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "19611:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 857,
														"indexExpression": {
															"argumentTypes": null,
															"id": 856,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "19621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19611:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 862,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19655:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19663:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 858,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "19632:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 859,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "19642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19632:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "19632:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19632:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19611:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "19611:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 867,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "19710:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 870,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19742:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 868,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "19725:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "19725:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19725:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19710:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "19710:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 875,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "19773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19790:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19782:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19782:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19782:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "19794:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "19764:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19764:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "19759:42:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "19084:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "19413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "19430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19412:33:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19463:0:0"
									},
									"scope": 952,
									"src": "19398:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "20314:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 895,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "20332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20349:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 896,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20341:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20341:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20353:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20324:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "20324:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 905,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "20410:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20429:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 906,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20421:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20410:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20433:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20402:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "20402:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 914,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "20481:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 917,
															"indexExpression": {
																"argumentTypes": null,
																"id": 915,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "20493:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20481:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 918,
														"indexExpression": {
															"argumentTypes": null,
															"id": 916,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "20500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20481:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 919,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "20511:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20481:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "20481:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 923,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "20541:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 924,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "20548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 925,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "20557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "20532:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20532:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "20527:37:0"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "19814:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "20249:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "20264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "20281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20248:48:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20314:0:0"
									},
									"scope": 952,
									"src": "20231:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "20952:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 935,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "20962:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 936,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "20974:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "20962:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "20962:21:0"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "20577:312:0",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 940,
												"src": "20918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 931,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20917:17:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20952:0:0"
									},
									"scope": 952,
									"src": "20894:96:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "21666:3:0",
										"statements": []
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "20996:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "21607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "21621:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "21633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21606:42:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21666:0:0"
									},
									"scope": 952,
									"src": "21577:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2164,
							"src": "12197:9474:0"
						},
						{
							"id": 953,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21734:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 954,
								"nodeType": "StructuredDocumentation",
								"src": "21767:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "22493:347:0",
										"statements": [
											{
												"assignments": [
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 970,
														"src": "22690:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "22690:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22777:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22779:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "22799:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "22787:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22787:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "22779:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "22799:7:0",
														"valueSize": 1
													},
													{
														"declaration": 963,
														"isOffset": false,
														"isSlot": false,
														"src": "22779:4:0",
														"valueSize": 1
													}
												],
												"id": 965,
												"nodeType": "InlineAssembly",
												"src": "22768:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 966,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "22825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22832:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22825:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 961,
												"id": 969,
												"nodeType": "Return",
												"src": "22818:15:0"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "21857:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 971,
												"src": "22447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22446:17:0"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 971,
												"src": "22487:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22486:6:0"
									},
									"scope": 1247,
									"src": "22427:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "23828:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 982,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "23854:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		],
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23846:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 980,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "23846:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23846:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "23846:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 985,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "23871:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23846:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23879:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23838:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23838:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "23838:73:0"
											},
											{
												"assignments": [
													991,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1004,
														"src": "24000:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 990,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "24000:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 998,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24050:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 992,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "24018:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "24018:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 994,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "24041:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "24018:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24018:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23999:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1000,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "24071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24080:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "24063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24063:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "24063:78:0"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "22846:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "23776:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23776:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "23803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23775:43:0"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23828:0:0"
									},
									"scope": 1247,
									"src": "23757:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "24978:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "25006:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "25014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25020:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1015,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1022,
															1042
														],
														"referencedDeclaration": 1042,
														"src": "24993:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24993:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1020,
												"nodeType": "Return",
												"src": "24986:67:0"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "24154:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1022,
												"src": "24911:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1022,
												"src": "24927:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24910:35:0"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1022,
												"src": "24964:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24963:14:0"
									},
									"scope": 1247,
									"src": "24889:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25399:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1035,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "25438:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1036,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25452:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1038,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "25455:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1034,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1062,
															1112
														],
														"referencedDeclaration": 1112,
														"src": "25416:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25416:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1040,
												"nodeType": "Return",
												"src": "25409:59:0"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "25066:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "25304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "25320:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "25339:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25339:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25303:63:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "25385:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25385:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25384:14:0"
									},
									"scope": 1247,
									"src": "25282:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "25950:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1055,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "25989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "25997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1057,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "26003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26010:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1054,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1062,
															1112
														],
														"referencedDeclaration": 1112,
														"src": "25967:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25967:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1060,
												"nodeType": "Return",
												"src": "25960:94:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "25481:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25868:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25884:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25903:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25867:50:0"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25936:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25936:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25935:14:0"
									},
									"scope": 1247,
									"src": "25837:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "26450:382:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1079,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "26476:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26468:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1077,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26468:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26468:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "26468:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1082,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "26493:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26468:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26500:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26460:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "26460:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1089,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "26570:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1088,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "26559:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26559:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26579:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26551:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "26551:60:0"
											},
											{
												"assignments": [
													1095,
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1111,
														"src": "26682:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1094,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "26682:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1111,
														"src": "26696:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1096,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "26751:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1098,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "26723:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "26723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1100,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "26743:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "26723:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26723:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26681:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1106,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "26791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1107,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "26800:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1108,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "26812:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1105,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "26773:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26773:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1110,
												"nodeType": "Return",
												"src": "26766:59:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "26067:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "26340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "26356:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "26375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "26390:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26339:78:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "26436:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26435:14:0"
									},
									"scope": 1247,
									"src": "26309:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "27109:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1123,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "27145:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "27153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27159:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1122,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1129,
															1164
														],
														"referencedDeclaration": 1164,
														"src": "27126:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27126:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1127,
												"nodeType": "Return",
												"src": "27119:80:0"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "26838:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1129,
												"src": "27037:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1129,
												"src": "27053:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27053:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27036:35:0"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1129,
												"src": "27095:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27094:14:0"
									},
									"scope": 1247,
									"src": "27009:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "27518:288:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "27547:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1142,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "27536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27536:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27556:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27528:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "27528:67:0"
											},
											{
												"assignments": [
													1149,
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1163,
														"src": "27666:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "27666:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1163,
														"src": "27680:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27680:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1154,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "27725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "27707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "27707:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27707:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27665:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1158,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "27765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1159,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "27774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1160,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "27786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1157,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "27747:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27747:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1162,
												"nodeType": "Return",
												"src": "27740:59:0"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "27212:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "27418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "27434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "27453:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27417:63:0"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1164,
												"src": "27504:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27503:14:0"
									},
									"scope": 1247,
									"src": "27390:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "28082:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1175,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "28120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "28128:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28134:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1174,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1181,
															1216
														],
														"referencedDeclaration": 1216,
														"src": "28099:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28099:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1179,
												"nodeType": "Return",
												"src": "28092:84:0"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "27812:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "28015:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "28031:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28031:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28014:35:0"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "28068:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28067:14:0"
									},
									"scope": 1247,
									"src": "27985:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "28494:292:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "28523:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1194,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "28512:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28512:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28532:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28504:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "28504:69:0"
											},
											{
												"assignments": [
													1201,
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1215,
														"src": "28644:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1200,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "28644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1215,
														"src": "28658:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1202,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "28658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1206,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "28705:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1204,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "28685:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "28685:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28685:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28643:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1210,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "28745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1211,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "28754:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1212,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "28766:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1209,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "28727:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28727:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1214,
												"nodeType": "Return",
												"src": "28720:59:0"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "28189:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1216,
												"src": "28399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1216,
												"src": "28415:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28415:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1216,
												"src": "28434:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28434:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28398:63:0"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1216,
												"src": "28480:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28480:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28479:14:0"
									},
									"scope": 1247,
									"src": "28369:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "28921:596:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1227,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "28935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "28992:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1231,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "29076:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "29076:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29096:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "29076:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1241,
																"nodeType": "Block",
																"src": "29448:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1238,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1222,
																					"src": "29473:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1237,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "29466:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29466:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1240,
																		"nodeType": "ExpressionStatement",
																		"src": "29466:20:0"
																	}
																]
															},
															"id": 1242,
															"nodeType": "IfStatement",
															"src": "29072:429:0",
															"trueBody": {
																"id": 1236,
																"nodeType": "Block",
																"src": "29099:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "29283:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "29305:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "29334:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "29328:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29328:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "29309:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "29377:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "29381:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "29373:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29373:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "29394:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "29366:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29366:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "29366:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1220,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "29334:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1220,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "29381:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1235,
																		"nodeType": "InlineAssembly",
																		"src": "29274:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "28931:580:0",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "28944:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1228,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "28965:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1226,
															"id": 1229,
															"nodeType": "Return",
															"src": "28958:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "28819:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "28833:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28833:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "28858:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28818:67:0"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "28907:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28906:14:0"
									},
									"scope": 1247,
									"src": "28792:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2164,
							"src": "21835:7684:0"
						},
						{
							"id": 1248,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29590:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "29625:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1456,
							"linearizedBaseContracts": [
								1456
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1252,
									"libraryName": {
										"contractScope": null,
										"id": 1250,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "30113:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$453",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30107:27:0",
									"typeName": {
										"id": 1251,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30126:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1255,
									"libraryName": {
										"contractScope": null,
										"id": 1253,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1247,
										"src": "30145:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1247",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30139:26:0",
									"typeName": {
										"id": 1254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30157:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "30243:103:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "30273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1268,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "30303:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$99",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 48,
																		"src": "30303:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "30303:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1271,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "30328:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "30332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "30280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "30280:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30280:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "30253:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30253:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "30253:86:0"
											}
										]
									},
									"documentation": null,
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "30193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1256,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "30193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "30207:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "30219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30192:41:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30243:0:0"
									},
									"scope": 1456,
									"src": "30171:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "30442:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1289,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "30472:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1292,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "30502:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$99",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 80,
																		"src": "30502:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "30502:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1295,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "30531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1296,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "30537:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1297,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "30541:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1290,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "30479:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "30479:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30479:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1288,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "30452:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30452:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "30452:96:0"
											}
										]
									},
									"documentation": null,
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "30378:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1278,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "30378:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "30392:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "30406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "30418:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30377:55:0"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30442:0:0"
									},
									"scope": 1456,
									"src": "30352:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "30891:537:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "31180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31189:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31180:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31179:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1321,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "31220:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1456",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1456",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1320,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "31212:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1319,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "31212:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1322,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31212:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1323,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "31227:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1317,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1305,
																					"src": "31196:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$99",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 58,
																				"src": "31196:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31196:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31239:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31196:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31195:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "31179:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31255:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "31171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31171:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "31171:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1333,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "31351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1336,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "31381:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$99",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 68,
																		"src": "31381:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "31381:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1339,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "31405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1340,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "31414:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31358:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31358:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31358:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1332,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "31331:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31331:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "31331:90:0"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "30561:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1345,
												"src": "30836:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1304,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "30836:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1345,
												"src": "30850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1345,
												"src": "30867:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30835:46:0"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30891:0:0"
									},
									"scope": 1456,
									"src": "30815:613:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "31520:197:0",
										"statements": [
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1380,
														"src": "31530:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "31597:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1360,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "31577:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1456",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1456",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31569:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1358,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31569:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31569:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1362,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "31584:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1356,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "31553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "31553:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31553:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 280,
														"src": "31553:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31553:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31530:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1369,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "31633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1372,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "31663:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$99",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 68,
																		"src": "31663:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "31663:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1375,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "31687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1376,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "31696:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1370,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31640:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31640:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31640:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1368,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "31613:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31613:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "31613:97:0"
											}
										]
									},
									"documentation": null,
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1381,
												"src": "31465:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1346,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "31465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1381,
												"src": "31479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1381,
												"src": "31496:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31464:46:0"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31520:0:0"
									},
									"scope": 1456,
									"src": "31434:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "31809:242:0",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1417,
														"src": "31819:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1401,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "31886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31893:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1396,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "31866:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1456",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1456",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1394,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31858:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31858:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1398,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "31873:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1392,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "31842:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "31842:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31842:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "31842:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31842:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31819:118:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "31967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "31997:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$99",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 68,
																		"src": "31997:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "31997:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "32021:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "32030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31974:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31974:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "31947:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31947:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "31947:97:0"
											}
										]
									},
									"documentation": null,
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1418,
												"src": "31754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1382,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "31754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1418,
												"src": "31768:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1418,
												"src": "31785:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31753:46:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31809:0:0"
									},
									"scope": 1456,
									"src": "31723:328:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "32504:681:0",
										"statements": [
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1454,
														"src": "32853:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "32853:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1436,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1433,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "32907:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32913:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "32887:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32879:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32879:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32879:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1042,
														"src": "32879:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32879:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32853:95:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "32962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "32962:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32982:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32962:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "32958:221:0",
												"trueBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "32985:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1444,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "33102:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33115:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1445,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "33115:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33114:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1442,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "33091:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "33091:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33091:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33123:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1441,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "33083:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33083:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "33083:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "32057:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1455,
												"src": "32463:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1420,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "32463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1455,
												"src": "32477:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32477:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32462:33:0"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32504:0:0"
									},
									"scope": 1456,
									"src": "32434:751:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2164,
							"src": "30083:3104:0"
						},
						{
							"id": 1457,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33251:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1459,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "33808:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 1460,
									"nodeType": "InheritanceSpecifier",
									"src": "33808:7:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1458,
								"nodeType": "StructuredDocumentation",
								"src": "33284:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1462,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1564,
									"src": "33822:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1461,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "33822:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1468,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1468,
												"src": "33878:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1468,
												"src": "33909:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33877:57:0"
									},
									"src": "33851:84:0"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "34061:135:0",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1489,
														"src": "34071:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1472,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34071:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1474,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "34091:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34091:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34071:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1477,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "34113:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1478,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "34122:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34113:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "34113:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34175:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34167:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34167:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34167:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1486,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "34179:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1481,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "34146:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34146:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "EmitStatement",
												"src": "34141:48:0"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "33941:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1490,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34049:2:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34061:0:0"
									},
									"scope": 1564,
									"src": "34037:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "34327:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1496,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1462,
													"src": "34344:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1497,
												"nodeType": "Return",
												"src": "34337:13:0"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "34202:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34286:2:0"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "34318:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34317:9:0"
									},
									"scope": 1564,
									"src": "34272:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "34466:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1503,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "34484:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34484:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1505,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "34495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34495:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "34484:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34509:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "34476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34476:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "34476:68:0"
											},
											{
												"id": 1511,
												"nodeType": "PlaceholderStatement",
												"src": "34554:1:0"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "34363:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1513,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34463:2:0"
									},
									"src": "34445:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "34958:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1520,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "34994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35010:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35002:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1519,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "34973:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34973:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "EmitStatement",
												"src": "34968:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1527,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "35023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35040:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "35032:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35032:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "35023:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "35023:19:0"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "34568:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1517,
											"modifierName": {
												"argumentTypes": null,
												"id": 1516,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1513,
												"src": "34948:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "34948:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34930:2:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34958:0:0"
									},
									"scope": 1564,
									"src": "34904:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "35268:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1544,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "35286:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35306:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35298:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35298:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35286:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35310:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35278:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "35278:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1554,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "35387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1555,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "35395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1553,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "35366:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35366:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "EmitStatement",
												"src": "35361:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1558,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "35414:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1559,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "35423:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35414:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "35414:17:0"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "35055:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1541,
											"modifierName": {
												"argumentTypes": null,
												"id": 1540,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1513,
												"src": "35258:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "35258:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "35225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35224:18:0"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35268:0:0"
									},
									"scope": 1564,
									"src": "35198:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2164,
							"src": "33779:1661:0"
						},
						{
							"id": 1565,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35511:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1566,
								"nodeType": "StructuredDocumentation",
								"src": "35544:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1603,
							"linearizedBaseContracts": [
								1603
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1569,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1603,
									"src": "37083:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1567,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37083:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1568,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "37123:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1572,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1603,
									"src": "37130:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37130:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1571,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "37166:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1574,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1603,
									"src": "37174:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1573,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37174:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "37228:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1577,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "37238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1578,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "37248:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37238:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "37238:22:0"
											}
										]
									},
									"documentation": null,
									"id": 1582,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37216:2:0"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37228:0:0"
									},
									"scope": 1603,
									"src": "37204:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "37666:421:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1586,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "37755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1587,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "37766:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37755:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37776:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "37747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37747:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "37747:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1592,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "37885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1593,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "37895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37885:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "37885:18:0"
											},
											{
												"id": 1596,
												"nodeType": "PlaceholderStatement",
												"src": "37914:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1597,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "38058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1598,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "38068:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38058:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "38058:22:0"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "37273:364:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1602,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37663:2:0"
									},
									"src": "37642:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2164,
							"src": "36295:1794:0"
						},
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38096:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1666,
							"linearizedBaseContracts": [
								1666
							],
							"name": "IStrategy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fbfa77cf",
									"id": 1609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38160:2:0"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "38186:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38185:9:0"
									},
									"scope": 1666,
									"src": "38146:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1f1fcd51",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "want",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38213:2:0"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "38239:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1611,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "38239:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38238:8:0"
									},
									"scope": 1666,
									"src": "38200:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "573fef0a",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeDeposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38274:2:0"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38285:0:0"
									},
									"scope": 1666,
									"src": "38252:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38307:2:0"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38318:0:0"
									},
									"scope": 1666,
									"src": "38291:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1625,
												"src": "38342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38341:9:0"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38359:0:0"
									},
									"scope": 1666,
									"src": "38324:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "722713f7",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38383:2:0"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "38409:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38408:9:0"
									},
									"scope": 1666,
									"src": "38365:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c1a3d44c",
									"id": 1635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfWant",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38445:2:0"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1635,
												"src": "38471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38470:9:0"
									},
									"scope": 1666,
									"src": "38423:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "11588086",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38507:2:0"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1640,
												"src": "38533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38532:9:0"
									},
									"scope": 1666,
									"src": "38485:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4641257d",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38563:2:0"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38574:0:0"
									},
									"scope": 1666,
									"src": "38547:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fb617787",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "retireStrat",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38600:2:0"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38611:0:0"
									},
									"scope": 1666,
									"src": "38580:32:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4700d305",
									"id": 1649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38631:2:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38642:0:0"
									},
									"scope": 1666,
									"src": "38617:26:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8456cb59",
									"id": 1652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38662:2:0"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38673:0:0"
									},
									"scope": 1666,
									"src": "38648:26:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3f4ba83a",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38695:2:0"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38706:0:0"
									},
									"scope": 1666,
									"src": "38679:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5c975abb",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38727:2:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1660,
												"src": "38753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38752:6:0"
									},
									"scope": 1666,
									"src": "38712:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "257ae0de",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unirouter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38782:2:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "38808:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38807:9:0"
									},
									"scope": 1666,
									"src": "38764:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2164,
							"src": "38120:699:0"
						},
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38824:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1669,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 952,
										"src": "39122:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$952",
											"typeString": "contract ERC20"
										}
									},
									"id": 1670,
									"nodeType": "InheritanceSpecifier",
									"src": "39122:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1671,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1564,
										"src": "39129:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1564",
											"typeString": "contract Ownable"
										}
									},
									"id": 1672,
									"nodeType": "InheritanceSpecifier",
									"src": "39129:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1673,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1603,
										"src": "39138:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1603",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1674,
									"nodeType": "InheritanceSpecifier",
									"src": "39138:15:0"
								}
							],
							"contractDependencies": [
								22,
								99,
								952,
								1564,
								1603
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1668,
								"nodeType": "StructuredDocumentation",
								"src": "38848:249:0",
								"text": " @dev Implementation of a vault to deposit funds for yield optimizing.\n This is the contract that receives funds and that users interface with.\n The yield optimizing strategy itself is implemented in a separate 'Strategy.sol' contract."
							},
							"fullyImplemented": true,
							"id": 2163,
							"linearizedBaseContracts": [
								2163,
								1603,
								1564,
								952,
								99,
								22
							],
							"name": "EvolleVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1677,
									"libraryName": {
										"contractScope": null,
										"id": 1675,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1456,
										"src": "39166:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1456",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "39160:27:0",
									"typeName": {
										"contractScope": null,
										"id": 1676,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 99,
										"src": "39180:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1680,
									"libraryName": {
										"contractScope": null,
										"id": 1678,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "39198:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$453",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "39192:27:0",
									"typeName": {
										"id": 1679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39211:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "EvolleVault.StratCandidate",
									"id": 1685,
									"members": [
										{
											"constant": false,
											"id": 1682,
											"mutability": "mutable",
											"name": "implementation",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1685,
											"src": "39257:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1681,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "39257:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1684,
											"mutability": "mutable",
											"name": "proposedTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1685,
											"src": "39289:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1683,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "39289:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "StratCandidate",
									"nodeType": "StructDefinition",
									"scope": 2163,
									"src": "39225:88:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76dfabb8",
									"id": 1687,
									"mutability": "mutable",
									"name": "stratCandidate",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2163,
									"src": "39367:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
										"typeString": "struct EvolleVault.StratCandidate"
									},
									"typeName": {
										"contractScope": null,
										"id": 1686,
										"name": "StratCandidate",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1685,
										"src": "39367:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StratCandidate_$1685_storage_ptr",
											"typeString": "struct EvolleVault.StratCandidate"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8c62e76",
									"id": 1689,
									"mutability": "mutable",
									"name": "strategy",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2163,
									"src": "39460:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IStrategy_$1666",
										"typeString": "contract IStrategy"
									},
									"typeName": {
										"contractScope": null,
										"id": 1688,
										"name": "IStrategy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1666,
										"src": "39460:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStrategy_$1666",
											"typeString": "contract IStrategy"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d1e75c",
									"id": 1691,
									"mutability": "immutable",
									"name": "approvalDelay",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2163,
									"src": "39572:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1690,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39572:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1695,
									"name": "NewStratCandidate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"indexed": false,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "39641:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39640:24:0"
									},
									"src": "39617:48:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1699,
									"name": "UpgradeStrat",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"indexed": false,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1699,
												"src": "39689:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39688:24:0"
									},
									"src": "39670:43:0"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "40454:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1715,
														"name": "strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "40464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStrategy_$1666",
															"typeString": "contract IStrategy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1716,
														"name": "_strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "40475:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStrategy_$1666",
															"typeString": "contract IStrategy"
														}
													},
													"src": "40464:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$1666",
														"typeString": "contract IStrategy"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "40464:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1719,
														"name": "approvalDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "40494:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1720,
														"name": "_approvalDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "40510:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40494:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "40494:30:0"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "39719:539:0",
										"text": " @dev Sets the value of {token} to the token that the vault will\n hold as underlying value. It initializes the vault's own 'moo' token.\n This token is minted when someone does a deposit. It is burned in order\n to withdraw the corresponding portion of the underlying assets.\n @param _strategy the address of the strategy.\n @param _name the name of the vault token.\n @param _symbol the symbol of the vault token.\n @param _approvalDelay the delay before a new strat can be approved."
									},
									"id": 1724,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1711,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1704,
													"src": "40425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 1712,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1706,
													"src": "40440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1713,
											"modifierName": {
												"argumentTypes": null,
												"id": 1710,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 952,
												"src": "40410:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$952_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "40410:43:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "_strategy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "40285:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$1666",
													"typeString": "contract IStrategy"
												},
												"typeName": {
													"contractScope": null,
													"id": 1701,
													"name": "IStrategy",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1666,
													"src": "40285:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$1666",
														"typeString": "contract IStrategy"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "40314:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40314:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "40343:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "_approvalDelay",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "40374:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40275:127:0"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40454:0:0"
									},
									"scope": 2163,
									"src": "40263:268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "40582:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 1730,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "40606:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStrategy_$1666",
																		"typeString": "contract IStrategy"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "want",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1614,
																"src": "40606:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view external returns (contract IERC20)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40606:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														],
														"id": 1729,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "40599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40599:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1734,
												"nodeType": "Return",
												"src": "40592:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1f1fcd51",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "want",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40550:2:0"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1736,
												"src": "40574:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$99",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1726,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 99,
													"src": "40574:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40573:8:0"
									},
									"scope": 2163,
									"src": "40537:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "40945:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1752,
																			"name": "strategy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1689,
																			"src": "41008:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IStrategy_$1666",
																				"typeString": "contract IStrategy"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IStrategy_$1666",
																				"typeString": "contract IStrategy"
																			}
																		],
																		"id": 1751,
																		"name": "IStrategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "40998:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IStrategy_$1666_$",
																			"typeString": "type(contract IStrategy)"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40998:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStrategy_$1666",
																		"typeString": "contract IStrategy"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1630,
																"src": "40998:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40998:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1747,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "40987:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EvolleVault_$2163",
																				"typeString": "contract EvolleVault"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EvolleVault_$2163",
																				"typeString": "contract EvolleVault"
																			}
																		],
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "40979:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1745,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "40979:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40979:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1742,
																		"name": "want",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "40962:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																			"typeString": "function () view returns (contract IERC20)"
																		}
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40962:6:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 38,
																"src": "40962:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40962:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 280,
														"src": "40962:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40962:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1741,
												"id": 1757,
												"nodeType": "Return",
												"src": "40955:75:0"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "40635:259:0",
										"text": " @dev It calculates the total underlying value of {token} held by the system.\n It takes into account the vault contract balance, the strategy contract balance\n  and the balance deployed in other contracts as part of the strategy."
									},
									"functionSelector": "b69ef8a8",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40915:2:0"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1759,
												"src": "40939:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "40939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40938:6:0"
									},
									"scope": 2163,
									"src": "40899:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "41371:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1770,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "41413:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																],
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41405:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41405:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1765,
																"name": "want",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "41388:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41388:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "41388:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41388:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1773,
												"nodeType": "Return",
												"src": "41381:38:0"
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "41043:272:0",
										"text": " @dev Custom logic in here for how much the vault allows to be borrowed.\n We return 100% of tokens for now. Under certain conditions we might\n want to keep some of the system funds at hand in the vault, instead\n of putting them to work."
									},
									"functionSelector": "48a0d754",
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41338:2:0"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1775,
												"src": "41362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41361:9:0"
									},
									"scope": 2163,
									"src": "41320:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "41704:90:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1781,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "41721:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41721:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41738:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41721:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1792,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "41773:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41773:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "31653138",
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41763:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1786,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "41749:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41749:9:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "41749:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41749:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "41749:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41749:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41721:66:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "31653138",
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41742:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1796,
												"nodeType": "Return",
												"src": "41714:73:0"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "41432:205:0",
										"text": " @dev Function for various UIs to display the current value of one of our yield tokens.\n Returns an uint256 with 18 decimals of how much underlying asset one vault share represents."
									},
									"functionSelector": "77c7b8fc",
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41671:2:0"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "41695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41694:9:0"
									},
									"scope": 2163,
									"src": "41642:152:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "41924:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1806,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "41959:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "41959:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1803,
																		"name": "want",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "41942:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																			"typeString": "function () view returns (contract IERC20)"
																		}
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41942:6:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$99",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 38,
																"src": "41942:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41942:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1802,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "41934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41934:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "41934:37:0"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "41800:88:0",
										"text": " @dev A helper function to call deposit() with all the sender's funds."
									},
									"functionSelector": "de5f6268",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41912:2:0"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41924:0:0"
									},
									"scope": 2163,
									"src": "41893:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "42225:495:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1820,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "42235:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStrategy_$1666",
																"typeString": "contract IStrategy"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "beforeDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1617,
														"src": "42235:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42235:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "42235:24:0"
											},
											{
												"assignments": [
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "_pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1890,
														"src": "42270:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1827,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "42286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42286:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42270:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "42329:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "42329:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1837,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "42349:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																],
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42341:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1839,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "42356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1830,
																"name": "want",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "42305:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42305:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1302,
														"src": "42305:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$99_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42305:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "42305:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1842,
														"name": "earn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "42374:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42374:6:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "42374:6:0"
											},
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "_after",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1890,
														"src": "42390:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1847,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "42407:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42407:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42390:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1850,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "42426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1853,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "42447:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1851,
																"name": "_after",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "42436:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "42436:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42436:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42426:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "42426:27:0"
											},
											{
												"assignments": [
													1858
												],
												"declarations": [
													{
														"constant": false,
														"id": 1858,
														"mutability": "mutable",
														"name": "shares",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1890,
														"src": "42507:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "42524:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42507:18:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1861,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "42539:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42539:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42556:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42539:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1882,
													"nodeType": "Block",
													"src": "42606:73:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1870,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "42620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1878,
																			"name": "_pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "42662:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1873,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 538,
																								"src": "42642:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1874,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "42642:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1871,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1815,
																							"src": "42630:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 336,
																						"src": "42630:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "42630:26:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1876,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "42629:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "42629:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42629:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42620:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1881,
															"nodeType": "ExpressionStatement",
															"src": "42620:48:0"
														}
													]
												},
												"id": 1883,
												"nodeType": "IfStatement",
												"src": "42535:144:0",
												"trueBody": {
													"id": 1869,
													"nodeType": "Block",
													"src": "42559:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1865,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "42573:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1866,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "42582:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42573:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1868,
															"nodeType": "ExpressionStatement",
															"src": "42573:16:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1885,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "42694:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "42694:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1887,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "42706:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "42688:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42688:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "42688:25:0"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "41984:185:0",
										"text": " @dev The entrypoint of funds into the system. People deposit with this function\n into the vault. The vault is then in charge of sending funds into the strategy."
									},
									"functionSelector": "b6b55f25",
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1818,
											"modifierName": {
												"argumentTypes": null,
												"id": 1817,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1602,
												"src": "42212:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "42212:12:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "42191:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "42191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42190:14:0"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42225:0:0"
									},
									"scope": 2163,
									"src": "42174:546:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "42904:122:0",
										"statements": [
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "_bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1915,
														"src": "42914:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1895,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "42914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1897,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "42926:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42926:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42914:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1905,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "42975:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStrategy_$1666",
																		"typeString": "contract IStrategy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IStrategy_$1666",
																		"typeString": "contract IStrategy"
																	}
																],
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1903,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42967:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42967:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1907,
															"name": "_bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "42986:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1900,
																"name": "want",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "42947:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42947:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1277,
														"src": "42947:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$99_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42947:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "42947:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1910,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "43001:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStrategy_$1666",
																"typeString": "contract IStrategy"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "43001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43001:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "43001:18:0"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "42726:150:0",
										"text": " @dev Function to send funds into the strategy and put them to work. It's primarily called\n by the vault's deposit() function."
									},
									"functionSelector": "d389800f",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42894:2:0"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42904:0:0"
									},
									"scope": 2163,
									"src": "42881:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "43158:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1922,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "43187:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "43187:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1921,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "43177:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43177:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1920,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "43168:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43168:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "43168:31:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "43032:89:0",
										"text": " @dev A helper function to call withdraw() with all the sender's funds."
									},
									"functionSelector": "853828b6",
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43146:2:0"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43158:0:0"
									},
									"scope": 2163,
									"src": "43126:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "43479:500:0",
										"statements": [
											{
												"assignments": [
													1935
												],
												"declarations": [
													{
														"constant": false,
														"id": 1935,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2020,
														"src": "43489:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "43489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1943,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "43530:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43530:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1939,
																			"name": "_shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "43516:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1936,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "43502:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43502:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "43502:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43502:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "43501:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 358,
														"src": "43501:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43501:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43489:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1948,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "43560:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "43560:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1950,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "43572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "43554:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43554:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "43554:26:0"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2020,
														"src": "43591:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1953,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "43591:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1963,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1960,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "43625:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																],
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1958,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43617:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1955,
																"name": "want",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "43600:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43600:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "43600:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43600:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43591:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1964,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "43645:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1965,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "43649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43645:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2011,
												"nodeType": "IfStatement",
												"src": "43641:287:0",
												"trueBody": {
													"id": 2010,
													"nodeType": "Block",
													"src": "43652:276:0",
													"statements": [
														{
															"assignments": [
																1968
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1968,
																	"mutability": "mutable",
																	"name": "_withdraw",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2010,
																	"src": "43666:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1967,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "43666:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1973,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1971,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "43689:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1969,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "43683:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "43683:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43683:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "43666:25:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1977,
																		"name": "_withdraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1968,
																		"src": "43723:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1974,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "43705:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStrategy_$1666",
																			"typeString": "contract IStrategy"
																		}
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "43705:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43705:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1979,
															"nodeType": "ExpressionStatement",
															"src": "43705:28:0"
														},
														{
															"assignments": [
																1981
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1981,
																	"mutability": "mutable",
																	"name": "_after",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2010,
																	"src": "43747:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1980,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "43747:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1990,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1987,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "43786:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_EvolleVault_$2163",
																					"typeString": "contract EvolleVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_EvolleVault_$2163",
																					"typeString": "contract EvolleVault"
																				}
																			],
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43778:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1985,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43778:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43778:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1982,
																			"name": "want",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "43761:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																				"typeString": "function () view returns (contract IERC20)"
																			}
																		},
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43761:6:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$99",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "43761:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43761:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "43747:45:0"
														},
														{
															"assignments": [
																1992
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1992,
																	"mutability": "mutable",
																	"name": "_diff",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2010,
																	"src": "43806:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1991,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "43806:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1997,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1995,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "43830:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1993,
																		"name": "_after",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1981,
																		"src": "43819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "43819:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43819:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "43806:26:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1998,
																	"name": "_diff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "43850:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1999,
																	"name": "_withdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "43858:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43850:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2009,
															"nodeType": "IfStatement",
															"src": "43846:72:0",
															"trueBody": {
																"id": 2008,
																"nodeType": "Block",
																"src": "43869:49:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2001,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1935,
																				"src": "43887:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2004,
																						"name": "_diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1992,
																						"src": "43897:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2002,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "43891:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2003,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 280,
																					"src": "43891:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "43891:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "43887:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2007,
																		"nodeType": "ExpressionStatement",
																		"src": "43887:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "43958:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "43958:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2017,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "43970:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2012,
																"name": "want",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "43938:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43938:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1277,
														"src": "43938:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$99_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43938:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "43938:34:0"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "43212:220:0",
										"text": " @dev Function to exit the system. The vault will withdraw the required tokens\n from the strategy and pay up the token holder. A proportional number of IOU\n tokens are burned in the process."
									},
									"functionSelector": "2e1a7d4d",
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "43455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "43454:17:0"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43479:0:0"
									},
									"scope": 2163,
									"src": "43437:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "44210:306:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2032,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "44236:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_EvolleVault_$2163",
																			"typeString": "contract EvolleVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_EvolleVault_$2163",
																			"typeString": "contract EvolleVault"
																		}
																	],
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2030,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44228:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2035,
																				"name": "_implementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2024,
																				"src": "44255:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2034,
																			"name": "IStrategy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "44245:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IStrategy_$1666_$",
																				"typeString": "type(contract IStrategy)"
																			}
																		},
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44245:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStrategy_$1666",
																			"typeString": "contract IStrategy"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vault",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1609,
																	"src": "44245:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44245:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44228:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726f706f73616c206e6f742076616c696420666f722074686973205661756c74",
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44281:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d06d9f1cf1cb47b4c164a82a99136bb279d51ecac86ea5fd348be592f7bfe2e",
																"typeString": "literal_string \"Proposal not valid for this Vault\""
															},
															"value": "Proposal not valid for this Vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d06d9f1cf1cb47b4c164a82a99136bb279d51ecac86ea5fd348be592f7bfe2e",
																"typeString": "literal_string \"Proposal not valid for this Vault\""
															}
														],
														"id": 2029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44220:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "44220:97:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2043,
														"name": "stratCandidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "44327:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
															"typeString": "struct EvolleVault.StratCandidate storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2045,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "44389:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2046,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "44432:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "44432:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2044,
															"name": "StratCandidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "44344:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StratCandidate_$1685_storage_ptr_$",
																"typeString": "type(struct EvolleVault.StratCandidate storage pointer)"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"implementation",
															"proposedTime"
														],
														"nodeType": "FunctionCall",
														"src": "44344:115:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StratCandidate_$1685_memory_ptr",
															"typeString": "struct EvolleVault.StratCandidate memory"
														}
													},
													"src": "44327:132:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
														"typeString": "struct EvolleVault.StratCandidate storage ref"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "44327:132:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2052,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "44493:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2051,
														"name": "NewStratCandidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "44475:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44475:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "EmitStatement",
												"src": "44470:39:0"
											}
										]
									},
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "43985:156:0",
										"text": " @dev Sets the candidate for the new strat to use with this vault.\n @param _implementation The address of the candidate strategy.  "
									},
									"functionSelector": "5b12ff9b",
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2027,
											"modifierName": {
												"argumentTypes": null,
												"id": 2026,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1513,
												"src": "44200:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "44200:9:0"
										}
									],
									"name": "proposeStrat",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "_implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2056,
												"src": "44168:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "44167:25:0"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44210:0:0"
									},
									"scope": 2163,
									"src": "44146:370:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "44801:473:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2063,
																	"name": "stratCandidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "44819:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																		"typeString": "struct EvolleVault.StratCandidate storage ref"
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "implementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1682,
																"src": "44819:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44860:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44852:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2065,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44852:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44852:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "44819:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468657265206973206e6f2063616e646964617465",
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44864:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd89e0da76576d0c02b1731f203bfb3440dbeacfaecd99d6f04131a27cd8ca1b",
																"typeString": "literal_string \"There is no candidate\""
															},
															"value": "There is no candidate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd89e0da76576d0c02b1731f203bfb3440dbeacfaecd99d6f04131a27cd8ca1b",
																"typeString": "literal_string \"There is no candidate\""
															}
														],
														"id": 2062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44811:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "44811:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2077,
																		"name": "approvalDelay",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "44938:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2074,
																			"name": "stratCandidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "44906:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																				"typeString": "struct EvolleVault.StratCandidate storage ref"
																			}
																		},
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "proposedTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1684,
																		"src": "44906:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 280,
																	"src": "44906:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44906:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2079,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "44955:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "44955:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44906:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "44656c617920686173206e6f7420706173736564",
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44972:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68d78fa197bf0b20149fd726ff33ff5aa05819c7985dd8bf3f524bc84a6e33c8",
																"typeString": "literal_string \"Delay has not passed\""
															},
															"value": "Delay has not passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68d78fa197bf0b20149fd726ff33ff5aa05819c7985dd8bf3f524bc84a6e33c8",
																"typeString": "literal_string \"Delay has not passed\""
															}
														],
														"id": 2073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44898:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "44898:97:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2086,
																"name": "stratCandidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "45024:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																	"typeString": "struct EvolleVault.StratCandidate storage ref"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "implementation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1682,
															"src": "45024:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2085,
														"name": "UpgradeStrat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "45011:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45011:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "45006:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 2090,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "45065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStrategy_$1666",
																"typeString": "contract IStrategy"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "retireStrat",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "45065:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45065:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "45065:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2095,
														"name": "strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "45097:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStrategy_$1666",
															"typeString": "contract IStrategy"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2097,
																	"name": "stratCandidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "45118:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																		"typeString": "struct EvolleVault.StratCandidate storage ref"
																	}
																},
																"id": 2098,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "implementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1682,
																"src": "45118:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2096,
															"name": "IStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "45108:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStrategy_$1666_$",
																"typeString": "type(contract IStrategy)"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45108:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStrategy_$1666",
															"typeString": "contract IStrategy"
														}
													},
													"src": "45097:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$1666",
														"typeString": "contract IStrategy"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "45097:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2102,
															"name": "stratCandidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "45158:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																"typeString": "struct EvolleVault.StratCandidate storage ref"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1682,
														"src": "45158:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45198:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2105,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45190:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "45158:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "45158:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2111,
															"name": "stratCandidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "45210:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StratCandidate_$1685_storage",
																"typeString": "struct EvolleVault.StratCandidate storage ref"
															}
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "proposedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1684,
														"src": "45210:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35303030303030303030",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45240:10:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000_by_1",
															"typeString": "int_const 5000000000"
														},
														"value": "5000000000"
													},
													"src": "45210:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "45210:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2117,
														"name": "earn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "45261:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45261:6:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "45261:6:0"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "44522:232:0",
										"text": " @dev It switches the active strat for the strat candidate. After upgrading, the \n candidate implementation is set to the 0x00 address, and proposedTime to a time \n happening in +100 years for safety. "
									},
									"functionSelector": "e6685244",
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2060,
											"modifierName": {
												"argumentTypes": null,
												"id": 2059,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1513,
												"src": "44791:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "44791:9:0"
										}
									],
									"name": "upgradeStrat",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44781:2:0"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44801:0:0"
									},
									"scope": 2163,
									"src": "44760:514:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "45482:185:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2130,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2124,
																"src": "45500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2133,
																			"name": "want",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "45518:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$99_$",
																				"typeString": "function () view returns (contract IERC20)"
																			}
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45518:6:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$99",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$99",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45510:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2131,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "45510:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45510:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45500:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "21746f6b656e",
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45527:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b08df48b67a8acda5828e85af8c62865fe7bd53995164d29920fdc8d1b5e5d9",
																"typeString": "literal_string \"!token\""
															},
															"value": "!token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b08df48b67a8acda5828e85af8c62865fe7bd53995164d29920fdc8d1b5e5d9",
																"typeString": "literal_string \"!token\""
															}
														],
														"id": 2129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45492:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "45492:44:0"
											},
											{
												"assignments": [
													2141
												],
												"declarations": [
													{
														"constant": false,
														"id": 2141,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2161,
														"src": "45547:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2151,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2148,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "45597:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EvolleVault_$2163",
																		"typeString": "contract EvolleVault"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45589:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2143,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "45571:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2142,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "45564:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45564:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "45564:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45564:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45547:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "45641:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "45641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "45653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2153,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "45620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2152,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "45613:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45613:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$99",
																"typeString": "contract IERC20"
															}
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1277,
														"src": "45613:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$99_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$99_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45613:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2160,
												"nodeType": "ExpressionStatement",
												"src": "45613:47:0"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "45280:132:0",
										"text": " @dev Rescues random funds stuck that the strat can't handle.\n @param _token address of the token to rescue."
									},
									"functionSelector": "def68a9c",
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2127,
											"modifierName": {
												"argumentTypes": null,
												"id": 2126,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1513,
												"src": "45472:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "45472:9:0"
										}
									],
									"name": "inCaseTokensGetStuck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2162,
												"src": "45447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "45446:16:0"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45482:0:0"
									},
									"scope": 2163,
									"src": "45417:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2164,
							"src": "39098:6571:0"
						}
					],
					"src": "33:45636:0"
				},
				"id": 0
			}
		}
	}
}